(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    808142,      14613]
NotebookOptionsPosition[    805306,      14515]
NotebookOutlinePosition[    805653,      14530]
CellTagsIndexPosition[    805610,      14527]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.669535759933158*^9, 3.6695357703706627`*^9}}],

Cell[CellGroupData[{

Cell["Quadratures for FEM", "Title",
 CellChangeTimes->{{3.67274913464913*^9, 3.6727491400116396`*^9}, {
  3.672749178747164*^9, 3.672749181511141*^9}}],

Cell[CellGroupData[{

Cell["Integrals over elements (triangles)", "Section",
 CellChangeTimes->{{3.672749195568788*^9, 3.6727492091998425`*^9}, {
  3.6727501704611273`*^9, 3.6727501749239335`*^9}}],

Cell[CellGroupData[{

Cell["Basis", "Subsection",
 CellChangeTimes->{{3.67275518652402*^9, 3.672755187973054*^9}}],

Cell[TextData[{
 "Basis functions for linear space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "1"], "(", "\[CapitalDelta]", ")"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"v", ":", 
         RowBox[{"v", "(", 
          RowBox[{"x", ",", "y"}], ")"}]}], "=", 
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", 
         RowBox[{"b", " ", "y"}], "+", "c"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "\[Element]", "\[CapitalDelta]"}]}], 
      "}"}]}], ",", " ", 
    RowBox[{"\[CapitalDelta]", ":=", 
     RowBox[{"triangle", " ", 
      RowBox[{"w", "/", " ", "nodes"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}]}]}], ",", " ", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.672752379555704*^9, 3.672752581281209*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["y", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["y", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "3"], ",", 
       SubscriptBox["y", "3"]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"element", "=", 
   RowBox[{"Triangle", "@", "nodes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basisCoef", "=", 
   RowBox[{"Inverse", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["x", "3"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["y", "2"], ",", 
        SubscriptBox["y", "3"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "1"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"basisCoef", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "2"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"basisCoef", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "3"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"basisCoef", "[", 
    RowBox[{"[", "3", "]"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "1"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6727526806962247`*^9, 3.6727527860463743`*^9}, {
  3.6727529249166718`*^9, 3.6727529556756525`*^9}, {3.6727532559615955`*^9, 
  3.67275349349656*^9}, {3.672753562381133*^9, 3.6727536175676937`*^9}, {
  3.6727536495390716`*^9, 3.6727537076852503`*^9}, {3.6727537668418427`*^9, 
  3.672753900022877*^9}, {3.672754008225913*^9, 3.672754108422325*^9}, {
  3.672754211354912*^9, 3.6727542117026143`*^9}, {3.6729042615496807`*^9, 
  3.6729043232475414`*^9}, {3.6730170609516764`*^9, 3.6730170856143513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Triangle", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["3", "4"], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Phi]", "3"], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "3"], "\[Rule]", 
        FractionBox["3", "4"]}], ",", 
       RowBox[{
        SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "K"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(3\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Basis functions of \!\(\*SubscriptBox[\(P\), \
\(1\)]\)(\[CapitalDelta]), (\!\(\*SubscriptBox[\(x\), \
\(1\)]\),\!\(\*SubscriptBox[\(y\), \(1\)]\))=(0,0), \
(\!\(\*SubscriptBox[\(x\), \(2\)]\),\!\(\*SubscriptBox[\(y\), \
\(2\)]\))=(1,0), (\!\(\*SubscriptBox[\(x\), \
\(3\)]\),\!\(\*SubscriptBox[\(y\), \(3\)]\))=(\!\(\*FractionBox[\(3\), \(4\)]\
\),2)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.672754109644085*^9, 3.672754129164958*^9}, {
  3.672754274711578*^9, 3.672754360859954*^9}, {3.6727544978119197`*^9, 
  3.672754497944442*^9}, {3.6727545419532824`*^9, 3.672754712065358*^9}, {
  3.6727547716724033`*^9, 3.6727548433633184`*^9}, {3.6727550011061563`*^9, 
  3.6727550161617146`*^9}, {3.6727550482013216`*^9, 3.672755059900308*^9}, {
  3.6729022161559315`*^9, 3.6729022536902018`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
eCMW8ftpkjdi0QXhjVj8MQdvZGCg541Y/ILwRizmIbwRi5kIb8RiCMIbsZiE
8EZ8P0fPG7GI8kYsZiO8EYvJCG/EYiHCG7GYgfBGLOYhvBGLMQhvxGIiwhux
mIrwRiwWIrwRi6UIb8RiMcIb8X0tPW/EYjnCG7FYjvBGLJYivBGLrghvxKIP
whux+BHhjVgMRngjFl3m4I0MDPS8EYufEd6IczJ63ojFWIQ3YjEa4Y1YjEJ4
IxZ/ILwRi+EIb8RiwBy8kYGBnjdiMQDhjVgMQXgjFj8hvBGLHxHeiEWUs2Gx
F/Ebcf5Hzxv/O8+j5434h543MjDQ80Ys9iJ+IxZfzsEbZ/nkf+GNWOxFeCMW
8XFFzxtRzxPvh7neOzaY4/3fjDneO56rnbneU57r/eK53j+tcbZ4FlHUDq8z
F9AEosf+x3qco3+kew/Of4734zTTv/9adaoLxnKTZBRfkF7NXO8n/m/zc72X
N9d7XnO9XzlXXmV2f+hB9/6LyhzvxeDtrJijHS+6+rnex/EyXSgZtaUXmHPZ
LMd0c/7H+krLqxryX3uBjeUKn25P5H/n//8XP3kuDxmfRxx0njDLLB++Suej
Lp7NX5kjT++vzuUVz3Wcc82Lucb/XPPlfzsf55pHc73XP1d+rnn0v52P/3/P
o//tvP7fzru53heeK/+/naf/23k31/yda77PNe/+t/MX+6DPm+aad//Pef1/
mb9zeen/0/yln6dz+dtzzfe5/Hbsg3r7cz2n+6drt7YCZWqk8rZWH7yTqq/9
NJEAeP66zpGr/uW9YHJT5u31B4nwT4PupMLuwUmNS+2jcPehcLr09Uwif34v
d9ZY7hic2MNyyedJBpEXWqu9LuXNCJgop7PWxGQRef/HOa/MNo3AWOdlV94d
2UT+x53Ge5y/m4C/pjbyiGkJke9Q6H7UNUGFSmrV4CuBEkidP/0ut6UdbrxI
F5m60g8b3w5/PbTJn8jPO3vh8gaOfvj94jMtUzGAaIf72YejOS8mwKbVua44
MY3Ie99jDQu+PwGMU5yG3TVp8K3npHVpewukXf6qX7Z+EuTzjrCEmEUR+cgG
QWsx80nQypFon4j8RfSbtWzyZI3DH/hy9YWgreoXot7u1QrG9L1TkKB1q7Xg
UCRRj70WMQ2K/8bXPSLPWLltoJr1L0gJTPxY/cmVOM64uzqirocmoHUqdWTJ
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
Vl1YuO/Ezz2uKLNuK38dOStRx18Y664P37Pf3OV8gh7Pb271q20xzk+tT2u/
6ZvD8Tp+rO1Eh7IBAert4+Zx239M0MdlirXZ86fJvurDgjvjx82N0+2vGuvb
h+bGmS9YiDx+rqq5r9ToB2uvqaDjyYNSwhL0OFccmNKg58gAdXh/bKsblvE6
vnrci1/szwer3F5jxk6KTdTxv4vlVN2521e5zx7s2cwpVW/PpGP1j4d/rmfe
5HbOl2ufruNnFkeWalt4o0r8Ml7RenvwOx25P7e3WZoWr+N+ewe51mwXqKYf
nV9x76VEHXet7trSe7CPOhTgH9FvYbKOvx7au8abbu4Kv6uAv+tVYUmBFd12
dByobJ5sWZ+uxx+P12nnhYXDfk7S/fj8eXOu9xkv5fM4KW3V+RS9vz1e+D2v
OtpFLWzROWZjeWp/MGBH2YLu3up+sruz+4B03b5E9e0Vyl24rKrkK9jm49s4
3d6m//0RlcyDVcSpCQnFCmXqePm3az6s6ri1Y1LjOF+z0Ex9Pd5bMe7mlneL
VWKQxZw55ek6fT/uXtpkZxf1uufFwTfHZuvrK/xOYSe/lPnqgc/ViDPrs3Q8
8volv9XLjqpWpT/7pDHJup9bi8s86H3QS1lNWnPdzyJab/+vTZpU7Jb+RAUn
bTt4YHasjqed/67pbwfD1IFz07Y5hsfp+MZOced3/hSippTumbl+TZZ47yfL
Ya6rzQPi7Ar0XzOy6MYnKqjCg127RxJXkr//rT6/OUSrtZkbZkxNpeeT9Tu8
/mHI9jj1yuZA17Qt9J5K6riuIztkhavuVy8M7bOV+MeN0yNXuS2NUeOWJk5t
1Tpe72+R5NB8pw+HqAbbqlTY/Yh4Ultbyzvx88NURrMOOYUKZAvfs9rH43S9
c8ST+runbHlwOVgtb225PdWcOMeAy01vdX4SrHZXtHzZtUuc/t2DDt3TNm8I
U8VDetScmEnvM0V75R9Rw+maGmEblNGrIL3PNK/mlgL53l1VdsOL//rqKPFB
bQeNmFt+crQ6s7TNVLuy1P6Z/cKa1fZeVaWTW90e3Jbecxpj38UzuJmTajj9
wMe/mtJ7Et8Oubn7t71XlHsRyx7TVhEPOCzq5bi2+SOV2ZgfZ1fvQNyN/7Zv
lmV4Ris1yWvVudH0HtjBMxn28w96qmbeVncTJ9N6FTPXvxrXq4O/OlBne8Nl
Z/+zrr9T+igPyzi1OdvyL5+cFD0+o9+u+TF9qKsaeTN0YV2bFP27E951+7C0
iK9KDhy0rclQej+j3JKzK8fc9VVB39pnvC9O7xk0bta4iNmzADXPrv7bcheJ
T2k+7vTzPxolqjZ2/YekHKXvJwwYV8HNrGW8sg/o2e9wP+JSm/7ZbMecO1Fq
xNUH9oNn0/t5bWdVNg8Z4aqOfslHwTqO31G67HPoze6PxKfbDKr4OrpwsKr7
+GnurJ/ovZPa9UYFeoy+rn5v0XDENydo/bym7au5rWker4avnRVruy5Dz+dx
uSeXx58/0vHVzMZtzMdTvHGzkseGtl+gaq9NnNrmXZqOdyzw55Le188o9/fe
60/3pPcktvrfO7z0Hy+1+Uzuqt/bEA++rFaNy5YtXJRXuZ7Lb2+k93I+vrm0
YWLgXWV7cGzwli30/lBVx79SHl50VP+eODAsLpzye/Ivlm2trAPUmpLLn1/w
o/ddogKHFjo3yV/NGfhxWnYv+k5mkf5DzC0XBymLwjNOxkyi72B7Nwywqn8k
Vs2o0yUqZzjxVuZpd1o3GBalemR3KZb7n+91Txh+O9Kie5jqZLO1yKi+xJlO
z2z5ZPDcJ6qReZ3xs99m6Hizj1X2XetxS7lu7O51fli4jm+7XKiMZVi8KtCt
VOuy5vSdnASHmmuTQwNVtSYretvF03pCV4I7j3P87BMvVavQ1K8Xfc+tmu2u
cVVj4pRTZAGzLjfou1j+L6bsLmHpp2bULd+h8XL8LoGjqvf3iHYXNmYr2x8X
Z8X+9lTHbZJr1a/VbbCaZTFl1HMXLx0/PqzZqbV+aWpAn6YfO0Tj9eKnhiZ7
vt7c21/tXNbi+tb6yTruu8J5U9qVIGVfKdfxzALidE6UrLO3SZ84Vczzu/U/
dorT7WOT41NnbIhWE0a0cny8iuKN3R4smvExSlVsWebMruWJOu5eptjJqMJh
qmbpkSWTYil+aeSiyA7dQtWjD90L2mZk6t8dHfJ4j8fNa8ra89lGi7kZOr6h
y9VbW60eqtQWF2otqJSg+6ld1vuSRdATZX3Efe7amul6HOzfl2z9YuUj9dTy
TbPsStE6vs596yTbl3Fqe41fb0W3idPxyOWWm3rtilG3+m1r8HNglu4/3++N
tnRedFmdbnlsSdWNKbr939ZBRb0/zyeVXde0c5qWpbcz5oRvVin3S6rL341K
ROr3KsJU4DWPi0d9PRR+74Xfd1y0r/rr1atydHuMfyy2octP7VP19qS5tEg5
V8VPBakbPXZfoPierEUhN6x8VPU6g5f0n3BWb2d777V1R2dkK598Vg9WdaH3
L1f2Pe5dsqibWvCy2M9T/qVxqBD4qWfr4tEq/PajYW8XROj4n/nqDinYO0G5
zX5T6k1CuP5d87WVctdtT1Bvzju0PvgmWMffT+w07traJNVv2tJqH3PCdD8/
fe+Tk39TorplPqBI8YQAHa8ZOOHtsu0pKjnZXKU/C9LxTTNWjCm5MVldezal
t29Coo7vfNJz5uQOYSrKavrmolvc9O+umtYu7NPhdBVs/eHF79vv6PiKstcO
ml3MVGc2Oz92n08cTfVm7ltrWiWr26V/8h46jLiMv3KWbRsZlqQ2D7s61PY7
WmfFzOXZ+LgfUtXZ3Zmji/Wj+0k1fU/3+Rj5Od+sv/emTkUXHfdYnHOr3b10
daHKyd0JDvRdi15zPw7wHp6qrn1pd1NvJ35vaEKhjMq2fxP/rn5tkdrZAety
WkczyKhrlw7Linvs7qP7OWAf7jRgO753FqDnbfzuXsS5Zb90e0icUb4VuQ8n
nkhSbUOOLbz5xkWPc9Mz8RbWq/E6PK3jeB5/u9q3ZsdT6fp3VydWmFxpppsa
1OTNbN8yNF+98Zrpatd4i5r+3mrt+1mpOl7PeeXzovX9VWSBDPMBTlk6XtTn
Y7O9b6+r8Nk3CyxfQPEay3d5Wcy7pW7HOpU4G0/9lH5t4TZuma8qMeD5Nw4e
GTru0mlCmnWis+I+t7btHNv2dSKFz7U8ands8Ofzivvcj5s8rY9G3BA+9y9f
J/XggqvwuW+21Uv+6Wyo8LnXjr9c0bf+E+Fz8XuF3OcO21HTak7vSOFzcX7g
PreGtaf52+2rhc9dsWfhpVcZl4TPxe95cZ+bNG9bKY97a4XPxd/lPhe/n1X0
kVfdXSMonrx8ZtF3uRcU97/NF83d2mXrA+F/sX/uf72qvD1VPfey9L8jiixp
EXFC+N+JhzpOjnbYIPwv9s/9r5d/uT8sigQJ/3vttWOBgnvchP+9c35g/Q0R
94X/bbXlSLv3Vx8J//v2x8DFg/t7CP/rOHnj8J/jfIX/xe3k/rf0H2Ydbt+7
Kfxv3MApLwI/Ogv/e/7bxCKnSnkJ/7vb+B4l97/43Tfuf8OjFtwIPO0m/K/v
4Jjm7RYHCv9b/NC+igdsXYX/Pb/mRLLzrTDhf/vaj0uP6XNJ+N8A4z4A97/l
4/eXGeYaq+dLjOP3SbkvLtu08oCSKlT4YtWle91eKcnCFxfy7H2hbelk4Yuv
2s2deDAwUPjitMSHDg3CjwtfXHPhthxV+4rwxUda78sNaHFX+OK9hl/o7Fu/
+MhJFJ/79pV3dk684n55yoAizSy2BAq/vHdhtyHzwlyFX37e3eFTo5S7wi8/
GtCsedpPvsIv767XarzHphvCL5d92WVNs0Juwi/Hlh3j1/NEsPDLmHdsamc2
+P4mrRPQ8cah3PYPExX30csevkiaNyVI+Ojbq593f77OV/jotElTr01p7iR8
9OJ8DVyfZsYIH11uZs+RN6vHCh89ac+kVg3G+ggffdmqxJB5bWKFj15Rs+ir
x2sihY+eP7FJYJ2bicJHtwjq1TWtdIjw0bdqtqvXuneg8NFxNVpuWOEbJny0
c1bzd8/igoSPHtxijl3z+R7CR/8yofUhr39ChI9uXLn/4Obr44SP7uZd8IrN
nXDhoy1+Oj+jeoNQ4aPXbXNIG1H+kPDRd75zOVLf84bw0e1zBjutuusufLTZ
/ap+j58+ET56UkzBbQeWbunIfXTRcfXOdS0WJXx0/NjjD1b8Ei98tNmAkx/V
BBfho68Y90W5j859nnhmdmKQ8NH9vxtS8kLFAOGjC1n8e2LB4Qjho7ct7rv/
25UxwkevP/mqt/eOOOGjA/56cbpqhQTho9e2HzMk5mGE8NHno1IOLvo7Vvho
mwnpti/2RwkfHbWv6txns4OFj94e2XzN0xthwkf3mN0y+rVnlPDRFq5FPH2O
hQof/fG3A52WfkoSPjpo3y+FN7t4Ch89ocSUKvsPxAkf/TLn/MgRj2OEj559
0e1t3MBA4aMt7Ee/9myfIHx06JUrV+cM2yZ89MekXYkT3mYLH61WRbX98MhV
+Oi2S2dkdY1LFD56mcNsu10NE4SPnnDupO2dZUHCRyc/v5t20iZC+Oi9ZrE/
2xeLFD7608S+e/bbxAkfXVztfpeeECd8dAOPQ+lmc1OFj768w2rOmdxk4aOP
ewRaPGsVI3y0Z5ukKUVOpAof/WRsS4vcKhHCRxedU2uc07xo4aNP/PHI/JeQ
dOGjqz2+P/dIsWTho3/bGlWjb3aq8NFHF659NtEsSfho/D4y99HBRt3z9k75
d/nzP9Xbk2jUDS861JtgGZKj41Gzxg9qGZ6puO9Obe/cZMz/vD/EfPe9ec9b
HLicJHy3zY1zJ3xPTxW+u+K/UTvKesYJ3+1beeCJwLcxwnc7ZRTs8WlRmPDd
e/3mZBRIDxS+e49FrzoDPvgI391y/7XiBV8EC9/dbbtZpoWXj/DdfuZDLJ/m
+gvf3WDT2s6DJyUI3/1NVYeNXZpdFb77ffiNetad1gnf3bbTffPfX18XvnuZ
VZlyV9bdFr670KvGwaOm3xC+22tA+4FtzrgK3x3u/C5+48LVwnd7lMlu+WeD
PcJ3Y73NfXfZneftu891E74b23PfXaPyk/1JgU7Cd2N77rut/q3WKd+yU8J3
V5jT5MT6D8glku/Gfrjv/uZqsTLdzqYI3+3mXnHy4B3ZwnfH7J66bGVOsvDd
gw4VKR3QLVP47v6FQ959ys0QvttySew3jSemCN9tk1L6XROrdPVHdLEPNja0
Pc+M65b7cRxv7sf1cWN+HMeV+3HkXbgfR16H+3GMcz+OvB334xjnfhzrFO7H
Mc79OMa5H8c49+P4vJ/7cYxzP45x7scxzv048ijcj2Oc+3EcZ+7HMc79OB4v
7sexPffjeHy4H8fx534c49yP6/WJmB/X7ykxP45x7sf1+/nMj2Oc+3GMcz+O
ce7H8Xe5H8fx534c++F+HPeX+3HNnTA/ju25H8f23I9jnPtxvE65H8c49+MY
534cr0fuxzHO/Tj2w/047hf34xgXz6mNOPfjyB1yP45x7sdxO7kfx7zB/TjG
uR/HOPfj+Lvcj+M4cD+O28P9OPbP/TjGuR/HOPfjuD3cj+P2cD+O7bkfxzj3
47j93I9rHpT5cYxzP479cD+O+ZP7cYxzP479cz+Oce7H8Xe5H8ff4X5c+wPm
x/X9fubHMc79OMa5H8c49+MY534c94v7cYxzP47bz/049s/9OI4P9+N6PSPm
xzHO/TjGuR/H3+V+XNePzI9jnPtx3E7uxzHO/TiOA/fjGOd+HNRD+HGMcz+O
ce7HsX/uxzHO/TjGuR/H/rkfxzj34xjnflzvF/PjoBeFH39mxLkfR66U+3H9
PJD5cYxzP47bw/04tud+HOPcj2Oc+3GMcz+Ov8v9OMa5H8d+uB/HceN+HOPc
j2Oc+3H8O/fj2J77cdxO7scxzv04/g7349ie+3F9nJkf1/dpmB/HOPfjGOd+
HPeL+3G8frkfx/bcj+N5yP04/p37cYxzP66PC/PjGOd+HOPcj2Oc+3H8O/fj
GOd+HP/O/TjGuR/H48j9OMa5H8c49+PYP/fj+npkfhz/zv049s/9OPbD/Tj+
f9yP4/nA/TiOs3gObsS5H9d+mvlxbM/9OMa5H9fnIfPjGOd+HOPcj2Oc+3GM
c5+YdHRfUujy30Q936/vuZ1Xty3ryOvhBg26VI+3nCvqybE/Fxja/PVqcb3j
fQx+vQ9a4/iqX8YisZ0z0seZL/hnY0fvPDjtvLjrvPjevHjUvDjP2dbNn69d
TT4F43nxPAvz4HnyGoe8nu+Xz+P5eF77m9f4/F+Nw//V/ua1X637WncKfYr1
xmu1ZOyWP0JHeKop+W90eFM/Sdd7ziUitvVd/EhtLljYo2luit7fws41/3h2
5JKqvSlgfoUBScTbh985Eh/vqnL+3RceWy9FxwtVbV9k2oc76kRssekhRWh8
GmfurR51frtKtmk4vUxgiv7dzVXLXok8eF8Vn/a0du+3qTr+S0JaZPUJ19S9
Kz2rDv+Qov3y7/6/VvOr8VAt7JzumhAVq+NdykR9amYZqgrUfe1S4lyy3t/O
ue/H55vnpEoU8Z0/0TdV+9PdZsMPNbp8X41eHVFk1qIkHS9e7e2iXzs+VkPy
u5Z8eihD9190wtmp1wvbqvGjWq5oWZD8WvEptSNOfQxWkdvsCwSXpPVBzT91
9pucHa4WN5nSyWpmhr7eb4RuvpCx+aza1LVNYi8L8u+Tz06oUHCXi3Lwbr2j
+9okHQ+3mTS63Ccf9bh35lGvpAi9nci3WLUpG+zajvyyVftu7W12RKg3P8wq
Um41+ZGoBsVD3q2JUsnXKnesbEfrvKZMnXfg5cRI9SRp54c480T9u2all4T0
jwhQ3j90XHhnM61b3PHZh9w9OaFqx6FrMx+3oXE4m1jz08L9wepF/h6/1H0X
qfsJDBk5L6NUlJodf/hUt7YUH/Hq0/c+/lEq+mCDJX9do+8SdIn5Lul+W2+1
z2roitU59N2D4fUXehcb5K7M3txoZR1H64j/8drpg/N6T7U+dNexsyujdf+d
8xdvNmVjhMq3a1/WgXnhtL+ubxa26xenvitc8eiSg1TnH4mtc87cJ1z5HJ46
a7QLrSe3bu2HO6HH4lW/njn2vgNofeilF1rWivZ3V3nNY/WqNFs9xTpeX7+H
3kek/zA6QllOHjcv+kdaz75c95plDgQ7q/3b2/U1y6b1I+tcKO73e4k49cq1
/x9NI+k72y/mFW+ZvTtBxdheCFw+NFz3X8javVSPnxLUgX9/e1f2O6onZ/66
54XH8keqhXtMYfsoZ8pTjYbc/elRhhofbvO25PjHOj7p9NkHnaalqeSK0fl9
WlK+G1PjapZfCzfVI3T68CbHM/T8E7jz9LYBK51U6lSX53f1eeuoGmVuMbd9
HaJ21B+/J8IrU+/XxwUtcvrevqzWLds2t8yebB1/f6BzvVofbFXbTiXPD+xC
dXLWE9tBB4pdUXXWVYiKmfqf+XBQ+WJVT05XPilJkb88o34ca2/v9q3deHV7
Rpkxi8wj9XYeKrSln8eieLXRtVmy07MYHZ92+VXpbuVi1aPk8Ttf3UzQ2z/1
6cCQCjueqF2rGvpW6eWu2++usqnXsrnpatMfLWcvukzrBg257X+w7rDP52v2
4VuvytD6f2eP+x7Y8Dbhs988dvF9tQDdz/Ae3U+sWZCidpexntdjDNWB24OL
RjZvmKos75yod29YkN6viG9D4+r+lKTsVuxYNmBtkD4fqu2ednXMw0TyDUZ7
F+P5HeQzWt/xen831/LFU1T/Mmc+dfbM1Pu7eH7pzDLO9xXPFzOXX/3Lt8wl
kS/6/Brl5+56X+SLSWHfDfPqdkmVen8oqWYHuj+/cFdEV+vVV0S+CPX1adAy
+LrIF50XNwx9Ottd5Au7tg+rP7R9JPJFh+Cgokfr+4p88deAyLWp3/qLfFFr
6c6W8ZePinwRax3o9Xv8fZEv+rpf6v7+ZrDIF6FLd8VWKSnzhXNm2NTKI8JE
vuhdpXi+Wh18Rb5okhZY0W6Mu8gXPyTZZznlRIl8Mbp4rx/uDw8V+cKuRs/d
N2oGiHyB8xLPFzXH9xl4enWAyBdx9460m97AQ+SLbebzVq77nE95vnh3/OOT
hM2PRb4oszdy+b7vA0S+KGpR5sbaQn4iX/xTZ3Efa6tLIl+49rzr8ueycyJf
9Gm8dG+fJTEiX8R2TxtcbnGcyBfJIy3LjUuJF/mi52/XrSaNuyHyRZl+N1fV
buIg8kWGn/nrot3DRL64Vcei/suTTiJffL6E4h9ejBL54ppxPfJ8UcyjnF/M
xSciX3xyD/kxfUiiyBfLT/1YeOgLP5EvyqaEbm119q7IF606PGxvcddX5Is3
rv6x+08linxRfNA59/Fut0W+aNX+dci3U91Fvvj5wrs3A6+niXzRpIh9j1Yn
U0W+GJUvPq1z4USRLyZtCluQ4p8s8sWI6II/Vj2UKvLFnsKTd4a7pqq6LF+s
GTDbaWpWugrZnG7V6lA2jcOwbk3v10wXeeRYn1G3Zr1KFXlk8+N17VZVCxF5
ZFS9004+r8JFHum0YuWmpe3iRR6Zb9uk9OST10Qe+aaHZaEWG66LPHI639HC
5Vo8Fnmk8ZEm35b73C/PI9/OmFXCP+aGyCM/vu60YuCG+yKPeDxOtr3U/4rI
Izhv8DyCcZ5HnE+7vXKyyhB5BK8Dnkf0+n0sj+D1x/MIxrkfwed6PL9gnOcX
jPP8gtvD8wvGeX7B8eD5Rb9/yfILjgPPL/i8jOcXjPP8gv3z/ILPEXh+wTjP
L3iceX7BOM8vGOf5Ra/DzvIL3v/h+QXPU55fcDt5fsHf5fkF++H5Bfvh+QX7
4fkF4zy/4Pbz/IJxnl/wuuT5RV9PLL/gdvL8gv3w/IK/y/MLjgPPL9ie5xe8
znl+wd/l+QXjPL9g/zy/YP88v2Bc+BHjvhnPL/r+LcsvGOf5Bf/O8wu25/kF
/z+eXzDO8wtuP88vGOf5BeM8v2D/PL/o+6ssv2Cc5xfcL55f8O88v+D28PxC
z8VM8wv2w/OLPn9YfsH/j+cXPE94fsH2PL9ge55fcH95XsgsEVjD74GDGP+U
XatOhZw9JPLFm/g+XuPaHsrTv+d1/xCvN7yurxrv+5hud6I6H/3bPyMsaT1/
/N3e63bedk6+p69bvN/4Y4tL5z3/s74Q/m7D+fHHvdJv6fbYz7Hph667Zp7V
v4fxuBmNtgTMcNftMX+VHNPMNjD7mp6nMX7Y+mj66Ka0Lre+Hzj894VP5tD6
pZi/nhrvs2D/mI8aGduJ/WNecDDGAfvB/j+uiLJ7NMWLzV+vVY7x3pPpd6Fz
1cl9m5/+3CRQb6d+nyVuiE3ILFrnE/sZtOF/XlyZp9tjHI+X/i6ksZ04bqbH
MVeVKnb9otukxzqO7avt2nrXaYKv3n6M4/HF8xv7cXHoWMS6Ia1Xj/HJXduv
D849rvcX88K9qYPyD2tE69Vj/3jcMY7n4VNj3PB3sb338walBn9P3/HBeEah
iDpWdek7O7gf+UOOtOn+HXEb+jx9mF2jXz36noVej3b7lWY9a9N3eXB7rhn8
P44bxvcY70mZfu8vVY+P6bglsu2k79kON64X/v3bUsZ5rt//Mfo5boyb6bzz
WY37qLhfOl8bcdPrMVOft/j/YzxiWf7K/evT94zwd4tU2dyxa61Ydr0kqnjj
fMP+8XfxfTHT+TJVHVmR72rlUjS/4O8eMa5f0/16qtd7wXkQ25cIbH7yyPY4
drxidXvT4xWrjyP+/7g9k4zzFvvX74NUqnHu0Db6bhde74PZ/Ib9lDauL9N5
IFUFsuta399m86d+f+er81WqsmfzBu4Xnoem80miqm5c1/y79F7GdWR6XYSp
t+z8x/gT43wwvU5j9fuhpudbrNpgvGdnuv1h6q4xD/A6D89DfH6O+XGOkc9e
mORLRzXO4HFNx8FPz6umxzdMlWb5AtvHG/OA6X456vPZ9Dx0VEWN8x/7177V
yBem2+Oo86Zp+1j9PqzpPB+mjztyuBgfYJxvpvk6Vl9f2F77/a/mizCdH03n
yTB9HZkeRz+1/WX909XLyDo+nzGvmrZ3VOWN6wX7xfaHjevddPwdVboxH5pe
p356/sR5A9s3a+TntNs2mbV31HnBdDxTdR43PX/8NLeK6zdiP12un/b5c2Mq
235HVev4q+v7tvC6L0x9n5Jwd8/mJL1OI8Z7G89fTbffTzkUffKgYgnOUYWp
KqOLXzqwNUFvD8Z/mHfXY+emFLadsfq+t2n/screeI8S4zhOuP24ndge76ub
9u+n7u287FWuWCpr76fw+bHp+MTqdWywH/zd5sbxMt3fVLXNOK9M+3fUfLPp
+eynphvzs+l16qfnVdPrwk/Pw6b9OCo7I2+atnfU9Y/pdeqo+rL5GfMRzxOa
n75vtts3JZzN5/8a/74p6mTkRXidXPD4//zOUVEnI9fC6+SML9u1XdTJyYYP
4XXyQ/a7pveF3Ni8/Vq9N+ZlXicjN8Pr5A1sO7H/gC/7d5fN/3gfyUPUyXeM
cRN18pd+vEWdnGMcf14n/2McT14n2/x1aVJMjj87jng/ykXUyS5ffu+RqJMP
G/wrr5PhuBwVdTJsR4iok5OM48Xr5HvGeWV6ftJ9GF4/83yM/ez58vtXRf2c
YJw/vH7eY4wDr58DjfHn9XOQcXx5/YzXOa+fcb7g9TOeV7x+XmkcL14/F7x1
auqYOfGifs4Ydeimc1yMqJ+rbJi59H++J87r5z3I57P6Odc4/3n9fKFl+42B
aVTnY9zeuI54/czPH4ybvvdC9bPpPE718yvjvOL1858Wm+ZFZHE+76nOf7x+
xvmH1898fsN4MDveuD3bv/xugvj/cB7g9fN2Yzt5/ez2pd0TNj/gfBkt6ucS
H3bOHjU7gc23mcrbuJ/L62e87nj9nGsor58jAlz+dk+IEvXzUXa9436fN84H
Xj/j/WVeP+8xOX7y/iSvnzON85nXzxUMXorXz6+N65rXz/uMeYDXz3gcef3c
YnizzYOnpYr6mR8X7L/dwWo7Bk5NY/vjqCKN8eT1M8xvaaJ+rmpcp7x+Nr0P
RfVI7cc/rRw2I1nUz13iiu7tP4XqQu1T8DtwrH42PV+ofsF5htfPeN3x+tne
ON/4cXU1znNeP98zqR+ofuZ5Ftu/N+YNXj+v+jJPxul5A9vzfIdxvI54/Wxj
9MPr55fG/MPrZzeT+Y3q5yPG9cLrZ6w3eP18y5iXeP0cZOQdXj/j/VZePwcb
+YjXz6+N64TXzy+N7eX1M+ZNXj/DXdQlHXn9jPUDr59vmdSB3H97iPr5jUld
R/XzTaMfXj9vMuZbXj/DfJgh6mfIXynsuvDT76/y+nn4RZ8zvSdmsfaOqqHx
3imvn3vX/edQv8kZrD3/vmci0yA2n9NzUn7/mZ+v/D1WXlfzvMX74XU1758/
P+V1tWk9Ld875nU1z3P8eSivq3ke4v1/va5OFXW16f8v3z/ldfXX50MZz2s7
ef+8rv56/fdc1CV5bWde48afS/K6mrf73+pqXi9+vZ/IPOM8b/N8Y1qf8bo6
UtTV/DricT6u/Hf5dcfraj5uPM7raj6f8rwn7kuzfM7753W16e9G5jlv8Div
q033X74Xyevqr9dnT9nxC/tfjpes674+Pplie75+vyFI1NV8/vl6P/I5O5//
vj4PZ4px5/3wuhr3i89/2P/X54kgMa78/gCP87r66+db3nU19vP18fIQdfVz
49+8rsY4r6vx77yu5vvF2/O6+rnJdsSKOK+r8e+8rn7x1fa8Pk0X28nraj5u
vB9eV/PzgffD62oe5/vF+zUd50gxPryuxr/zuhrb87oa/87r6q+3pzivI3A7
eF1tenz4fvLt578r37PjdTXGeV2N/fH5htelecW/fn1JjoLX1fhvXldje15X
43byuppvf179fH1+k++/87oax5nX1V+/Tvn2yPdPeV1tenzl+3q8rubtsb6d
aNwn5/XMJPY8COvb3Yav+X/ZdiBd
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNmWXAFtUWhcd3RhzeIQzsxMbuQq9xVRQQxCQkBCVUUhpBurtBkVSQVlBE
MFEssPXade0Cu/U+i7V/3B/722vOe+acM/vs/qq37HhZh1KSJCfwJ4XfnCfJ
u+ALiyRZVU6SrlmS3AP+m/EV/L6asZVQY8bvZfy/vHQf4314XsHzRzzP4fcb
ee7L+E3wpGKSLIZl8DE8rwOPhS9g3i/Mv4v3evPcg/Fe8PbQSnAH7cGcLvAl
zDkTfjfj/4LPZfzz1OOX87ws8VnPgBaBL4PvCw0Fb2Rezt4Pg+fz3tGMPwRu
B78L2gy+M/OzxpfAW0KTwa3gzbUf+AL4Yugt8LLM36Zv/Jb1u4GXgjtLXuzR
UWflbNfGOlqvGbQ9+MLM+2nfafCJ0KPg8fDW0B3gNvAdOfNzOhvrzeP5WfBc
eD1oJrgJfAt7DwIfDD4HmgM+TTzONivzWlpzQpxN96j7lGx13kWcczLrXKbv
gl8KnSAZwldAo6FJzH2YdxoyPgZ8D2OrwSvhj2kteG/WORV+tO4IPp15y+E9
GR8Kv5jxpfAx0JXgHvABzNkf3pQ5g3Q34GvA08qeMxF+X+7zPAKfwHNf5nRn
zjHwIxg/KfbS+e9izq58UzfwIZKJzgLtB53PvArwuvDBoYfSx+E8twd/klp/
74/vGspvV4NHwftBY8HXZX53AXhgZr2X/o+A/5hax3Qv13OOKpoPPy/21f5r
cs/fAL+Y5+vAteEjOP+x4JmMr4fOB1fg/qfy20ngIdpH8gT/xe87VPQ572fs
bOZcCD4Hvit0uHQAfjPvrAIPgJ8HTQVflfl9rfMnvFNm25S+Hg49Ba4Bf4n3
b0p8r5m+H/wb+EjwKPCh8GOgMeCzMstaMt8Pvj80AnwY/HjodvkX+LHQJPCJ
8BtChm0z2+N68Hes/xw0QXKA/8D5TpXuctdvp7ad63m+LeYcAP6KOQvB85DD
+TzPD5u9FJoCbgH/Nbc/mMc6V4QPScKuZZtN4ZfINhL7Nfm3e8G/894I6DTw
HPg12htcH94g/Eyt2GtefONjnK05+GLwH/Jt4C/hDWXz4N0z34Hu4p3QsQfA
i8Fnh/3Kjj/LPed7fR/n2U3fxvmvDF8nnzcF2gDeGX4S1DNk+yzvTJM8c/ss
+S7JUfKcCP4ZfhNrPo+fbwmvmXn8dOlwbv86m73+Si0r+d2+of+yg8qxpvzY
P7L7xD76Td59HFygm4NC/m9JBuyxk76TNRuF76oLr8S8p8FV4dN5Hhm6V6Wi
fV1leP/4XunwRXFHkvnzqb9Rcq4D1ZV/YOzb3Otsgb8dWGOynZ7MW84Zbi+s
i8vLlpHWmQKuzti14FPgpZBnFfhxsnPJjfXfyB2ntuaWlfR5Wdn+X3etPXaR
j5BOpj7bDPAm+ZaSbUq2pXtcAu4OrwiNA58M75E5jij2/ZFb5iXkUJN3GsjW
4PWg43TX8CsCa2x1xGLF5CdTn0Gx7ykRe3dkvQ9DJ9+Dfwr1Aj8sewqfPx6+
inkddE74LTy3BT8OXxhn0FnWQE3kB+CzUst/tmK/4gd4bozfDH4IvgA6EXwn
fB3UDLxevhY6CHw4fFisr30mQq3AD2gN6Cxw69S2pPMr9g/P7ddHwpdArcFD
uYsD+a0G+ODU9ruHYht3PhiaDp4s3Wf8ZdkfYzNCl6RTdzLeVHJgzj7KG+TT
4C8AuoJnMf41z53Ar6XOQ6T/r/P7PKg2eBH8jdQ+9j/wM1OfrWdqndC9zI/Y
tzt4jHQKagd+LrfcJf8ZZccC+YZunHN+xF/FYd3RCMY7MD5EeqBYo7sLv/1C
xO1a4LFxv5LnNrmmjpWK+a/GHb2uuJv626+Ft4QukF3A30wdK2XL3UMfnoE/
C90ofUO32qWOWYvgL6aWQ/+Yc0Pcu3z4I+H3NuW2iUGcv21ufejKcwuoDXgg
/Iw4g/a6CzoXPE57QjXBveElqDH415K/U9+rnGNFYMmgDFUH/1NyXqEcpEfo
QruINYqhF8nPpI7R0+BdmNMk3RYqtuUqD6aOs/V17rCXfrKhOFuf1PZycuIc
ZVTci+6nX8xXbrUwtz4vhe+SOl4rbiuPkh1thneLu+icOv/Rd3fiPE/Ar0+c
M9yRWk9uT50XScdkByPDXhrBd4b2B1eXPvJbffmr3LKrGTq5J7Qv+DB9Y249
WSffJj1InAcO5jmD1yucoyhXeQC+PWN7gz9AtlPLjstrc99XnfADx6W20xPg
V6eOpw2ln8xvKv1gzU94/3jG6/D8RG6f8GRu2z8nsQ1LN+qBz03ts3qFz1e8
2wDvzzpP5Y6/t7H2o3H+SaHbyqO030bFcvCtzHkaPFs6lrv20XcpF5MvUr6q
vLUDNB7cUbIPuUkH24bOS/eHle2bO8cZ5Lf6gZfAGzHnbvgO0KHg30qW2x7g
ivCVcS+6n3dTxyDFoo94Hg5ezNp7ZL533X8N6GDw96xTVfcH3hFeJbU/+YPx
neLedf/yV4pfZdY4KrWclWcrr1A+MplzHsLzXuHPFeOUi41W3cdaBzB+UOpz
6Dxf5q7dlAu9Bd4x8r1q8AE87wy+hd+n8P6eyrdUw4WvkD7LVhuHHD6DKoO3
lvy9OygW8l6FyDlT5Yy5/fmU3N+mb/wL3pN134NfyvyCdXdjvHJqO5e9byed
r4Q+8965hWukQYlzV+UkypsmRZ4jH65cZjVzOyuW8fv7ueX2XuQSyn/HMv9X
2Tnjn8F/Yq9dwL/A34eqgX+G/5Q6XijG/A7NCv05kD2HSZ7w3sqLJCvWHqJv
T3yfO8adpmF3wkPhe4Xt7C7d590P2edyzlMt9Er6pZio3xXv6kC/M6dv2fFF
frpWYd3QOlqvcshtb/hVhf1Rf+Y3iHWFR+X+/QrGjocfw/yTZcuFY+To3LG2
RviQ02POKfJR/HaG5Jnb3hUXFCdHgi+XDUVcawa+Djw2t75NE2fsyPAVlxT2
9bLZxsrfUuuD5su3XVl4/umJ68m+hXMU+RCdRzXpbvCGhe1nIOt8HD5HvqdJ
YT81uGxfJp8m+TaLmnYI4y0Kv9OLNdsXrt9uB88A7xV63qtwDFbsnla4FloC
bl44nik/aVnYD0oma8A35M7DWxeOzWPBbQr7mnHgBYVjj3xUK3Bj8CjGZxbO
4V5VnlY4/5vJ+JzC9d4K9SEKxyHV0cpjlM8cKd3M7X8kh9bQ2tATyVU1tWpr
2ZfmaO6nYaey1xtS5w9tUufxyufVk1D9rnufrPqCfW9NHWu6Fs5TZ8nHFq7f
lG/PKpxbKw+/CLylZL+xJezoB3gedaV8i+p21dFXwS+AjkrcZ/iuZJ8jG9Sa
22W22T6s9S1jdRnrV7Y/qK98qbA/Up42oHAsvye3X5N/Oy/8nmLin/AxPH+f
unf0VWlbOyv5omTfNkS2Ax9e2HffodhROK9SrpjL5plTQXdWuF+jWlU6I1+w
NPSkXe59J8iXZe75bA2Z6xv65N63N7wfVCh+5T6Hxj8vWV7VIi5cXLgH0VR1
T25ZSW+laxvAR6iWZc4XqXNX+WrFmEXMX1Jyb2pp+DT5JfnZVmXXd6rz5H/0
Xd3Ay1Uzl9wTG8E676f2n6vBI1X3ge+M2k819SWpezKyf+VSyqkaKO4x59/y
YYotzNtYsn1dlDonrKUYVLhO/im3D5K+qdchf6K6Qzo2PXcsk81qvcsjZ3gn
7F0xcKH2ylwL/xl3rfymI++sKllucyMOfSi95XkD4y3UE4WeKfnuukGbSrbx
ddLtzPWseqG3ZO7PrCpcd73COucX/i59n+pQ9VBUP95aOF9R3tI6YuiPJccG
xQjFL+UJyk9vLJwrK2ceDH+Q56mZ6+42uXODfVP7/sN016ljjXSkduH8XDFO
9cN9kaM8lDuudfq/mKu8dHxue1ItrJp4RSX3s2bkrqFGM/5u7h6RYuv28Ndy
1xQv5o6D6hGpdta4YubIwj5cddo4xhpFXJHvlT5qza+kl4n7sdslrkHUR1K/
+JvUfQP1XVXHqh7c1mth72fAC5UrFa5h1KssI5fJ0X9YlLnvpP5TJ8UTcPvU
/WH1pO9nzqTMfbBKmfvRqvd/ULxTfwc8TnYLvZy4VyzfoP7V6My/aY56re0K
10uqJX/LvZd88tKwL/XdpSMPJu4xqgaT3JTPf6C7Tqx7faJGku4NY96axHXl
8Ogdqff4cczXe+3ju9Qz+lg6rfHUvle1rurftanrss2p5aD8pHbmXp7u66jM
Ndr0xPWIbGV+4h6b/LnqfOX/e4cP3Af+CmPdE/dR1YNVn7Bq5l6W+igTC9cI
qn2ng9+I+31J95tYJq8kjlnqEavnrO9S3jq+sJ+R37s7cw/+hcTP6skzPfm6
5N6L6oKtDHRRDcBY87L7hOpNTuWFgYX7EapxXs59fvm9qnFm9aqa8/vaxH3X
v1P3alQI6o511+pbLiv8vwr1USXnLonrRunPE+AZmf2BdEm91bVl9/PV15e9
qsel/r/6YKovvmCdpYV7QPo/y0z4k+Gr1c/fBJ6fOT5sDCz5vRE2siDmzM78
/4JNMXZH2IXGZ8TZZA+bQ+7SQ/kQ7aeem+Qq+b4qXcwcL9RrvDvk/w0vrC3c
C1afbaVivfSy7L6Y7KViRX+v/l+xnt//By0yZCM=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmQncV1Max6//uem+91/2YUKEGcoyI3sMo4xKEVqUZCvapF2LpFJJe0l7
6q1Xi/Z4622jiJhiLBHD2Blk38XM8Pu+v+Mzn0+n//O7z73nnnvOc37P7znv
Me17NO9eSJJk9T5Jkur3SP03Ur93q1WVvSZLkk6yG4ckGVZMkkeFV8i+Tq1M
9lpdu0f3bdA9DwhXCJ8gPFr4I+H1wgcKjxXOS5JkvPC3evYbtXGyZ+qeZvI1
FF5VLUnG6Nojsvvo2svyLciTZLHsL3VtrHzL1fqpv2W69ov8s+W/XvZj8g+R
7z1du0040z0ThRfKv1O4mvBk4Yfkv054k+4fKtxEvzcJ36j2hOzbdW2efi+l
T907SPhC4YbCjwvPU3+9ZL+ta6PlW63WU32v1rV99H3rhNsJP8oYhAcIr9S9
jYS36vmHhNsyr8JV5D8r9bsZwzbdt4K+tCAyk6Wy++v+MQKthKfr3WuE++r6
ivh8P+HB8p8pvE79XyL8mZ7XT3KncH3mX/YeXVtZzWNm7D10bZf8jdTXEtml
rLHszvJ3k/8K4TF6X0NdqyJ7mlp12dPkr5l6TT7R812Eb9P9pzNe4VnCVeQf
LvyK8H3ChwkvFP5YeIvuHSh7plpTXb9Z/ht17VrhhfK/IrtCdgO1V2Xvr298
WvZnsjfp3rka0wjhJ4XvEX5Oz/TjW4TvFl4Q3DfvOFj9f5157A1kl8o/Sa1E
9jBde1++e4vxu4Q/FH5Bz8+Q3UXtXc3ZTUXH+tUxvt/J/GwTPTNfvrvUHpe/
c/z+24SXCP9NeDN7ReOdIvvPun+OfF3VrpX/DF1bJf/Jsk/Fr/Yvve8W+Vvp
2uXsSfmfVDuOtdW1wfINV9sZx/iMfCOEnxXuKrxTeLfa7bJP1vtmyzdDrRax
zxpqLOekXmvW/FzZnwfPL+vTLfV+bMD4md/cc/qi7L6J53ogY5Z9sa7dIN8E
tb2y72T88m3MPJYNXCP21dbIXqlra9XfA8Kbg/cg+2mu8Bl6773C3wiPlb1R
9no4iHGrPSZ7i1qn1Huevf8/9bGk6BgmltcKP1x0zLH2/w6OxanCdYSPFW4r
PDJy1Vrmg3XVtdPjGtyne+9S+53s77UWlxLbwseyl1kT4UZFxwXx0V++K4gn
+X4vPCD3+JbjS81VPLOP/Mck7quZcBCuITwic8xfLLt98F6AQ4j9Iam5pWHR
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtlnl0TVcUh693X3neM7XGhZprKqU6mloUpdSQRiiNITGEIkqCJETNU4gh
SJCIIUSjNSSqiSE1lRBDU+1qWahWqyNKLdTQfr+e88e39tm/s/e55557zj63
dlhk0FiP4zhp8ARc9DnOIuwd13GK4DR+l4Dj/EXQTbgOcX7H2Q4dvI4TAgeJ
v0+cp6TjxOLHwGq0B2jtyQ3HDoUyaFOwQWhVGLsdfg2Y5zO6+n9l/F8glvET
0eoQVw/qQh/yVqA1o/0cNCR+uXKJvUHObWiANh2tAf1P037sMbka4194DA7z
24p5RDuL3Jr4DeAUsdH435M/jv4/6PejX8Wfhd4cvwW8AO8ylzXow4g7hh9J
uyNaKHHZjLML/oSuaFfoK844rteMq/G/givkXYLLMJ+4cqxfIf0biFsPuYz1
NrqjuTNWMWw82mRsa+QtstAGbjFeIpqHvDJwzWfWryZaY8esWX/G+pD88rQr
QiXojbYNrQ45deEEz4nCX0Tus+TVIqYmTEdb4DNjVcWv7Jrv1g57iJyD0IW+
1zUm9IIgCEPriZ1G7O8e8331nePxz9p1vkf/Nfgafx7PeYN2e+hBXwraOr9Z
o4cwBi0HrQPzHukzc56L9hvtBO1TYvbh38Iuwr/P8/rj+/CLQwk4RWx3tG7k
FuIX4t8lrjzaNbvPtd8H89wI+qKIOYI/Af8h9gE8glp2fz0kZgxjjYVt2lf4
20s5TmfyDtC/HwaSW4H+aPorYstCOfiIOQZj34EoyCbuMfk7iBuHHwk70dLh
B8bbATn0rcZPIK46fg3tdQhmrBDsy/T/xDO70e7umu9bgH8cqjJeSsB8e+2B
V3WWiG+JzUVPVj8kgV/nmWf87DHrovWJw3+GvnpQHxba90nkGcMY430YDRGM
FUPsVY+Zi+Y02Weep3Or8/sivGTPYCExJz3mm64iNxOtCuMeoX8I8UXo0VBb
54e4KxBDzAj6Q9AisCNhlGv2xjy0+Y452xpvNbnd8LvQ/6bOG7kb0ELR3sMP
hQS0OdCKdoHegb4s1UPGSIAI2IQ2CzsoYM6dzl9bmEveNPDQvsfcBhD3Bbmz
0V5Bew2aoCWjFUCea86Fzsdxn9mTybS/RNsFB/FPwii0E/g/MuYk/AG2tqrG
3kb/G5J4RopqtfY2zGJuS9Am2vfoRHwGualo5/C/gYloZ9CSoDntJmhNYabf
1IgK9qzozIQEzFk47DFnXWc+Di2d3LbkTnBNPZ+vswIV0C4Tdwkm+80aai2n
EDMVlqKdx+61azkDZsI64vqi93NN7UnDXwtd8d9yTa1Vze3Hs0vhl4ZqsBBt
KmP+w/Ma4+dhh+PPgEaqjR4zJ81N9XmYvY9y0CPxj9LeQ1x9qErcEfxcSFEt
RtsIK4n7DC2d9nrX7CXtqTD00x5zd+gO2aO113mApV5zry7DhsEG2r2wg2EI
dIKOEK7zRt8gr7mbsjB9bE0ItudR57IRHNOdZ/ei6lxT7EgYBV21L9Fy7T7Q
fmiCFmvvuja028Id5v06th2017oz5xHYfOIuaJ1pD4fOuofsvEJhIPSEHl6z
Dw/o7KhGkZOqeqX6DGPhE57R2d4H01W3VMe95n5Lx6ZqbWAv+ib6M1yz1/Pw
90MW/lbIhGjmFxsw52I0MdnYGPwMnUevGbcAfTN2ue4u+ie5/y+lsx2bb8/+
ZtqJsFs1BlqiPYVfGxb7zBpqLbOgiL5M1Q7difZO1rP0zM3EBqMt1ntCss6f
38zrjPaqzrH9Z3je1jjVugHM2UtNncoY8ar1xDklzZ3X0dZq1ewhAXOf6V6r
Rlx13RPEJAXM2mqNK6FtQRsEn7P38qGP6q9qJ7njaX/gmvqmOhdHO9Y1/w7D
VT+wywPmDtJd9KTei7HyXXM3pmL36/6Cc7oDbFvaAvLWYdNgLUyw8ZeIK+Y1
/yD6F7mMf0P/EfaumIl23WdQ24t2n7wL+Df13e1+1h3+Lf4c7GwYCr3pm6vv
xBzDVfNghd6RuWyEvuT1g8p2XfTv0YKcpdhlelc47zM15zvad2ETcWlwUXuA
vFo6Z4wV4JustN/+lOLJ+ximuebfRvta+1vfWN/6rGofZPtMjWjmmJoajBbF
eDk8Y5L9P9C9rvs9M2D+RfVPOh59l9/8N+j/IRp/Muz2m7kcQjuqeoOWFzDz
0byy+OZFEE5cWeLW0N8QltBXCn+n1pnx410z99HkFkfvS/8c7Sm0fcR8Sv4U
3eVe01eCmC3EtsZvBUFwj7jDEEn/VfJWwR78DM2R/o32bOsftnRJM9fGcBit
DP5/p7OcqQ==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt0TtLXFEUhuHthaAjpLBJVBxUYmNAA4Jp1CbaORZqo+WABEQUEUFIykTB
zAjqTLyDF1DEK1aiECwU/0H+QBqjRYiKhabII8fiZa/17m/ts885lcnBjoHc
EMIrvEA2FsJiXggV+SFUogF/C0J4y30XPMFHfbk+jqR8n75G7tz8pv1+bgW/
7H/ij/nP1v2iEGb4FD+JLv6bdZDf4+tk6jHK51iX+V2+Vt2ERjTjzvMy/JzZ
BUyF6M7D8kfIyJw9vYu1GBuy92Y+qFvQive45bbslajLMG6myjrvjDX+jzPf
6KsRx7X8T/zmr3GFS6zKPvDdMm1IoAcHT98SpzIzmMYRLmTH8FL96Hv9Q776
y/N9Ss1e6Hvd57U66z7bRdGzNrgRbgiHsmkk+Swy2MUP56zzN+qUXBqTKCh0
h1j0zb9iDDuY5ZbNdKnbkUAnJmLRf3ln9l6fDtG/WHKX/8RkS7g=
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
2oKn0u5JHJd+nnVOIX93Mr9HID8F/LHgWHlO3rZFZ7F9zvuu/d+L/MhoNyqA
ZaOt0D3/lX7Xwg+DT0xt395Oba9lo9qBr4HTJde3zzu2bRHj0Emyk7ITqeMu
+e6+OfsFnXXZgetlrxUjo38dfHDweBp3LX3yOdtY2c8hUWefbErOeVMx57ul
db2R2L//gr0aCz7BuIeD5Yu+X08kjm+/Cua64+3jnsjWjY19Z8nP521LmtB3
NPJXoq8ZGM//xuD9HRF9imLxCdEnyr5Oizb25ugvpsT4X+NovCo5r71xznmi
7OaqvPdQ8f+78fw0TZwj9Iz71jeOLzv+emJ7ciY4MDiPeCXu+XW0p+DXgkcV
HYP2Z8wTgmPF/uDk1HaxSYzldcbkG8sh6w8vk3O8orhlRrQnr/H8b85UA/pc
yfMDyCsha5g4pq2aeg+r6V2p4xCdvf08a4NO6ZzzcZ03nbvSwXncZuVu6J8G
H5o6L9Z5rFD0PdR91LdcE8xlkyfHOEp588u6S/AaOcckW2Lc8lHeseR8+F+0
QegtRnZ91Fe/6vS5N/rHX3h2O7Lt6Nbk9w2J4+w+jFkrcYwhufhj2kvFPazx
mNTxZwd9C/DdrGNjxdFD47oUoz6W+r3Kuws6x4lztMnBebdsQk/asYnnMZCc
9C3287pDHbM3lz3XPWCckYm/ab/UecMe5jxaMYHOqu4u8pbwT/NeV+PENYEy
OruyXWAH+vRn7M/Bs1PLZX/+YP4hcR2jcupYcQDyidGHau1nBOdHlyo2SZ1/
9QYXoXcesm2M+VvBecj3yLZnXRvRtzkDvdqJY+N50XbNBTvzu1Vi/T7Bcz47
OI9QDvEj8uUFn+Pv4EtoDdA5LTUfL3/I8zkxPldN4C75tsQxyRDZ08Qx/3XB
fccF+1H5U8UlA+I30reqH1znOSrYd9yXuP6jvEwxhO7118jr8vzXgn2H7HNL
sHnRMYpy/1Piu04MzpcVV5zEs7Y8q5q4ftIh+jjZVdU7VPdoIH/D72HI6+h8
Fnzf5ut7Fu2PH04dZ6q+0Trn/FuxmWI0+SnVKFSbaRxtjvL0pvBb4duC81Ll
p7XBjXnHVlUY+9u889COjN+J1gL5soLj1NHRB2nt9RLXZJQv6Pu2S50DKQfs
DNaK90t+9wl+t473VDUmnfnnwe8LrkfMzjsOGZO4ntYlZ/8uf688UPmgcocJ
qfNQ1SJKx3tUlC0MPj967/3o9E6cQz2S2s8qd1ZsqbzgIPhg6lxja6xRaJwW
qfMl5U0Z7QUtl7jWdEscR+M9pBgl8f5/h34C/0f+l9/lEteUPo3nUOdR8ady
7ZHBdRL5MNUcxsd5boE3Sl1na5U61lBtRzUe1SfOT5yDjIq+eGLMubTnulul
cj7D8onVgvP9qsG1x38ynpt8omy76p8l477JDh2Me6L4r5fOd+L7JbunGsCu
guem+ujXBZ8TnZ1i0evRuhQHXxZcQ1AtQbWfk/Wu4HpkI3iP4JhQMdHWWCMp
lbhuoHqRYlnlv2NTr1e1TeXE+taqPWiPtFf6tmtjPeHn6DsUR69jzLmaH7LP
8raHVeQ3g+M35duNU9dtZMOHR7uiGsVVwXGi7qlsQ7N4lloFx6LysZsY4zjl
NRnXM1R3Ut1G9RvVZpUjN4n3RXuovWzHsyPhXYPfoXfJTt0YfHdkqxcU/D10
/mcVXGuQT+kSXD9VHv55cKz+JnhuXFc38MLUeYTqZjqfyhFz7GVTcEXG9lP1
DNnn83Xfi44dde8qFh2LKL8+P+qoRqsaWunEdlw5wgWJ85lFsX64EOwiHy0/
kjrelo0aHecseVtwOXp/ob8061qI/IX8Rpu4J9qbGdGnyLfI1sjmqH7SMTiP
U366ML5XdaKaRddkFbvqLihXzhZdc1a9WrXKk4LzDtX/esSz96/gXFpxjmrT
yuvlCxTTzMq7FjWbvf+k4LqPYh7VdRS3KH5R7CD/rhhVcYXWVS51PUp1bNWz
VWdSHKgarerwfaLP6hX3pHFw7UjnRzVE1eEViygm+axgO6J6r3zQU8j3IesO
vwi+Gl4htS1SXqDcU/Fwj9TxqmLSQtHxgGysaqeqobaF9wuu9ciPq5ZaH50d
4FcF+/qyiWuy+2M9SvXhFXn7Jvmop+NdVk1+Y6xbqn6p+65YRTGL6vM605em
PutHxhjjm1g/0n3smfq+qC7aVT4j8f8mFDMo9lAMMi/vWvXGgv8/o7qH8tPu
UV/92sQ917tkP1fwvCRrHxYca6kWoRqIagWqGajGKFtRC/yi4Dqv4iL9b6VG
4v3V/ZLNUc1iStG2W/+jWRXrutqvY4P/lyF/vz44R1Z9SfGPbMyGgvdae67/
cciHqia3Cvn/ALPEbD4=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmXn8VlMex58nz7269/dYWmlTUUikPUtZoiglWygUWYeUkEQzKSXbZN9l
MLaxpBRmEFlLCdmSlHZatZeyzPvj853X/HFez/dzv+ece+453+XzPU/DfgNP
GVCpUCi8WiwUSvzelBYKE5HnIw+qXCj8yMNq4Kq05ch1s0JhKbq3kN+pKBT2
AxfQrQBPBy/idwOPdtB+QG6K/nfk35E/Q185KRS2gfdkzD7INdB3Rn4V/dvo
Py15vja0WciN0W/h0QLkaegng59E9wFjW5ULhcUlv1PvWkjLEr9DczeizeTZ
HD5wEXO8glyb8WuQZyC/y3xVwBXM9zJ4CrghuAj+DPxehfdjHuPn0sYgT+H5
Ksavpn2M/GHi9QyndUJfj/E/ofsQ3VTG3w3uje4P+h3MegfkXo/W9T76ozPv
7UHov6vwd+p7N9O+Q/6k5Het+t+aGd+W/l8jf0D/qeDW4DmB9T0HgWsx31zw
pazpEfBDtKNSn9fOyLug/xr9Qsb3AT8KLrC+dvy2BO9Ka4l8Smb5cuSV9J9D
/0HgK8CrwFNyr21K2ENHnh9NO1ljab/xfF3Ba/67zoX5toLX8nwG/auDfwXP
B38E/rbkb9ceLEPuhX43xl7M2J/Qv8P7VqCbHuejd9RBf0DR73479369j34C
3/MV+GB0F6D7kf7Nma8S+Cf0s8AHZl6f1vkp+ELwIei70n8juAF4OfqpcZ4f
lWzPspFpJa9D61kZ9nAG/Y9D15fxy+l/Or89afvS9qN1Rn+P7Bv5e/SX4WMv
YQ8v095jfE/0R6Cvj34Z+pPATcC9wEvBx4Hrgw8BzwefAz4WfCd4C/gsfuuB
D6OdgDw7t6+1R/4B/QD6HwMeCP5V8/HbSfZA66Y+9D8R+UXkP9BfSf+TwM+D
fwd3B3cEdwcvAnfI/L6zYr3Sa67rwdvBXcGNwM/IFsCngY8G7wX+BXwMuBa4
KXhJhe2tG/gM8GLwDfJz8IGyX+TPWV9TfR/yggrvl87rbsUV8Hz0h4IfBG8F
H5HZNoaAV4OvTYxlM3+VT9KqF20j5yFfQv/fCrbVzfSvl3i98qkJnM885j8e
eTDP16P/HjwWfDt4k+wl8fkdTnsEuRvz7YdcM+zpfHBzcAfwOvAYfu8E36yG
fCT6BLk58jz0O0qOhYqJ2xUPeLaF3194dDB9r6F1ifc3xd77pLavO8Jnn0F/
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
u04+U3btK/6u/dU+qz7+V9ig7s7/Czo+aMQ=
            "]], 
           Polygon3DBox[CompressedData["
1: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
i23F+P/PLILN
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlz70vXnEUB/DziBaPR0riYUEiXhqGRlhMuhsMwsZA00rfCJtNwqyLeInk
8Rf4ByzKIJEQJLQMXapNNQa0kZRU4nNzh0/Oud97fufeX+PoRP94UUTkecq3
bMTSk4h3vOVT0pdF9NCub6aJNvbMduQiPjpYyESMq7/lF/JjRvVDDDPLmeya
EnM15Kllxe7L5J2ZP4zYda9W2f1FPqGf5L18Sr0sj2h15rw44pAjzmiWTfPZ
zDZbbHJuR1Mu7Wfs6PPNXm7l39mQD3he8G5QfW72h3xH/p8Hbpm3+0T+Sv+a
F5n0jr/8z4G8W/8h+U/mknuYv5GX2bnveSyT3r06l973RlbgpfxKrZD/lO8m
+829YYx1e75m07v/445n8kX5Gp36Flrp4m82/W6pPke//afO5O1fNV8nq6eB
SpZlj7VXRro=
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.560181, 0.691569, 0.194885], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
31ojWExvCl6ls/T8Sr73/IzF6xKMa+BdkRit/dS+aj6Sr5K3XEO2/0CwPCfv
8Uj+5Azoz4P56gnQ7bPmE8d7fJ/Fs4aKKeDvwdal9fXXeiWD/gr67TGrMqMB
9POy4dj2WflAz6yd0aZgee9NGctnBrp8P3A+z1pDfwke5vyCbC2ye7sQ3p2J
naN8nfzua8Hikc6pYtbin/JY5XU74DXhvZ2+xtcVl/wu/Rgs1igWKDe/0m1f
PuBAsDz/l2C5q85d56986RvpQud94CfcvXJZi5dDPRYrzl4pH6jYFdt3ld92
4dnV0J2ytr/aZ8Vj6WsOvSxYnal6U+t8NZieolmzu0/4PYnvNwnmh+uDDyV2
NqfxfJvqXfg7Isv5ld+fDa5k/t8od0P2P+BKZN6O7JlkVEf862+hd+bMT/6C
zAqwR2J6Y55vd1+6W/VfZP7q68h+i79XORjj17T57qOR5cN/glvQuxx+XvVg
YudaJG92K/vdkTNfvU31QmS5snLmjGwhb3VtK/ef90I3gV4OvRi6Q2K5333Q
HXU+OcsV53otvwx6ac7WrLWrtp8VWa44E+wSW97SC5wXmfwHkdWDo+X3wBPK
OeB/gp7anhMq7n6mb8CfHRlf9lVXOU/e8oWnEtsj7ZXmOs37BpqraivVTmOz
5o/kl+QXVGdsQWYreHGwmuhWxSP3M/I3YxKLtYq/qpV6uu9SPO0H/bfim9uU
bFH1teqkprw3zGsq1dTbgtmL7Ka0xwj5sfJuy7Lpt11nZfAF+R3o7+W/vO5+
EKyC3LkZy5O1duVgysX2KxZBR/CXI/c58hsj20ftp/owa/i9Gfp7nQVzWwBG
ectb3uD9x+Et9D6P+j2/R5bbH4jMDw9G/27kvvLzlZ4U/N6Kv+AK+buM5dXZ
rO3z+8HOTGcn21AvZKP3E3J5u88bmGPH2Ob+MHMolLW1qA8ww+sF1Q2H+T0Q
/j6wYN56SG0Ty2l1F56Drh+bz2wNvurxO4J+yHsp6qks8pj7YrCelXo46uX0
CpZLrAZvdlo11BNey6im+YzfHeHvDebzurp/e4FvNZLPZS5b+d0W/vpg567a
QXn2M4nVOcqZ1b+a6nfy2cTOVTnnLuT6+j6/43FEuaRyeOWt9yTWx5novn1V
sNxgbbBe2b+2E1nd39L5n3rOID+/0n3+hmB3q5nPU3mUasR70f9gYrFHtU+F
2Hym6tZl7j+XB6uD5T/VM1FvYaf7/3rIN5FPBmd6LFMurrxT+adicwOvX1TH
LPa9+iJYbaEYpzz2v8F8gu7PBx5HlJtM9Zy+YmzfUiy9zXsdSz1e3CU/jfzj
HrPaezwa4fmb8ripvs+69yfUW2TfQrB6QPI/BMtJ2kHXAH/zu6c7WCm2HmO5
2GK8zkhnpZ6VelT3J7YerUv5n3oIOiflRapTqnt8V79E+p9xnapdJqoWU7z0
+auXUg36oWB3W3nZHcjcHiyfVK/nqsTqf+XDipVXeS6knpp6a8pla/u5KH5N
DjZ/1SAz/Q58DD4XLE9QLqH9UdxUvXye67kNvNvflY7CbvvyAaopVrKPnZnL
HO+1qud6IGc1whGwT2I9I/UA1Ufam7aaZyj80mAp+Dcl5vtUq34XWSxTb0Qx
WLE4HczX9PZ43Rv5PZHFu4Rns9JWEy2Ct8ljZZ1gPe16snd+74Te6b2mVbIV
5jYK+lhk8THt31Jtovpd9bVqEvWdMp4j/eZ35khksV711GrwPPmvYPFd/e91
3uvY5PQycAAy2WA11AKfp+a7yv2z/LT2QzWjejaH0xbrlXOs0ztp6ycP8Z51
SejqLreEdy9K7MyUP4+EbhCstlL9pjruIHhZYr0n1fjdE8s5lHtcmlhNWzlv
sU9957KuX+dYRvcuWJ6sfPlG+YtgdU25YHW6+mEhb3lNL55f6bnUMb57eWL5
n/JkyeierIb/ZmJ+UzXFJYl9Q3Xfv3uZtnNTz0u9L9V4R3z/ZbvKGdSvaqce
ZGK22i62vEQ5hnKNxTnrX6lnvtnj6RawX2JnuZXnNyRWC1VHpm9icVd9rfU5
Oxf1JHVu+7y2HZxY/1H1YymP6YrtTySWQ6h3XTxruav61cqjdIbfgucm1ptW
b1w1o3ra6nPr/qgfp56A+i3qZynnl73r7BoG+3+L4rvivPQobqmmuzaxelvn
295jueK74qzW2hPe9YnZsHpKA6Hzutd5y4GUC+3ynHM19PzI6mfV0epVyD7K
ZqzW057o3q4F9+Ssj7rX6+slnis+6Pt8HDwlWO9duc181y9/scdzUeUYtyTW
41M+r96j8tJD4P8AmbhAJg==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmXn81VMax++91ffc+/3e9lQzRb9UopClfV8kLdqjlRRlS2NvKMbeYmfs
O9kZM4ZWImQJEVlStpJS2SKkZT7v+Zw/zuv3fO5zzvme5Vk+z/k1njB16BmF
XC73bD6Xq6y/t4ZcroV+2Feto+QmWS63v+SrJE8r53JNhdsLny/8d+FlpVzu
JY29I8nlOgjfp98Plf4CtXuD52ssubvaFZIfVWtV8JyPSJ6ldprk7ZpjtuT9
Nf8Y4QckT9d8f2r+WsJThM8Urp96fcx1ftnrYi7mvEfyjWrNJO+ndovkZ7Wu
FZr7PbWXJB+g30rSfS9cllyh+doJ3x+/d6i+31Z4pfBM4Qrhk4UnC08Rvl9z
fKKxn6k9IHm71ldJ+tbSj5M+p/6vSXerdO2E2+r334TrsCbJE9ROlTxBbWLw
/upL3qH+x6n/e8Ir1f8r4f7Cb+nv58IfqL0seXXib7OGNZKraf0fSz5Zc52h
/p9p/FrhldL1E15X8vdZB/OX1D/V9+oLnyL8rfRbpC8KDxOuJP0+0p8mPLXs
8zlI+DbhOcLfqP8X6p8JDxc+WPvtIP1y4SuFv9PfvQre07mSd5V8/9jS8dxf
5vPvJjxeeAvzCI/lTrAdtUPU8moFtUz939X3Vmk/A9W/tXAf9V0n3TXCn+j3
t6SvUfAZNMt8/9jBBdJv0/e/lf4Y4bOFq2s/1aU/JZ7XR9J/lPeZfSp5YLDt
Y2MzJe/Qbw0k/6HvnKX+jTT+YOEvpbtauJ7+/qyxv6g1RVb/vPQ/qf/p9M88
32DuXfj3xPMFtVmSvw3ez5FqG/EV9a8t+WzJf1P/Ufre+Ywv5nJPCdeVvqZw
c+lHCxeEl+nb92iu9sLHBu+3kfpMxzc0vpfkRZIvkf5Ctds5Y/22t3RXS+7L
/GpzsFXNUyjYphPhH4S/0nyb1bZLrqTvvSL5QcmdNNcb2u+bwg8LdxY+LNj3
uINLJS8qeS1NJJ8nfU2Nnx99D/v5ouTv8d0hwn/RmpoLXxnjTVF4g/q3CT7/
eSWf3S/qP5T9Fh1riDnDJf9e8vdZxxjsPdi+txIDEscp4tWl6jNO/dcl9jfu
cLfkrRr/h+TaGneMxp+BX6hv/xiD1iceQ989aovUFqr9S+0Z5GhP8yV30/jh
GnN0wT70muRrsUN8Qy3V949ILWeSb1b/THiHxp+ufv8U3jf4/LhT7vxHzb9b
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
sW/oHxCfalo7Yicox0J1+B81t3KT
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl0bsr7nEcB/AvuT8PqSfFkWRwK+UMhFwfucfCZkAyGagz8Q8YTh2bxaUo
AzmbM5/J5FIKMaMUCxYseP36Da8+n96/z/O9PVWzi+MLmSGEEnJoToRwnxvC
HmkfbtU/yRB+yEf0o/TLx9Q5eZm8S99DnrxTnZH3F4RQmGdBMiiixWwdO2au
ueGcJrNp3vTvfPBEl+w0P4T/DnbAX/5xLGtKxGd74ZlXus2n5Cn9IANMkyuv
ZEO/xSbr1EZ3tVa2/su6n2Tpi+WNnOjPaHevK/W3e9XI1/SN7hM93E91Oxm/
2538gQb5oboq30zGe03K6s1W02a2NBG/VQutTFEhK0/Eb3vBJY90OHu9fDd6
Z79P08tEQXzOU/kyZfY4Vlfsuc+QmSXZsHoUnctsFb+i/5A+5qP7Wucb0n48
PA==
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        GrayLevel[1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtj7sOAVEQhierYUloRUXiLSQKUWo8AToN0dCKF8Ai7vdL8AQKrdYlrm+g
9Aq+yW7x5/vO7OycOeFcMV0wRCREXKTFwQeb8E6u+A7OSQyfwbIpcoFZeIAB
6m3YJym8B08kg0/hxKnr9zGJ4yO4IDV8Cbekim9gxCPywyvMHzr9A8Pu0/41
PJIo3oWWW8SPl+hfOXvqvl2np2PY9+kcnfckX/yl79MzfoNJr8gDBj32e/Rd
DbgnZ/yte3NHAuZN+3+d84F1Qkks+AekKC65
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkDtqglEQhYeJha/CxsLSgLsQrCzTuIIoSjSiJo1WQnADml8EC5/BiLoD
d2AlBhHcQZq4B79hUhw438ww98xNl1qFpopIEoVQLSrSCIscHkQm+CL6oL5h
qI1/Rd/4HrU/5qrwHH6Gt3AqIrJn0Rs+HxOp01+r77iFvfeLv6jPvNMf4TPU
AriLKEmfWvk/ywKfFc+0hHP4KbUXywbH4SFcgT/V+Yh2+B90wZ/QWT3jE36m
nr2DruqZHiN+k721Ur/VdgbqmewtyzSAE+JZLcNYfadlsxvtb77Ub78D4HAv
Eg==
            "]]}], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0t8rnXEcwPHPOJgJV0t2J5d2vT9Ayr0LKzUN0Yoc2RYpKUohKzLtZq7U
Eaf8mB8bbY4zbH5swlr8A274I7xOqfM+7/fn+T7n+zx9O1WtyYbuRxExhv7H
ES+4MT+ikJufRHzPi/iBXWTQ69oeZ/ETb837fIi6koikPX7p3zjCO+vHfIJT
vDf/4b/o0ik+8Kws2swX5iWk4RPXuEQqYT+e488Y1J2c4Wme4w5uR0Hu3fkV
ZnQLv8ZHPcLDmNcLfMFp/s+5c7jCOYqLI/p4wFqe/qAHdUIv6i3vOmSuzTW+
msfNL3Whe+r4jXNs5Iwzqedls1tiwr1NukZPWqvgMvOortTluoifYti1Ur5x
GAPa1nGrh7TjjjP8w51rfhYrvIo1fEHSs9Z5Az16k7fwDR3mbd7BLGpsYNuY
8lXN+/yMP/Hzh//HPUrhSYk=
         "]], 
        Line3DBox[{2173, 16, 696, 660, 656, 2660, 655, 658, 2661, 659, 657, 
         682, 215, 206, 12, 2176, 10, 2173}], 
        Line3DBox[{2194, 37, 700, 663, 661, 2673, 15, 2194}], 
        Line3DBox[{666, 63, 2209, 77, 2217, 96, 709, 671, 2664, 670, 665, 664,
          2663, 669, 668, 667, 666}], 
        Line3DBox[{968, 60, 2284, 130, 2285, 128, 2657, 719, 2678, 680, 678, 
         2667, 674, 675, 677, 2666, 676, 673, 672, 2157, 2665, 67, 2716, 
         968}], 
        Line3DBox[{213, 720, 721, 723, 681, 208, 213}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrxXEYx/EvOSdMJlLHkYWFcgwuZzhKNhMKYWKgxMnisojCilXqDAb3
exn9B2bJ/ZJiExOJ18nw6f35PM/z/f6eb7+KgXTHWE4IYZpKCkIoEqojIdzL
SblUbsEqbMMkltFtYQgZc8X8kno/LmMvrmAG1+iU38YDunbnCe7RbDSEdZzE
CermW3EVR3AKmzFFd841YD1ll01iE6X5fuyjGX4Od3EBD/HKuWPcoX17tGOn
3gY/zHfxW/w8/+U9PXIsuz99y4NyInveTBxT3luLg3IFLsq3vnFutpaPqNXo
vas95YVQyX/wz/wDXuTa3+w+HtBeNueHMKr2pH9mLu7MpfoVjevdqB+5d5Ne
+HL9Z4zhG75SHf+LwQ6PkJB/cAg/sRGjOf//9w8TvEC1
         "]], 
        Line3DBox[{2329, 724, 2885, 2160, 725, 726, 728, 2679, 239, 2338, 231,
          1209, 2329}], 
        Line3DBox[{1215, 730, 1667, 436, 229, 425, 430, 1215}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0b0vZHEYhuF3FGbHRDFCQSO0EolgdCQKoRAx2WITskEroZHNkmhY3zQq
/hDs+hqsTVZ8NApEYpWispHsSjSuieLJfT/veX9zzplTMzSaG0lExFfZS0U8
KslkxDbe68/4gImiiL9Yjv/NatMRE/aeeHNJRNY8i03YguP4Rfr5N1yQTbsr
OCd9HyImMYe90sCrcQw7MIdVWCk/nCvDjHSaV2C5dBXuhVn5VLgXzuIALuKG
c8s4Ix89Rx3Wu9bN23kD7+Gfeav3adT/OTOst+mtepr32nkxr/S+JXpKf9UH
9e+YsZvmf/il/+gU94sjzvg5z/MdPJHfZoe4apbne3yNH/M8n/b787JutqUv
8Sk54L/s7OMRHuNPueY3eGt/F6/0Kyz1jBd4p98n3r/tG7jHQHE=
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{2168, 2169, 2912, 2198, 2908, 2691, 2196, 2905, 2692, 2907,
          2186, 2184, 2898, 2185, 2208, 2914, 2207, 2206, 2915, 2699}], 
        Line3DBox[{2170, 2171, 2890, 2682, 2172, 2881, 3246, 2672}], 
        Line3DBox[{2175, 2174, 2889, 2653, 2671}], 
        Line3DBox[{2178, 2892, 2683, 2888, 2684, 2177, 2891, 2685, 2662}], 
        Line3DBox[{2182, 2180, 2894, 2179, 2899, 2681, 2165, 2895, 2686, 2893,
          2687, 2246, 2941, 2245, 2244}], 
        Line3DBox[{783, 2181, 2896, 2680, 2164, 2690, 2904, 2187, 2900, 2188, 
         2903, 2193}], 
        Line3DBox[{2189, 2689, 2909, 2199, 2190, 2901, 2191, 2906, 2197, 2195,
          2192, 2902, 2688, 2897, 2183, 2910, 2693, 2200}], 
        Line3DBox[{943, 2707, 2927, 2706, 2711, 2935, 2220, 2215, 2919, 2703, 
         2920, 2698, 2205, 2932, 2232, 2202, 2697, 2163, 2886, 2162, 2913, 
         2696, 2201, 3247, 2654}], 
        Line3DBox[{2240, 2936, 2712, 2214, 2918, 2702, 2929, 2695, 2911, 2694,
          2219, 2705, 2934, 2230, 2928, 2229, 2239, 2945, 2225, 2924, 2221, 
         2222, 2224, 2923, 2655, 2674}], 
        Line3DBox[{2306, 2299, 2981, 2298, 2736, 2994, 2309, 2993, 2739, 2986,
          2293, 2975, 2292, 2733, 2972, 2734, 2973, 2270, 2271, 2960, 2276, 
         2272, 2273, 2977, 2268, 2958, 2267, 2286, 2287, 3001, 2314, 3000, 
         2726, 2963, 2280, 2999, 2658, 2668}], 
        Line3DBox[{2308, 2304, 2985, 2737, 2302, 2740, 2988, 2303, 2984, 2738,
          2987, 2721, 2262, 2971, 2269, 2254, 2950, 2255, 2717, 2951, 2256, 
         2261, 2954, 2260, 2970, 2263, 2955, 2722, 2283, 2966, 2275, 2959, 
         2274, 2730, 2282, 2882, 2967, 2731, 2677}], 
        Line3DBox[{2310, 2236, 2933, 2237, 2997, 2212, 2916, 2211, 2238, 2701,
          2917, 2213, 2704, 2921, 2218, 2946, 2235, 2234, 2942, 2247, 2715, 
         2943, 2248, 2249, 2980, 2242, 2939, 2656, 2675}], 
        Line3DBox[{2313, 2288, 2264, 2956, 2957, 2723, 2312, 2998, 2266, 2724,
          2982, 2295, 2978, 2296, 2983, 2294, 2291, 2974, 2278, 2962, 2279, 
         2290, 2976, 2735, 2297, 2979, 2727, 2964, 2281, 2316, 2319, 3003, 
         2277, 2961, 2725, 2320, 2745, 3004, 2318, 2317, 3002, 2315, 2265, 
         2659}], 
        Line3DBox[{2327, 2328, 3031, 2358, 3027, 2757, 2356, 3024, 2758, 3026,
          2346, 2344, 3017, 2345, 2369, 3034, 2368, 2367, 3035, 2765}], 
        Line3DBox[{2332, 3007, 2749, 2331, 2748, 3009, 2330, 2669}], 
        Line3DBox[{2334, 2333, 3008, 2336, 2335}], 
        Line3DBox[{2342, 2340, 3013, 2339, 3018, 2747, 2324, 3014, 2752, 3012,
          2753, 2409, 3061, 2408, 2407}], 
        Line3DBox[{1252, 2341, 3015, 2746, 2323, 2756, 3023, 2347, 3019, 2348,
          3022, 2353}], 
        Line3DBox[{2349, 2755, 3028, 2359, 2350, 3020, 2351, 3025, 2357, 2355,
          2352, 3021, 2754, 3016, 2343, 3029, 2759, 2360}], 
        Line3DBox[{2354, 2751, 3010, 2337, 2750, 3248, 2883, 3011, 2670}], 
        Line3DBox[{2362, 3032, 2361, 2762, 3033, 2321, 3005, 2322, 2763, 2363,
          2395, 3052, 2366, 2764, 3040, 2769, 3039, 2377, 2383, 3055, 2777, 
         2772, 3047, 2773, 1414}], 
        Line3DBox[{2370, 2371, 3043, 2387, 2385, 2384, 3044, 2388, 3065, 2402,
          2392, 3048, 2393, 3054, 2771, 2382, 2760, 3030, 2761, 3049, 2768, 
         3038, 2376, 2778, 3056, 2403}], 
        Line3DBox[{2379, 2380, 3059, 2405, 3100, 2412, 2411, 3063, 2781, 2410,
          3062, 2397, 2398, 3066, 2381, 3041, 2770, 2375, 3037, 2767, 2401, 
         2373, 3036, 2374, 3117, 2400, 3053, 2399, 2475}], 
        Line3DBox[{2447, 2799, 3089, 2795, 3085, 2794, 2421, 3072, 2784, 3088,
          2776, 2396, 3067, 2415, 2416, 2404, 3058, 3057, 2779, 2420, 2390, 
         3046, 2391, 2785, 3073, 2422, 3115, 2472, 3110, 2808, 2466, 2465, 
         3109, 2470, 3112, 2810}], 
        Line3DBox[{2448, 2797, 3087, 2798, 2445, 2796, 2437, 3079, 2438, 3086,
          2446, 2788, 3075, 2426, 3090, 2423, 3074, 2424, 2419, 3071, 2783, 
         2418, 3070, 2417, 2432, 3091, 2425, 2787, 3107, 2805, 3104, 2468, 
         3108, 2807, 2467, 2804, 3105, 2469, 2473}], 
        Line3DBox[{2449, 2450, 3119, 2443, 3083, 2792, 3120, 2479, 3121, 2452,
          2451, 2430, 3078, 2431, 3097, 2436, 2435, 2439, 3080, 2434, 2433, 
         3093, 2801, 3092, 2800, 2457, 3095, 2458, 3106, 2806, 3113, 2474, 
         3114, 2803, 2463, 3101, 2464, 2471}], 
        Line3DBox[{2478, 2453, 2427, 3076, 3077, 2789, 2477, 3118, 2429, 2790,
          3102, 2460, 3098, 2461, 3103, 2459, 2456, 3094, 2441, 3082, 2442, 
         2455, 3096, 2802, 2462, 3099, 2793, 3084, 2444, 2481, 2484, 3123, 
         2440, 3081, 2791, 2485, 2812, 3124, 2483, 2482, 3122, 2480, 2428, 
         2486}], 
        Line3DBox[{2493, 2494, 3152, 2524, 3148, 2825, 2522, 3145, 2826, 3147,
          2512, 2510, 3138, 2511, 2535, 3155, 2534, 2533, 3156, 2833}], 
        Line3DBox[{2495, 2496, 3130, 2815, 2497, 2816, 3127, 2498}], 
        Line3DBox[{2500, 2499, 3129, 2502, 2501}], 
        Line3DBox[{2504, 3132, 2817, 3128, 2818, 2503, 3131, 2819, 2520}], 
        Line3DBox[{2508, 2506, 3134, 2505, 3139, 2814, 2490, 3135, 2820, 3133,
          2821, 2575, 3182, 2574, 2573}], 
        Line3DBox[{1727, 2507, 3136, 2813, 2489, 2824, 3144, 2513, 3140, 2514,
          3143, 2519}], 
        Line3DBox[{2515, 2823, 3149, 2525, 2516, 3141, 2517, 3146, 2523, 2521,
          2518, 3142, 2822, 3137, 2509, 3150, 2827, 2526}], 
        Line3DBox[{2528, 3153, 2527, 2830, 3154, 2487, 3125, 2488, 2831, 2529,
          2561, 3173, 2532, 2832, 3161, 2837, 3160, 2543, 2549, 3176, 2845, 
         2840, 3168, 2841, 1889}], 
        Line3DBox[{2536, 2537, 3164, 2553, 2551, 2550, 3165, 2554, 3186, 2568,
          2558, 3169, 2559, 3175, 2839, 2548, 2828, 3151, 2829, 3170, 2836, 
         3159, 2542, 2846, 3177, 2569}], 
        Line3DBox[{2545, 2546, 3180, 2571, 3221, 2578, 2577, 3184, 2849, 2576,
          3183, 2563, 2564, 3187, 2547, 3162, 2838, 2541, 3158, 2835, 2567, 
         2539, 3157, 2540, 3238, 2566, 3174, 2565, 2641}], 
        Line3DBox[{2613, 2867, 3210, 2863, 3206, 2862, 2587, 3193, 2852, 3209,
          2844, 2562, 3188, 2581, 2582, 2570, 3179, 3178, 2847, 2586, 2556, 
         3167, 2557, 2853, 3194, 2588, 3236, 2638, 3231, 2876, 2632, 2631, 
         3230, 2636, 3233, 2878}], 
        Line3DBox[{2614, 2865, 3208, 2866, 2611, 2864, 2603, 3200, 2604, 3207,
          2612, 2856, 3196, 2592, 3211, 2589, 3195, 2590, 2585, 3192, 2851, 
         2584, 3191, 2583, 2598, 3212, 2591, 2855, 3228, 2873, 3225, 2634, 
         3229, 2875, 2633, 2872, 3226, 2635, 2639}], 
        Line3DBox[{2615, 2616, 3240, 2609, 3204, 2860, 3241, 2645, 3242, 2618,
          2617, 2596, 3199, 2597, 3218, 2602, 2601, 2605, 3201, 2600, 2599, 
         3214, 2869, 3213, 2868, 2623, 3216, 2624, 3227, 2874, 3234, 2640, 
         3235, 2871, 2629, 3222, 2630, 2637}], 
        Line3DBox[{2644, 2619, 2593, 3197, 3198, 2857, 2643, 3239, 2595, 2858,
          3223, 2626, 3219, 2627, 3224, 2625, 2622, 3215, 2607, 3203, 2608, 
         2621, 3217, 2870, 2628, 3220, 2861, 3205, 2610, 2647, 2650, 3244, 
         2606, 3202, 2859, 2651, 2880, 3245, 2649, 2648, 3243, 2646, 2594, 
         2652}], 
        Line3DBox[{2676, 2732, 2969, 2729, 2965, 2728, 2258, 2952, 2718, 2968,
          2710, 2233, 2947, 2252, 2253, 2241, 2938, 2937, 2713, 2257, 2227, 
         2926, 2228, 2719, 2953, 2259, 2995, 2307, 2990, 2741, 2301, 2300, 
         2989, 2305, 2992, 2743}], 
        Line3DBox[{2744, 2996, 2311, 2742, 2991, 2720, 2714, 2940, 2243, 2231,
          2930, 2223, 2922, 2700, 2210, 2216, 2949, 2166, 2887, 2167, 2251, 
         2948, 2708, 2931, 2709, 2289, 2250, 2944, 2226, 2925, 2204, 2203, 
         2884}], 
        Line3DBox[{2782, 2364, 2365, 3045, 2389, 3064, 2413, 2454, 2775, 3051,
          2774, 3068, 2414, 2326, 3006, 2325, 3069, 2378, 2372, 2766, 3042, 
         2386, 3050, 2394, 2406, 3060, 2780, 2786, 3111, 2809, 2476, 3116, 
         2811}], 
        Line3DBox[{2850, 2530, 2531, 3166, 2555, 3185, 2579, 2620, 2843, 3172,
          2842, 3189, 2580, 2492, 3126, 2491, 3190, 2544, 2538, 2834, 3163, 
         2552, 3171, 2560, 2572, 3181, 2848, 2854, 3232, 2877, 2642, 3237, 
         2879}]}, {
        GrayLevel[0.2], 
        Line3DBox[CompressedData["
1:eJwNzr9KgnEYBeBXDQy0qXCJoCCkv6vQDVQiQkpjU1YORg7tSTQ6uhhuORXk
Hi52A12B3kBkNThUU8/wcN5zvt/wrZ02q1eJiCjzkYx4mot4ZsAjU1sxE3E+
H3FGjUE24t1+4Z7Jku9/cisVUbetyGPbslwgQ1C2JeWPt7+k3UtU7Dm5R4ET
fVfuMPZuX5/IA/2QW/1O3nBElQ4jWr69yqJ/f5P3XNt6ctXWdffdDyzq37Jt
+5Lrep5tXmxduckGPYa2qXefXOoN/gEaWCdr
         "]], 
        Line3DBox[{783, 784, 771, 2894, 772, 764, 766, 803, 2901, 801, 786, 
         785, 794, 791, 2898, 792, 883, 870, 2919, 869, 875, 890, 888, 828, 
         2911, 826, 969, 886, 2921, 885, 881, 882, 2949, 975, 947, 2937, 926, 
         924, 982, 980, 2951, 981, 1004, 1034, 2960, 1033, 1077, 2976, 1090, 
         1110, 988, 987, 1125}], 
        Line3DBox[{811, 798, 796, 2903, 808, 950, 2941, 951, 806, 805, 2910, 
         823, 830, 837, 2912, 740, 741, 843, 2913, 835, 833, 864, 898, 2924, 
         895, 849, 847, 954, 2980, 956, 955, 2944, 963, 1078, 1057, 989, 2952,
          965, 966, 1053, 2966, 1054, 1061, 1045, 1039, 1041, 3000, 1172, 
         1177, 1171, 1036, 2961, 1035, 1187, 1184, 1181}], 
        Line3DBox[{854, 844, 836, 834, 3247, 838, 853, 2923, 897, 831, 832, 
         2939, 2152, 884, 900, 2925, 841, 842, 964, 1048, 2965, 1049, 1051, 
         1052, 1031, 2959, 1032, 1044, 1040, 2963, 1042, 1173, 1180, 3004, 
         1185, 1186, 1188, 1183, 1182}], 
        Line3DBox[{858, 2915, 859, 887, 909, 2927, 907, 901, 868, 2918, 867, 
         916, 941, 862, 2916, 863, 1157, 918, 2930, 919, 996, 992, 2953, 991, 
         1020, 1003, 1001, 2971, 1068, 1085, 1070, 2972, 1071, 1075, 1076, 
         2974, 1079, 1093, 1119, 1117}], 
        Line3DBox[{872, 873, 936, 2933, 938, 1158, 1163, 1148, 2991, 994, 944,
          945, 2990, 1144, 1141, 1137, 2984, 1022, 1024, 1108, 2986, 1087, 
         1088, 1080, 1082, 1106, 2978, 1073, 1074, 1104, 1120}], 
        Line3DBox[{943, 908, 910, 942, 2936, 871, 874, 937, 939, 2997, 1160, 
         1161, 1147, 995, 948, 2940, 949, 2995, 993, 990, 1019, 1002, 1000, 
         2987, 1138, 1023, 1021, 1084, 1086, 2975, 1089, 1081, 1083, 2983, 
         1091, 1092, 1123, 1122, 1121}], 
        Line3DBox[{1151, 2992, 1136, 1135, 2985, 1139, 1153, 1152, 2994, 1114,
          1101, 1103, 1116, 2998, 1166, 1165, 1156, 1154}], 
        Line3DBox[{1162, 2996, 1159, 983, 984, 2989, 1133, 1134, 1143, 2988, 
         1142, 1109, 1107, 1140, 2993, 1096, 1095, 1105, 2982, 1015, 985, 986,
          1155}], 
        Line3DBox[{1170, 1168, 1112, 1047, 2964, 878, 879, 1018, 2958, 1017, 
         1028, 1029, 2970, 998, 958, 959, 1099, 972, 2947, 971, 922, 920, 
         2948, 973, 953, 2942, 952, 914, 913, 912, 2928, 911, 934, 929, 928, 
         2932, 852, 846, 819, 2905, 817, 821, 824, 789, 787, 2902, 774, 776, 
         2895, 769, 767, 778, 780, 2904, 809, 754, 755, 751, 2888, 753, 759, 
         757, 2890, 744, 745, 747}], 
        Line3DBox[{1191, 1190, 1189, 1175, 1174, 3002, 1178, 1066, 2154, 2999,
          1063, 1055, 2967, 2153, 1059, 1058, 2969, 1050, 967, 2159}], 
        Line3DBox[{1192, 1130, 1128, 1164, 1010, 2957, 1012, 1115, 1102, 1100,
          1113, 2981, 1124, 1150, 1149}], 
        Line3DBox[{1196, 1195, 1129, 1069, 1009, 2956, 1011, 1145, 1146}], 
        Line3DBox[{1215, 1667}], 
        Line3DBox[{1252, 1253, 1240, 3013, 1241, 1233, 1235, 1272, 3020, 1270,
          1255, 1254, 1263, 1260, 3017, 1261, 1353, 1340, 3039, 1339, 1345, 
         1361, 1359, 1298, 3030, 1296, 1440, 1357, 3041, 1356, 1351, 1352, 
         3069, 1446, 1418, 3057, 1397, 1395, 1453, 1451, 3071, 1452, 1475, 
         1505, 3080, 1504, 1550, 3096, 1563, 1583, 1459, 1458, 1598}], 
        Line3DBox[{1280, 1267, 1265, 3022, 1277, 1421, 3061, 1422, 1275, 1274,
          3029, 1293, 1300, 1307, 3031, 1207, 1208, 1313, 3033, 1305, 1303, 
         1334, 1369, 3044, 1366, 1319, 1317, 1425, 3100, 1427, 1426, 3064, 
         1434, 1551, 1529, 1460, 3072, 1436, 1437, 1524, 3086, 1525, 1533, 
         1516, 1510, 1512, 3120, 1645, 1650, 1644, 1507, 3081, 1506, 1660, 
         1657, 1654}], 
        Line3DBox[{1324, 1314, 1306, 1304, 3032, 1308, 1323, 3043, 1368, 1301,
          1302, 3059, 1354, 1355, 1371, 3045, 1311, 1312, 1435, 1519, 3085, 
         1520, 1522, 1523, 1502, 3079, 1503, 1515, 1511, 3083, 1513, 1646, 
         1653, 3124, 1658, 1659, 1661, 1656, 1655}], 
        Line3DBox[{1328, 3035, 1329, 1358, 1380, 3047, 1378, 1372, 1338, 3038,
          1337, 1387, 1412, 1332, 3036, 1333, 1630, 1389, 3050, 1390, 1467, 
         1463, 3073, 1462, 1491, 1474, 1472, 3091, 1541, 1558, 1543, 3092, 
         1544, 1548, 1549, 3094, 1552, 1566, 1592, 1590}], 
        Line3DBox[{1342, 1343, 1407, 3053, 1409, 1631, 1636, 1621, 3111, 1465,
          1415, 1416, 3110, 1617, 1614, 1610, 3104, 1493, 1495, 1581, 3106, 
         1560, 1561, 1553, 1555, 1579, 3098, 1546, 1547, 1577, 1593}], 
        Line3DBox[{1414, 1379, 1381, 1413, 3056, 1341, 1344, 1408, 1410, 3117,
          1633, 1634, 1620, 1466, 1419, 3060, 1420, 3115, 1464, 1461, 1490, 
         1473, 1471, 3107, 1611, 1494, 1492, 1557, 1559, 3095, 1562, 1554, 
         1556, 3103, 1564, 1565, 1596, 1595, 1594}], 
        Line3DBox[{1439, 1438, 1521, 3089, 1530, 1531, 1527, 3087, 1526, 1535,
          3119, 1538, 1539, 1651, 3122, 1647, 1648, 1662, 1663, 1664}], 
        Line3DBox[CompressedData["
1:eJwV0LEuQ2EYgOHvcCoSTbgBkhrEKm6BzSSxdDQatJUu7diBS+AGzFwAcSKt
VgSDNBaDdMMiFiRNef7hyZvvO/nPf3Iqu7Xt/SwittiYidikV4rosl6OaJqD
jAZrdrlOPB9zw7RdX99p0WbB7kcP+JiLqOspy86e6Lfdse6xygo7VPn1bEkX
Oc8jLs1nOpXu4slc1vn0bvuB+U1feOCeZ7r2Q31lxCd3dl+aOfunj1zbDfQ2
3cWV+SKdp0dhLrTj2484TP9iNuIfDJAvWg==
         "]], 
        Line3DBox[{1624, 3112, 1609, 1608, 3105, 1612, 1626, 1625, 3114, 1587,
          1574, 1576, 1589, 3118, 1639, 1638, 1629, 1627}], 
        Line3DBox[{1635, 3116, 1632, 1454, 1455, 3109, 1606, 1607, 1616, 3108,
          1615, 1582, 1580, 1613, 3113, 1569, 1568, 1578, 3102, 1486, 1456, 
         1457, 1628}], 
        Line3DBox[{1643, 1641, 1585, 1518, 3084, 1348, 1349, 1489, 3078, 1488,
          1499, 1500, 3090, 1469, 1429, 1430, 1572, 1443, 3067, 1442, 1393, 
         1391, 3068, 1444, 1424, 3062, 1423, 1385, 1384, 1383, 3048, 1382, 
         1405, 1400, 1399, 3052, 1322, 1316, 1289, 3024, 1287, 1291, 1294, 
         1258, 1256, 3021, 1243, 1245, 3014, 1238, 1236, 1247, 1249, 3023, 
         1278, 1222, 1223, 1217, 3248, 1219, 1228, 1226, 3009, 1210, 1211, 
         1214}], 
        Line3DBox[{1665, 1603, 1601, 1637, 1481, 3077, 1483, 1588, 1575, 1573,
          1586, 3101, 1597, 1623, 1622}], 
        Line3DBox[{1669, 1668, 1602, 1542, 1480, 3076, 1482, 1618, 1619}], 
        Line3DBox[CompressedData["
1:eJwNz71KAmAYBeBXgmroHqw7aJGQaBBySglERwWl2URXh0a9gaIWrRxUGqLF
IdqqJZoapPJnDLqCGoKe4eG853zTt1U7LtQTEZHnfDWish5RpUaZC1t6I6Iv
e5yyo5/JAdfs6mP5wYxX9m0v8oF7btmz3ckhIyY8krE/y2++yOkLOadDSu/K
H35p6qm1iG0SrJClScNbS/5xwgFHtrx8o+suySJPXNG2Xcop7ywZ23L+P3N/
cui+sfXcfTb1JP/WxC7B
         "]], 
        Line3DBox[{1727, 1728, 1715, 3134, 1716, 1708, 1710, 1747, 3141, 1745,
          1730, 1729, 1738, 1735, 3138, 1736, 1828, 1815, 3160, 1814, 1820, 
         1836, 1834, 1773, 3151, 1771, 1915, 1832, 3162, 1831, 1826, 1827, 
         3190, 1921, 1893, 3178, 1872, 1870, 1928, 1926, 3192, 1927, 1950, 
         1980, 3201, 1979, 2025, 3217, 2038, 2058, 1934, 1933, 2073}], 
        Line3DBox[{1755, 1742, 1740, 3143, 1752, 1896, 3182, 1897, 1750, 1749,
          3150, 1768, 1775, 1782, 3152, 1680, 1681, 1788, 3154, 1780, 1778, 
         1809, 1844, 3165, 1841, 1794, 1792, 1900, 3221, 1902, 1901, 3185, 
         1909, 2026, 2004, 1935, 3193, 1911, 1912, 1999, 3207, 2000, 2008, 
         1991, 1985, 1987, 3241, 2120, 2125, 2119, 1982, 3202, 1981, 2135, 
         2132, 2129}], 
        Line3DBox[{1799, 1789, 1781, 1779, 3153, 1783, 1798, 3164, 1843, 1776,
          1777, 3180, 1829, 1830, 1846, 3166, 1786, 1787, 1910, 1994, 3206, 
         1995, 1997, 1998, 1977, 3200, 1978, 1990, 1986, 3204, 1988, 2121, 
         2128, 3245, 2133, 2134, 2136, 2131, 2130}], 
        Line3DBox[{1803, 3156, 1804, 1833, 1855, 3168, 1853, 1847, 1813, 3159,
          1812, 1862, 1887, 1807, 3157, 1808, 2105, 1864, 3171, 1865, 1942, 
         1938, 3194, 1937, 1966, 1949, 1947, 3212, 2016, 2033, 2018, 3213, 
         2019, 2023, 2024, 3215, 2027, 2041, 2067, 2065}], 
        Line3DBox[{1817, 1818, 1882, 3174, 1884, 2106, 2111, 2096, 3232, 1940,
          1890, 1891, 3231, 2092, 2089, 2085, 3225, 1968, 1970, 2056, 3227, 
         2035, 2036, 2028, 2030, 2054, 3219, 2021, 2022, 2052, 2068}], 
        Line3DBox[{1889, 1854, 1856, 1888, 3177, 1816, 1819, 1883, 1885, 3238,
          2108, 2109, 2095, 1941, 1894, 3181, 1895, 3236, 1939, 1936, 1965, 
         1948, 1946, 3228, 2086, 1969, 1967, 2032, 2034, 3216, 2037, 2029, 
         2031, 3224, 2039, 2040, 2071, 2070, 2069}], 
        Line3DBox[{1914, 1913, 1996, 3210, 2005, 2006, 2002, 3208, 2001, 2010,
          3240, 2013, 2014, 2126, 3243, 2122, 2123, 2137, 2138, 2139}], 
        Line3DBox[{2099, 3233, 2084, 2083, 3226, 2087, 2101, 2100, 3235, 2062,
          2049, 2051, 2064, 3239, 2114, 2113, 2104, 2102}], 
        Line3DBox[{2110, 3237, 2107, 1929, 1930, 3230, 2081, 2082, 2091, 3229,
          2090, 2057, 2055, 2088, 3234, 2044, 2043, 2053, 3223, 1961, 1931, 
         1932, 2103}], 
        Line3DBox[{2118, 2116, 2060, 1993, 3205, 1823, 1824, 1964, 3199, 1963,
          1974, 1975, 3211, 1944, 1904, 1905, 2047, 1918, 3188, 1917, 1868, 
         1866, 3189, 1919, 1899, 3183, 1898, 1860, 1859, 1858, 3169, 1857, 
         1880, 1875, 1874, 3173, 1797, 1791, 1764, 3145, 1762, 1766, 1769, 
         1733, 1731, 3142, 1718, 1720, 3135, 1713, 1711, 1722, 1724, 3144, 
         1753, 1697, 1698, 1692, 3128, 1694, 1703, 1701, 3130, 1684, 1685, 
         1688}], 
        Line3DBox[{2140, 2078, 2076, 2112, 1956, 3198, 1958, 2063, 2050, 2048,
          2061, 3222, 2072, 2098, 2097}], 
        Line3DBox[{2144, 2143, 2077, 2017, 1955, 3197, 1957, 2093, 2094}], 
        Line3DBox[{742, 743, 752, 750, 2892, 758, 735, 734, 2896, 777, 773, 
         736, 737, 2899, 793, 807, 804, 802, 2906, 815, 814, 820, 2907, 816, 
         818, 845, 851, 2920, 876, 891, 889, 2934, 893, 892, 962, 2946, 932, 
         933, 970, 739, 2887, 738, 977, 946, 2938, 927, 925, 957, 2954, 999, 
         1016, 1027, 1030, 2977, 1098, 880, 877, 1046, 2979, 1111, 1167, 1169,
          1127, 1126}], 
        Line3DBox[{782, 763, 765, 2909, 799, 800, 856, 855, 2914, 857, 906, 
         2935, 940, 902, 903, 935, 827, 829, 2929, 917, 866, 2917, 865, 860, 
         861, 2922, 896, 976, 905, 2926, 904, 997, 979, 2950, 978, 1013, 1014,
          1072, 2973, 1025, 1026, 1038, 2962, 1037, 1094, 1118}], 
        Line3DBox[{1251, 1232, 1234, 3028, 1268, 1269, 1326, 1325, 3034, 1327,
          1377, 3055, 1411, 1373, 1374, 1406, 1297, 1299, 3049, 1388, 1336, 
         3037, 1335, 1330, 1331, 3042, 1367, 1447, 1376, 3046, 1375, 1468, 
         1450, 3070, 1449, 1484, 1485, 1545, 3093, 1496, 1497, 1509, 3082, 
         1508, 1567, 1591}], 
        Line3DBox[{1599, 1600, 1642, 1640, 1584, 3099, 1517, 1347, 1350, 1571,
          3097, 1501, 1498, 1487, 1470, 3074, 1428, 1396, 1398, 3058, 1417, 
         1448, 1205, 3006, 1206, 1441, 1404, 1403, 3066, 1433, 1363, 1364, 
         3054, 1360, 1362, 1346, 3040, 1321, 1315, 1288, 1286, 3026, 1290, 
         1284, 1285, 3025, 1271, 1273, 1276, 1262, 3018, 1204, 1203, 1242, 
         1246, 3015, 1201, 1202, 1227, 3011, 2156, 1218, 2155, 2158}], 
        Line3DBox[{1682, 1683, 1693, 1691, 3132, 1702, 1675, 1674, 3136, 1721,
          1717, 1676, 1677, 3139, 1737, 1751, 1748, 1746, 3146, 1760, 1759, 
         1765, 3147, 1761, 1763, 1790, 1796, 3161, 1821, 1837, 1835, 3175, 
         1839, 1838, 1908, 3187, 1878, 1879, 1916, 1679, 3126, 1678, 1923, 
         1892, 3179, 1873, 1871, 1903, 3195, 1945, 1962, 1973, 1976, 3218, 
         2046, 1825, 1822, 1992, 3220, 2059, 2115, 2117, 2075, 2074}], 
        Line3DBox[{1726, 1707, 1709, 3149, 1743, 1744, 1801, 1800, 3155, 1802,
          1852, 3176, 1886, 1848, 1849, 1881, 1772, 1774, 3170, 1863, 1811, 
         3158, 1810, 1805, 1806, 3163, 1842, 1922, 1851, 3167, 1850, 1943, 
         1925, 3191, 1924, 1959, 1960, 2020, 3214, 1971, 1972, 1984, 3203, 
         1983, 2042, 2066}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJzt3E2ITVEcAPDXzFgZC/kaKR+N2RELlIUuS6woltRIsyE7xUqyQcokhITU
RBZmFiYL9RqhbMYo42MSBkPNjGZKigVR7myGm57um3vufb+7Ob1ft3P/93/e
e/fd8/73LGndt3V3XalU6mwslepLSdt41NT07NCiYx/itnvS6/C90vNKKw9J
/RQ1zzzd96E4a9Or/f0TWpx58Vo736K6ceS17JW+/31eOOec8z89L9fT0OI8
+3Fo88LXQ+WuvaO3t7f1TbxOPG7S/kX1vOch7/FzzjnnnHPOOeech+ZZzbfk
ZZ4nDuzQi0/l+y2XXpZ/t6P/8j/O6z/74ZxzzjnnnHPOOeecF88nbcnP/2bl
ldZ/8qnxao9LWvW6lXpo9dvVrqMOrf+i5i00r/bnNK3+kzyr//tCG8dK/fDR
q4tv9L+J286o48mXbe+XjAQXJ+ecc87z68ubL66vG30dtzejXYcv/Hh+Pbzf
Gw0dS9esujAYt13RgtkHWnZeGQ4uTs4555xzznk4Xuk8Oeecc84555xzzjnn
nPN0PbT1f2ptHaS1W+rbRucMlvu/HTn/9vLDqLHv1bwzG4eDyxvnnHPOOeec
c84555xzzjnnnHPOOeecc845L7ZPVNYOxOvtD0xab59n63ebZow83V8u1597
cP9dz1jm8XDOOeecc84555xzzjnnnHPOOeecc84555zzMH3Tzv49p1feLDd/
Prjs4Xj1605DW2+52uszl/66jSfun3TctPrJyk/MPDlwfFpP3LZH7c9a787v
HovufL+2oaG+J27bo3XNrY9X/PK0jpuUt6z64VPjoY3Xwq87TkXzhuL2VtS7
+tG+5yMfg8tb3vNca/FzzjnP1pOuI64vnFfPQ3vOutrzA3nxop4X55xzzjnn
nPPfPnGnF1qdA+ecc84555xzXmTPqu4lq/qZSvtJy9OqT8gq/1mNF+c8nO9h
zkPw0P7X4Jxzni+f+CUUyv0455zzYnha9zXu63nIPqtpee/MtsG47Yr2TO/Z
PvfecHBxcs4555yHNh/FOeecc855yB7afDvnnHPOOed59LTmsX8CaeVg4w==

      "]], Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {427.9223589780358, 207.71155622310144`}, ImageSizeRaw -> 
    Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotLabel -> 
    FormBox["\"Basis functions of \\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(\
\[CapitalDelta]), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\))=(0,0), \
(\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(2\\)]\\))=(1,0), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(3\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(3\\)]\\))=(\\!\\(\\*FractionBox[\\(3\\), \\(4\\)]\\),2)\"", 
      TraditionalForm], PlotRange -> {{0., 1.}, {0., 2.}, {0, 1}}, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], Automatic}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {-2.7593673230320297`, -1.8784609425469658`, 
     0.5543252329712327}, ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(3\\)]\\)\""}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6727539156527395`*^9, 3.6727541358076534`*^9, 3.6727542172876606`*^9, 
   3.6727542941134014`*^9, 3.6727543626663427`*^9, 3.6727544998299694`*^9, 
   3.67275471483076*^9, 3.672754810601467*^9, 3.6727548448828135`*^9, 
   3.6727550172633944`*^9, 3.6727550610067573`*^9, {3.672902243081483*^9, 
   3.672902255832037*^9}, 3.672904327051036*^9, 3.672932552425459*^9, 
   3.672932660657647*^9, 3.6730904845491753`*^9, 3.6730908473453503`*^9, 
   3.673104873245055*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cool formula", "Subsection",
 CellChangeTimes->{{3.672755212565378*^9, 3.6727552165209374`*^9}, {
  3.6730908501856184`*^9, 3.673090852048235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "1"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "m"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "3"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "p"]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"coolFormula", "[", 
    RowBox[{"m_Integer", ",", "n_Integer", ",", "p_Integer"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"2", 
     RowBox[{"m", "!"}], 
     RowBox[{"n", "!"}], 
     RowBox[{"p", "!"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "n", "+", "p", "+", "2"}], ")"}], "!"}]]}]}]], "Input",
 CellChangeTimes->{{3.672755219709717*^9, 3.672755270923072*^9}, {
  3.6727553672951326`*^9, 3.6727554844737763`*^9}, {3.6729047795701237`*^9, 
  3.672904796400358*^9}, {3.672904948700059*^9, 3.6729049548864665`*^9}, {
  3.672933114889988*^9, 3.6729331449111753`*^9}, {3.673017247387499*^9, 
  3.6730172556567464`*^9}, {3.673021287509201*^9, 3.673021290927805*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals", "Subsection",
 CellChangeTimes->{{3.6727555220708313`*^9, 3.6727555258345995`*^9}}],

Cell[CellGroupData[{

Cell["Local mass matrix", "Subsubsection",
 CellChangeTimes->{{3.6730145927109165`*^9, 3.67301460518617*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"massMatrix", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Area", "@", "element"}], "60"], 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"6", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         SubscriptBox["c", "3"]}], ",", 
        RowBox[{
         RowBox[{"3", " ", 
          SubscriptBox["c", "1"]}], "+", 
         SubscriptBox["c", "2"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         SubscriptBox["c", "3"]}], ",", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"6", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         SubscriptBox["c", "1"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"3", " ", 
          SubscriptBox["c", "1"]}], "+", 
         SubscriptBox["c", "2"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         SubscriptBox["c", "1"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         RowBox[{"2", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"6", 
          SubscriptBox["c", "3"]}]}]}], "}"}]}], "\[IndentingNewLine]", 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730159554964733`*^9, 3.6730159681470923`*^9}, {
  3.673016037109254*^9, 3.67301629863661*^9}, {3.673016398453666*^9, 
  3.6730164711759405`*^9}, {3.6730165057977805`*^9, 3.6730166532783756`*^9}, {
  3.67301674978185*^9, 3.6730167537233753`*^9}, {3.6730168705882792`*^9, 
  3.673016918457117*^9}, {3.6730169806609464`*^9, 3.6730169812339387`*^9}, {
  3.6730178111897583`*^9, 3.6730178123619156`*^9}, {3.6730186169116735`*^9, 
  3.67301864483562*^9}, {3.6730187275728264`*^9, 3.673018735900337*^9}, {
  3.6730188062673035`*^9, 3.673018951096002*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "3"], 
   RowBox[{
    SubscriptBox["c", "k"], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massMatrixTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "i"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "j"], "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673016985133007*^9, 3.673017051451242*^9}, {
   3.6730170947637253`*^9, 3.6730171890075855`*^9}, {3.673017278080374*^9, 
   3.6730174327251005`*^9}, {3.6730179367743206`*^9, 3.673017942162655*^9}, 
   3.6730196512386775`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"massMatrix", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["c", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"massMatrixTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["c", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6730175051661334`*^9, 3.6730175150196857`*^9}, {
  3.6730175598807683`*^9, 3.6730176451590014`*^9}, {3.6730176763244333`*^9, 
  3.6730177188848734`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["37", "30"], ",", 
     FractionBox["9", "20"], ",", 
     FractionBox["8", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "20"], ",", 
     FractionBox["17", "30"], ",", 
     FractionBox["3", "20"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["8", "15"], ",", 
     FractionBox["3", "20"], ",", 
     FractionBox["1", "30"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673017129819927*^9, 3.6730171620660725`*^9}, 
   3.673017209798956*^9, 3.6730174384862704`*^9, {3.6730174957882657`*^9, 
   3.6730175157474008`*^9}, {3.6730175616759515`*^9, 3.6730175783975935`*^9}, 
   3.673017646544443*^9, 3.673017677166813*^9, 3.673017719792588*^9, 
   3.6730178349187922`*^9, {3.6730178837692137`*^9, 3.6730178936213164`*^9}, 
   3.673018011855851*^9, 3.673018962352027*^9, 3.6730909280666485`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["37", "30"], ",", 
     FractionBox["9", "20"], ",", 
     FractionBox["19", "60"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "20"], ",", 
     FractionBox["17", "30"], ",", 
     FractionBox["3", "20"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["19", "60"], ",", 
     FractionBox["3", "20"], ",", 
     FractionBox["1", "30"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673017129819927*^9, 3.6730171620660725`*^9}, 
   3.673017209798956*^9, 3.6730174384862704`*^9, {3.6730174957882657`*^9, 
   3.6730175157474008`*^9}, {3.6730175616759515`*^9, 3.6730175783975935`*^9}, 
   3.673017646544443*^9, 3.673017677166813*^9, 3.673017719792588*^9, 
   3.6730178349187922`*^9, {3.6730178837692137`*^9, 3.6730178936213164`*^9}, 
   3.673018011855851*^9, 3.673018962352027*^9, 3.6730909280756536`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local stiffness matrix", "Subsubsection",
 CellChangeTimes->{{3.672902382846168*^9, 3.6729024233021145`*^9}, {
  3.6729071294706197`*^9, 3.6729071307699413`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stiffnessMatrix", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["a", "1"], "+", 
      SubscriptBox["a", "2"], "+", 
      SubscriptBox["a", "3"]}], 
     RowBox[{"12", 
      RowBox[{"Area", "@", "element"}]}]], 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "3"], "-", 
            SubscriptBox["y", "2"]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "3"], "-", 
            SubscriptBox["y", "2"]}], ")"}]}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673020215072007*^9, 3.6730202547387495`*^9}, {
  3.6730202847599125`*^9, 3.6730203194062357`*^9}, {3.673020364562554*^9, 
  3.6730206159632053`*^9}, {3.673020680534424*^9, 3.6730207157268734`*^9}, {
  3.6730207732598677`*^9, 3.6730207735993853`*^9}, {3.6730209319777613`*^9, 
  3.6730209635038395`*^9}, {3.6730210109735312`*^9, 3.673021081407264*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "3"], 
   RowBox[{
    SubscriptBox["a", "k"], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stiffnessMatrixTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         RowBox[{"Grad", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "i"], "[", 
            RowBox[{"u", ",", "v"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ".", 
         RowBox[{"Grad", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "j"], "[", 
            RowBox[{"u", ",", "v"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"useful", ":", " ", 
    RowBox[{"FullSimplify", "[", "]"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.672755527154593*^9, 3.672755527714449*^9}, {
   3.672755631259221*^9, 3.672755697806766*^9}, {3.6727557361142855`*^9, 
   3.672755743326645*^9}, {3.672755781740777*^9, 3.6727557995292535`*^9}, {
   3.672755905488509*^9, 3.6727559289954844`*^9}, {3.673019351498725*^9, 
   3.673019533776351*^9}, 3.673019647113946*^9, {3.6730212504831448`*^9, 
   3.6730212650387526`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"stiffnessMatrix", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["a", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["a", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"stiffnessMatrixTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["a", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["a", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.673020605758695*^9, 3.673020637370582*^9}, {
  3.6730207367587156`*^9, 3.673020749913376*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["715", "192"], ",", 
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "48"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     FractionBox["803", "192"], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "48"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}], ",", 
     FractionBox["11", "12"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6730206382248144`*^9, {3.6730206864320593`*^9, 3.673020720589514*^9}, {
   3.6730207506053033`*^9, 3.673020778059241*^9}, 3.6730209393396225`*^9, 
   3.6730209770409317`*^9, 3.673021042108672*^9, 3.6730212296800137`*^9, 
   3.6730909625239916`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["715", "192"], ",", 
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "48"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     FractionBox["803", "192"], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "48"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}], ",", 
     FractionBox["11", "12"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6730206382248144`*^9, {3.6730206864320593`*^9, 3.673020720589514*^9}, {
   3.6730207506053033`*^9, 3.673020778059241*^9}, 3.6730209393396225`*^9, 
   3.6730209770409317`*^9, 3.673021042108672*^9, 3.6730212296800137`*^9, 
   3.673090962543632*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Local stiffness matrix: quadratic basis for diffusion coef ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.673094655833147*^9, 3.6730946950662985`*^9}}],

Cell[TextData[{
 "Basis functions for linear space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "2"], "(", "\[CapitalDelta]", ")"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"v", ":", 
         RowBox[{"v", "(", 
          RowBox[{"x", ",", "y"}], ")"}]}], "=", 
        RowBox[{
         RowBox[{"a", " ", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["y", "2"]}], "+", 
         RowBox[{"c", " ", "x", " ", "y"}], " ", "+", 
         RowBox[{"d", " ", "x"}], "+", 
         RowBox[{"e", " ", "y"}], "+", "f"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "\[Element]", "\[CapitalDelta]"}]}], 
      "}"}]}], ",", " ", 
    RowBox[{"\[CapitalDelta]", ":=", 
     RowBox[{"triangle", " ", 
      RowBox[{"w", "/", " ", "nodes"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}]}]}], ",", " ", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.673095808546198*^9, 3.673095845939505*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "need", " ", "3", " ", "more", " ", "degrees", " ", "of", " ", 
    "freedom", " ", "to", " ", "define", " ", "nodal", " ", 
    RowBox[{"basis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "4"], ",", 
       SubscriptBox["y", "4"]}], "}"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "2"], ",", 
         SubscriptBox["y", "2"]}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "3"], ",", 
         SubscriptBox["y", "3"]}], "}"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "5"], ",", 
       SubscriptBox["y", "5"]}], "}"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "1"], ",", 
         SubscriptBox["y", "1"]}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "3"], ",", 
         SubscriptBox["y", "3"]}], "}"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "6"], ",", 
       SubscriptBox["y", "6"]}], "}"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "1"], ",", 
         SubscriptBox["y", "1"]}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "2"], ",", 
         SubscriptBox["y", "2"]}], "}"}]}], "2"]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"QuadBasisCoef", "=", 
     RowBox[{"Inverse", "@", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["x", "1"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "2"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "3"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "4"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "5"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "6"], "2"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["y", "1"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "2"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "3"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "4"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "5"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "6"], "2"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], 
           SubscriptBox["y", "1"]}], ",", 
          RowBox[{
           SubscriptBox["x", "2"], 
           SubscriptBox["y", "2"]}], ",", 
          RowBox[{
           SubscriptBox["x", "3"], 
           SubscriptBox["y", "3"]}], ",", 
          RowBox[{
           SubscriptBox["x", "4"], 
           SubscriptBox["y", "4"]}], ",", 
          RowBox[{
           SubscriptBox["x", "5"], 
           SubscriptBox["y", "5"]}], ",", 
          RowBox[{
           SubscriptBox["x", "6"], 
           SubscriptBox["y", "6"]}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "1"], ",", 
          SubscriptBox["x", "2"], ",", 
          SubscriptBox["x", "3"], ",", 
          SubscriptBox["x", "4"], ",", 
          SubscriptBox["x", "5"], ",", 
          SubscriptBox["x", "6"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["y", "1"], ",", 
          SubscriptBox["y", "2"], ",", 
          SubscriptBox["y", "3"], ",", 
          SubscriptBox["y", "4"], ",", 
          SubscriptBox["y", "5"], ",", 
          SubscriptBox["y", "6"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
         "}"}]}], "\[IndentingNewLine]", "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "1"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"QuadBasisCoef", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       SuperscriptBox["y", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", "x", ",", "y", ",", "1"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "2"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"QuadBasisCoef", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       SuperscriptBox["y", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", "x", ",", "y", ",", "1"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "3"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"QuadBasisCoef", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       SuperscriptBox["y", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", "x", ",", "y", ",", "1"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "4"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"QuadBasisCoef", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       SuperscriptBox["y", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", "x", ",", "y", ",", "1"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "5"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"QuadBasisCoef", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       SuperscriptBox["y", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", "x", ",", "y", ",", "1"}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "6"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"QuadBasisCoef", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       SuperscriptBox["y", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", "x", ",", "y", ",", "1"}], 
      "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6730959313628125`*^9, 3.6730959419391003`*^9}, {
  3.6730961652333193`*^9, 3.6730962504473734`*^9}, {3.673096290965461*^9, 
  3.673096357414111*^9}, {3.6730963883586693`*^9, 3.673096441023409*^9}, {
  3.6730964831475906`*^9, 3.673096498693993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Psi]", "1"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "2"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "3"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "4"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "5"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "6"], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "3"], "\[Rule]", 
        FractionBox["3", "4"]}], ",", 
       RowBox[{
        SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "K"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(5\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(6\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Basis functions of \!\(\*SubscriptBox[\(P\), \
\(2\)]\)(\[CapitalDelta]), (\!\(\*SubscriptBox[\(x\), \
\(1\)]\),\!\(\*SubscriptBox[\(y\), \(1\)]\))=(0,0), \
(\!\(\*SubscriptBox[\(x\), \(2\)]\),\!\(\*SubscriptBox[\(y\), \
\(2\)]\))=(1,0), (\!\(\*SubscriptBox[\(x\), \
\(3\)]\),\!\(\*SubscriptBox[\(y\), \(3\)]\))=(\!\(\*FractionBox[\(3\), \(4\)]\
\),2)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673095663358669*^9, 3.6730957461086826`*^9}, {
  3.6730966218171024`*^9, 3.6730966223650804`*^9}, {3.673104836107353*^9, 
  3.673104845681744*^9}, {3.6731048922539225`*^9, 3.6731048946005325`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
I6TdznDOO5WAn8ut+Ey6kq8BRI/bR+TMkXHvtnTrufNvm0Ft19Mcxw8kPp6e
x4XCahogy0V3quu8M86fLwqpNzPqVAEnxfz7C7djcTv0WxDPc6FKAx96vTWK
XqSfNg37fK4+XgeSQZWdZ5ZIuxWjkr426dsAJe8OF+kFIz0K0hv5QSYqE2Y5
EtgqxxFvmQW/35yj+T2TCILdHHH8uxBvFgUGf4eDKdZmw1j0rh3rOoi9VJ17
wKmFLLjzWErnbTX6HtYOGWpUgxdl68CZmav5GxNpz+12YkkFsxUQF3bumqO6
F47zI0fKl08CauEUS4YAHTPJBz7B09GX+ytBp4dFRJKb9NNzUZQ8ZQXFkPb2
cNlAQgaul/jAtVdjFFog+caWTMebJM4XpCRfnQ5tBg7Fdc8Z19rgesm1Tkqk
NaiFSOOJ9vN/k3B7S0tlOUPHWgfj+TkBPcMF2N6CNjfudUodJGnTJDqdI/aX
nAszjZf9UGTLvZhmLMRxoOE1OZK7WApLhuGyCbRfcBxc5KJyFc0K4LWk/laD
uXckz98mL3xouApSRc7l39Ij4/bHx38+seRWgd7z+jslbWR8m8ztN+N0roX8
Cfearf+2n+lSn2a/j70CpncLnt91DPkZBj4X13jfinp46qrUPp4UhfWK2qGq
kT91cOloG9WrGbJPPhO0+xNHRRFUSB29d34yGutnX/v3Hx0vB86aLlstWTJP
1dYsvdQSzoCw9hq3x6FpWH9DZ2dQmJAD/Y9q41TkyD6Sh2z0h8uXE2D+s4U1
3SszrK97Ykb9njUbclTMXkGtE/ZTIGbDr+JYCRbuYotwOgWXn/Ly+cvdF6uW
/YWMdn2KxvYOHiI/1/hWwO/dgSYsvsTepnPft9DmEuDofS8Yv4P0L1vXh1cz
dZrhpeVMdp8N2d/gFA3crfigGhjU/D2k26NxnFddu6X6dz4bFoxDu9JXp+B6
mYou6EsUiwP7nJa6i5Zk/ShTUf7wY2g77Gu0aVyfGor1XbZbNM3vtYLtJlOD
D/vDsX5udmhS3bgFGMo2iL6ViMD6IcGovwlzjRDQn0n/jCsKv6/9x0XVgw8b
wXoTqz4V3m8ZhPzorCBar1o4saPe6PMU0kfh2qOj9VJ2dWB3WeGd4gcXrK95
qjv1ZUMDaDqeVKPRe43jQ+Mi6+d/swMqbjhSZNmQ+t1GtTp4b3gHHC9+FkvP
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
i9+lFPx9KThG1yp3faKsrs6WK3zA+YzD15SeY2pFlIuQ5HnLczifEVxtEpNk
kk89FV0kx7Ic5zNJNpZDj8ULqA0KBUOTH/D42DyZyzQwE0XVXBNTSXPB46lk
64fB39zZlD6/pLaHF85zLJa1bJ5WTqDoud+qGPvg9mB49tIe64tVVJZ9lNuD
NzjP2dbrXt8nlEWtPD9wYYcDzgO90k4I/TxXTAn1m56LkcRxHvqa9qZ3uoiK
mQ2e4r+H8/DnNiKHN5gHUhZP10/YckWSflKKfrDtLXhB0TfZP9MVx9/Lyeua
r/MkYqnORX7GQ954nceS9THrh9QM6jd/5IPlnLj88Wz3g+8OZFKh3zKnLRlx
eRjz5xyWLciimLSlrKtycT2aZDJaCo1UUit+yOesWonbmz+3JB3/3npK8eZx
RtlGbH/Rn45/fWsd5Td0LVTwNY5zlzO/9fWOSoqrutpq5C3Ol3Qzr6ed3FZJ
PVaN9fRdjstZo8XBX8/bTJV9N0ppLMfv1V57YfLp9QYqmUMv9+UGXL8c3rdP
fi6ro8SCVzcfF4gj6yWbx8gorMWFonFt8axVxe2QdoJDNmGknTpP1ealTuE8
PFU0M1xgaw/VGPnOb+VpbM/C7Lv+gWQvZXi32MzwIrqRShXB/OaH0dQLewdJ
V3e8rvXTRjoruzCTCmc/JqDyzIq0j8nbzxnqnksd4QkJdnfA5xDh/XfjytPR
xWO4H4YcjDshpZ11ww4U1CEHI6iXuqqbqU32t5CDcZjFX677eT0FdcjByPXI
tI0410zqkIPxdJdlkv4rdIOQgxF73OJVeVYFqUMOxgtDhkdKo3g8hRyMC4rX
Qrvp8Loc5GC8pzQC0tfCc5GYg7HdZHuwphn6FsjBUFgZ3Xu2rIPUIQfDhutO
ToAW1DEH48RAw2tZiR5ShxyM4VtbUqYVesm4QQ6GwglVevoOdHGQg2F7TPz1
96Iu0g/kYKz9PzmZmINx3iY5/dHFQVzOPzkYJy92V54Jayf9QA6G8uY1b/zv
tpH2kINRRptRuIQLvxfkYAi+SE/7ytFBPhdyMDIWfBJW1MPvBTkY5/V4AkPW
DZB+IAdjZVu59F6zZlKHHIyOj3vNzvWib4QcDMNDd6Vb09tJHXIwtm9M3XSg
D5cTcjCe5baWasd2ke8FORg7tj8KzT7ZQtpDDoaNREJOzSx+L8jBkKhkUfrI
VUrqkIOxT65EcXl7HqlDDkZX/SeTr07gATAHw2yLXPLry4V/6piDISp29u6E
aQlpDzkYho1Fekx7Ckh7yMG4uftAo35wMVl+yMFgkTe7n3ShiiwP5GBcq14Y
2BheSdpDDkZn62alKBZsD05goY2HyVXpCvK5kI9htdYgsyu+itQhH2P8YDpf
3bVSMs6Qj1FTVq/88FYN+VzIxzjxmFc8ub+AfC7kYyS58GXr3cgj7SEfY8lq
b1p/5WLSP+RjhA5/SFt7po60h3yMdKprS8Eb/F5wPbxYoGzLpThcHsjNeFkq
d6i/tpa0h9wMFt7HkjYkLxpzM6SWcbVJvy0h4/Dv32nK/fmFIIlVDaQOuRnW
GQre8Qq1pA65GY8Wu//gZMV8bMjNEJDO2WJekoHb55/r9oe0q1c+/5lBlhPy
NOhsXpk/l8VxgzwNjdSl9Xo+6aQ93Ke4HekQzciMnws5G+vWTY+eFY0idcjZ
WK9xyTFEIpiMP+RsPP9Iv55/FJ8bgpwN1pg8vr0iceRzIWcjrn80XMcexxly
Nm56Xqs+dg/dO+RsHGMMaulKyCJ1yNlYOtknP7o4jXwu5Gx8MbmY0vk7iywn
5Gwo7bi9jmFNDmkPORun42W3VTLlkfaQsyF549jzWk1ojzkbTXobZdS3oq+G
nI0htfEPPi6FpB/I2Vjw2mStdCr2A8dT88EFK0qJ68b7RHsSlzW7u+LvFPI3
rpxNe13P0EDGjbxPtp5/L+839PmQvyGsrRNHnW8idcjfcAuyZ9RYHEDqkL8x
yz7zaYMaPtcG+RtOXomzYduTSR3yN7QGtWket2WSOuRvhFo1V+83iSTLD/kb
jC1XI+VkYkh7yN84ZnlM8WxZBGkP+RsLppZKxfIFkvZwvyxBw4MvVRGfZ4Fc
DpFTX5UbPPA5UMjlqO/UG3ShiSXjDLkc/pwLimraM0k/cN+t8wbTkspvKaQf
yOsIlJJ4//hwEm4/f/I6xnumoouSMScB8jrUtoncXCeNz8NCXseLrF9+beuw
PeR1pPooJ2Vo47wL8jreVX+LlSGfi3kd210WMrGbYd4F5HXc3fQ2U2wpvmcK
8jrW0k1ysovakjrkdTxPUVX47GtA6pDXcWoRfYykbDT5XMjrGHvx33kda1v0
s/exwPvTMa/DovJW42kzzPuCvI6WLTobAuXx/bmQ1zG+/Vjt0+2YzwZ5Haaa
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
DnPWrof/ATPfWVI=
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
GH9szQLXTr838aw9fJjxQBE50ZAifOwg8Pgi7HQz8GD3DNqcRTxjbO93/f62
tFej4R+l7w4v4tviUfBr6H+mPq6IZ7YvK+KZeAX8ZeiHLHK0Fand2HsY+3iX
voY9fjqt9z5+zy9izOZ55ECuvVbaa/dcWXuniPMaWMS37d+viPOzvW8R5+c5
KoOzk+w1yUMWbf+VPjutcVYe8Z1yZZ61NO3hljzyylc5mx76iDS+8rI8yZV5
4rK0rm3gx8CtwHPy0A3lwdjoH6y3BfirMuTYczf2WFhEeyt9PPhy8KA8zq99
msvG1N6/CNlyTPWvTxEyNreI9bsP7l//1N/x+qY5zytCDpSHx4s4e2VgSRF6
oi48W8R5uyfuzZh0Lp7P+CQ/K4vQMXXtySJsirbFGGpg+pb7NCjtg/thvvMM
fHE13necVkXowEHJrmiztF1bkg6oC9o2dUbd0Z6tKiK+Mg9+N43vd9al/dRO
9IbeyiION+c29/adT7P4rRxeZqxSE/nI13mco7andx7r0pYYTxpX1qHvd0l/
1eN/QweAf6yJ9p+rv/D/Qgdql+D/hI4Cb4fvlEcMtgt8P4jhsv3ziL/Mj/bN
I149FLyPi042X9t/ddIv9exeY/csfNP8pKf6+mnQjeDp+q2UG87Iw6fdkL5l
3HQR+Ez4D3zrMOWwJuKj690b+AAW+LA+lwkeDb9Q+ckjB3Rdrflu0zz23Pbu
ecjPZHhPawvGBry7MMVXQ+EteCdPecGOtD9fwOvRdgG4PrwtffbOIl5tCxVi
2jpXIsc012xRiTj6Csbpxu+raO9exnpc11l5xAhngM+H/8H4DHxYHnHELeDf
5REj2O5z4/B9wG/DN6T43Dh9bcoLttWEvGm7tGHvpHjeuH4jtG9617mJG/LS
G2kcxzP2Mc99vSbkQzkxL/o07bmy8VU6C3OkrdD+WeQmrxi/Z2F3NkF7KZPw
Faz/Xubem2++AH+c9nF55JXtwM8py8pNsiHKg7o8IA/bqsxYwzLOqg++Az4E
OiWd13jWMFp/x3euSDLQI49vOh9j47HQxZ6LcVjCY4yTkr/Tpo9hnJHw9owz
LMlw6zzOzfO6JAs50Rbpo6zbaD/1M+/kYff0Y76rbTF+aZlkT733W9o37eLA
ZFe1r3XKiGXMDYeXkWe3BV8GX+oZ0b9b8vX6kMnJ/pibPu66wR3zqGnoL/7s
uqFL0/yXJf2yBmMMe5v2M4+Y/zH1gG/1M85zz8DX5ZF3G887vvp7ex4xuHG/
sbz1q9WeFf07qG9Z1C2NMa07rc8jFzHPMoeYyO/D4QfkoT/q0XD40DLm3ppx
LoTvQnsz+Ldpf9ynNmntf9Rm5FFPyRM+C1wnjzhXe3JzHjGy/X3vjiQzV+Vx
Fqdl4bO6JBlQFrolm6BtMN+qC75HGayGHJuDL0l+R//4Dr8XZJHHdamE3BrD
WxOwTrcOfCF8ThZ1w64pzzUvMOYz7jqccfZU57OoVZ2snoNPgo+yzqZsVqPW
4bf8prKxBPwQ/FTXAz4lj5zH3MdcsmE1bLe58I/J5u+exrTONznl2UfTXsmj
jmk903xyCn0uhs+qxjl5Xj+Dv1/GWjaVYfe1/9bKNHpNYAcWUbuxj+s2F9eP
6E+s5ZnXuZ6D8vB3e8BPz6Mmdja8QzXkdZAxBnO4lHfmp5xGXWsEH16JeurQ
lIvo7/R75kbNwfPy8JH6Su3e5jLsjHUYa4vWx26CdygiXrJO1STpi+Mbn5tD
mC9YU52ZRW5orukaXWunMvyg+eBW8NNZ5FljoQHgF6yf5NFuDcp8rl4WOZH1
buveCypRz9DGWlPUZynnv4YfD12RRR3A8dUdaxX/X9/Poi4xI8WTu+ZR8/e7
1vpnqwOOw/PXy6iBm995ptYCpzNOp0qqj4LnViK2Mo5VDo+j/3nqQbKh3Xh+
ShF1SM9DX6m8mXv2KCOWM7edm2K5FnnUCdR16+LWya23nWWMV4aeer7m/rOy
qI3cVQnbYoxgfWFCev+3edSsrK9aPxsB/gV8vyJqedYOtI0NnRu8U7ID+lDz
63Py8LOflVGTtObTswz9Mu9eXRN1WnXHPNg6ifUSa/djkn07Mn3LNbQpI87p
WEbebxxuvmWtT382ONV71ev29Dmedx8Fn1FEvKZftm5nvdEacEsb8thDc6+r
iqifW0dvVYa+XlONWqj77zks5feAIuLwIXxrTR56av1KXzg61SLu1Ibz/MU8
bMXVnnEePsxYxxzQeR4B3wTdnYXOq5tHJpvguVgXb1mNOEBZ/T2/P0j9fe+c
ZK+0W5Po/1gW9cA/FlHrO7GIO4gned67Gnmm3zX3nUd72yzVUoqoM+t3rdVZ
TxgB/30RdXXvEPTL+ouPy1hfg+QjzIvHZ+HD+ucxpvcLT5QRq68tg8TaZGtV
2jp9mHcJ3l94tzCqDNvuHo5NvsE9XFXGvZg1EO9svLuxBrg42R91bQ6/O2VR
UzI31O88YJ2EPouziHOMi/S5T4DHlTF/60WejWdkjb1vJfxO3zJkXZmvFlFj
UcaNbUZW4s7KfMR7Pet+I8uIk4yX9N/GQuqF+mv9fFUW9cnlaa3eJ1h/t2Z+
ThF+zu+OTueozC6oxj2c93HWhSaW4QusNZnnWIMx7/EeUP3yfu6YJPNHp7UY
W3VknCllxNpdU31U/VLPdinivtK7q8urEZtal15t/JNF3dXYflIWtdNWKf/y
vu8M3mmaRdyvblpnupYxJoMbZVE7tc74bJKfmXnc/ZkvGx8YJ7SHT6P/XGU6
zVP7ObWMurX9Zyabph3Q9rzMs1quoRp3hF2zuF98Og8f7b2M9WFrRt7VDk1y
rrzPS37KeH5RGXd6A1Lt3HsN79/0I97rem87C7yR9i/o+5J6lUXNvGMlfEW3
auijtVZrrua0yqSy2SLZZ+20NX7vFq0JWC/1Tq1h8qfdwMtTDKMfblENv6mf
XJjk7e+0DwE3SHJSN4/6ofes1tj1NdZ6J1SjZqQvML+3Bu/43nt6P6ccmier
m95zDqL/z4rYQ+9q16V90K5NSLZLG/ZKHnH18jxqc/pufbh7qM1cn+yhdsna
Zs887vWMmV2bc7BW2b8M32ot9P4yYmbrnL3otyGLe3blwT18pQxfrm/1LsPY
vnsW8a61BmsO7ot3u+q+Nu7/AFd9Wf0=
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1mXXgF8UWxRfjN2vXqstXn4GN3d2toCggAirSEpIKIgZKg4JIdxigSCkK
KnYrqFio2EoZ6BN85tN3Ppz7/rjf7707szO7M/eee+buns06XtphoyzLqvSz
if4bFlm2uf4/q8qyCytZtlz2I7LPy7PsftlN9f+E7IWSxtJvKrPsEukXpyxr
ofbRhduuVNs82d3VfpzsM9TeVPZXGncb2dtKvpb+hWRv6ftJvpTeXffrLztW
/a+ueI5Gkqtzz32V2rdU+0fqVEvte6vfsbIPluwr/XL1OUr65ZILZB+Y3Eaf
w5LHZfxjJEulvKX+f0k/JO7vrfHPll5benON/4XsebL3V79Zsj+RPZf3kf1g
tM+SXV/2bNnPy35B9mayH5G9Juz2shdU/HyPy35Ucqvm6CK7s+RFyUuSr9V/
gdqukD5X/VfpP1VTu661lH6f1vMx6S/q3ofU/r6uvSfpK+kn6S9Zpva1kg+k
367xGkofkbwfr8vuxX7H852m/4cz73Fd3kHtHaVPVP85am+Te26e4Xn6SqpJ
/1DXBkl/VPJf6e9J7pD+lGS99E8lI6Uvkmyi/p/wDNK/17hvZB6zhezHJD+x
n5I78S3Jxuq/XPYw6d/qeV6V/pbue0zPs0DXNqrm/kOkHyc5VtJc8qyuPa7/
nzPffxfz6f4PpA9g3XX/zVq/U2RfovFaVrxmrFdWzWt5Mz4tWSJ5UzJN/aeo
eQ/p09V/tuyVsvWXddRPZ41/gPRtNF5jtZfJvoxPV5f+mdrnSx8rfabar5Vd
I/M9HaXXlxwUvtlE7Y/JniD7cM13j+x7JUegsyea70j1O1T6hZKjkuOK+Dpe
spX02ZI+0qdL/pR+Q+m4Plt6M411i8Z6N7PP4/tb6Lr+sn3ieVtr/t2k7yb9
CfW/UY3vMJbkDek3SJZK/0PyGvuv/uOln4RvqH831k32b5KXidfceABm1JG+
mcatKX131jzZh/ClH/EB3lPPO4f3k/5Axf/YxNjR0ruoXZez7XXvVVKWaf7Z
sp9Ojse38RniVbKrrh0kOU/6OWCE9Gt0//b4p2L/AvX/MPy5ua71TH5mnr3g
fasck8TmOMl4MLCwv+K3t1R8/RvZv0rW0E/tR7C3Gusmtc9hTtmtwDieMWxi
hthZp/5/S58vvWfF+9dPdl/eWfq3ucd9TXbXeIZxcY22e1mz8Fl8F5/H94mh
z6UPzR0nn0o+yx1jxA4x9Am+rzl6yr4OvJA+KnfsEsMreSY930Xsh9pu1vO9
ov9riXViTXpfSQfp3SSLkmOW+YnBL6QP1/3DpM9T2626f4j+j5TdTjJX+ibE
O7jHOkq+knwp+VFtP0lmEHeSGtL3knTV/u2PD0muk74pY0juY29y9zkk/Jt7
u0vekv675FXpLQrng33CfxbLHiR7Ndglu1Zy7iCHnCt9ltqbSn+GuFL7TNld
8WdyRcVry3riE6zxDLWPkb5A7bcR72C87M74jPT5kkeScWyhZHDhucgFHdT/
7txYCWayDnULr9WVau/F+uva5mrbIt7nOV1/VrJc8olkeO4xvoy1vFHXjo74
moevaLwm0h/Q9R4ar6X+T5T9veRB8ovsydJHS+5lf7XG7aWPZ73V/w/FxO+S
tZIfJes13pVqv433qdgPwYs1mTF0kO6rE/g6J/axZuAJfsveEavELHu4k+yd
pF8hmRRr1Tb8lTWbovkay56s690rfgb6cg/PNrFwbp2g9m5qnyD7KtlNZF8v
u77+6+GnkrtDyI+XZm4bGf6/qeZbIf163X+Y7FPV1lH3t9L/6Znz62y195Lc
Gj6Kvz0reUYyWjJG0k/3vAYWqP+cwnu+IGKS2CSeiB1iqAs5Ivc+3C7pDabq
nt5qe1tt/eEXyb6ET72cvL7kAnLCwMAXsAxMI1evLYw9cyP/wTUWy86rGdd4
h1m5/YB3ays5PzOnu0t6J90zPBnD4XasOfvCmrMX5M++MQZjXRP+9k/MOUh9
TgZfiIOK8wH7AweCI3ZR++G8X5Xz38nqd5LkBPxSMqLw/k8ll6l9suy9wjd4
FnIGvs2crcEotZ8g/fRkvnmI/uvSFhjWSXKm9KsR6XcUbjsq8Lpn6fgHB+B/
H+eOjRNjPRj/QOlnRT6FR8AnTpNcRYzq/vrSu0tvp/Ynk7EVjH1T+tDC+Mle
t1V78+T+PDM5elDp/D0r8AaMxvfbBl42Dfz8jhgGP0r7A37RV/2fSuaPZ2TO
iXeG/xPLN6q9T2FfvyiZr5PTiUViktzcpjAfgBdcVjHHgev8qf1pCB8szd/h
8RfJviw3d4RDwoGb6v5/4V+8VzwP+RnOCqelP7mcnM6Z4hieIzPGPpTMl+6X
/kIy//xZ8+wie1d8SvoNam8p/STwQvqQ0lxnacTH1bq2o+wV6ntxxRzlj7j/
N12bpf6rsw3UI/u7ynwM/NkI3Ff/voX3uk4yP7w0+Nqv6ntpxb5Jfm+W2Uf7
qf0C6Y8GPsMP2oCHshcFPwf7wMAGurZDMn7tm5nDcP6Ba8A5pqlvkcwNa8Qa
DlBj7czcBfxqINk6mT+1J/5KY0f/wOfxunYZeEaulD0mee3ZAzgoZwKwCwwb
Kvuawlx15+T93VP/e0iOkxwfOnwQH+dancLxdGjy+Yx3uiz5DMK7jiyMP8ul
Pwl/LPzuAwM/iXfOYpzbrpDdVfYesr/XOlwp+4rkfIeP4+vLNM4P8bwtiN/C
+X136Y0q5sPEL8/0WpUxDCwDQ8FS/B//OhrfrvicCraBcZ2lDywdn8Qp+bxH
YXzoFP0fLIzPcJ3byW/Je48PwBfHFB6rTeDbmcmxXD8wDzwEf68JfOpf+jww
MfITfIWceE9wuaW5uSH9m+l6e9YjMBFshC+A/fCK1rr/3dxYC/7dGH3guhdn
vreX+p8KPvEs6v907txGjoPrNS+dO1i78yrOCeQGOC08s11prCfP1ql4D9lL
7iE3Eu/EJ3F6idraqn8j2f+O/ov1v2dmDFlfZRxB5xo8gpgkNneJ9r+iD23k
c/gasbIxOF5xTIK55BRitU7kj1fj+f+J8Yj5KXr+Vrp2SmA0Zz/OsM+Rp3Kf
bS8pjAVgwoNgQ5XnI0ZXBb9hT9iLW0qfyZvIbpD5rD61Ys4ExsI1psj+Rfat
st+TfZ/sc9T/IdkfFz7P7QJXkD2pNEbAG+GPYAc1FnARfJyi9l8KxwC+P5Cz
pGQJY0l+KFyTOD8wlVoEZyBwH/ynVvH/M9TMmH+G7HPhhbLvLH0mHRsYfW/p
GsYJuWsejFdP+tm5ax6M1yJiqF7mXEIdhnoMHBuuTU48O2KAXAl/gGudhb8V
xqRRss/NjFXEzHWRA4mlzrxPcg4eWzhHkivBuCGFOTJcGQ4xLNq7JudAcut+
8eycSQ+Tfi1n3uSaDucFctKSyCn4bj3ZVcln6FaFc97myXySXEhO+KXKeEyu
WCi5RfpK9ZmstvaSh3LjwV2FOQPcAU5MLQkM6RT+ARYRs+clc35ieWWVz6Pb
Sb6Rfreu9QFrELhI4bYPoh7XunS+WB7n19ZxxiAH9Sid98h/+DTn12VVvp85
qLc10M07xFy1dW9j2VvL/jzqaa0C08HsbhpvvOwdOVPIfrtwDQneBn+jtjRR
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
6i7kPnIgNWzwmtgmxntrvP8BNhKGJQ==
            "]], 
           Polygon3DBox[CompressedData["
1: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
wzE=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlzz8oRHEAB/BfyJlwuuGlkJ2ByZ1iM6grZMGAM9Ld5LoI2Qx3FpE/RU5k
sFjtt/hTJJkZGa2Uz/WGT+/b933f773XmytM5RtCCEma+UiFMNMSwixz7CVC
ONCVoxBq8oTuzm7S9aYzhMsozossMM+n/Ym+XX73TMW+VT60f3VvQE7SwSCn
tutkbTfZYJ8j2139s9xo18SvXNNXuZCHyVBlJ4rf22aXolT/n/o53rtk/+cH
v/jmh5zuOIq/rZsuenjRX3vm3rNXzhjXjXFu++ZeWu6jnwxn+rK+YL/MCnm2
9Lf6B/mJx0R8ZkW/ph+V0wwxQlG/TVEuMe3dq/Uzfcs/5ic38Q==
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJw1mgXYFdUWhs8cRP49o6DwDx7OIQRRpMFCREXFBEUFAxWVMMDuwsLuwO4r
qNf22t0ttljYHdiY5P3e+637PP8865t19uzZs/faK779d52w/6j9qpVKZXSL
SkV/lbPySuX3rFKZKdm9rFQ2FH6qVqmsKDxCeCXJPVOlspvwHpJtdd9HuANS
94OEd5VcXdcA4RaSZ+u3d4TPkjxP/e4hPF/yGfW7nXAP6c/RfQ/heZL76pnN
hPcsKpVTdP++8FGSk6WfzHulb6lnOgvfpz56SN9TeFXJnZPHuaXkFrrWFN5U
sqH2Q4TvVPtd9MEfCi+nq6j6vo3wqfEu3rmtnhkuvJNkez27Ou0lf2+qVNYR
3kb6J9XXWOHlpT9Cz7wmnEvuoPtXhc+Q/EBtknTLNTTHGvegeNcFzK/kIsnz
dfUVXiB5tvo9SnhvtT1IeBPh/YSvEZ4hfJXki5Jj1c/SkmvpHftLDpG8Wb9t
L3yA2r+s914lPFj6c2M+x0lepGtd4X3U5h5d/dXPVnpvk+R/pN9WeHqM4V+S
HfV8W+FOko+rz02km12vVC7n+6XfV32cqd9mCZ8juRFrkLnd5pnnsJeuDXQ/
ONZiit5xsXBXyRl6ZqFkR83PucLvSj9b75kq3enCx0s+qPveeu41vffE3LZ0
guTD0g+W/lXpJ2ocpb7hZ+kPlG4X5k1ym8LrfK70owrbGLa2etXzyBxOpJ3k
ZpJnqc2Nws+pzTnCJwm/ILy78BrMiXA3test3FdygvRfCl8j/Zcaz6aSvfUt
G0s/UO/4Vfe7qd16arO75DDp7xVeU/qb9b3/xsYkt1Lbfwnfoes0tbmLfac2
JwV+XPgU4fuFnxS+onDbWcJXRp9vC1/Ougq/JXyJ8A3CrzPfwo8Kvyb8jca5
o2QfjXPJDhob79YYrio8nnf02yO6fhU+U/Jq6W8Vflf4ROEThB8TvgC7FH5F
+Fn1ubvwyurnC90/wHzq9010PYi9Srer3nOtcJU9V9guLpN+58J76lLh7Qrv
BfbEXF2rCXfXvO0k/UrCF0u3Y2G/dJHwWOF+wpewZwv7FnzMVsInCv+oZ8eE
fpr0IwuvxV7Ct2isTwhPldxS+mfYO9L/0GRfsZWe3aHwPmW/jo89soTkEzXv
C/bHILW5TXggdiV8mfCKwkNj3lYR3ij3WrDXfsi9Fy6UPKy0LfTSWqwT6/g3
e0f4YeFd9NuasXbr8lysKf2tHTaAzQ2JdafNZWHDbwrvo2ui8EGSR6rfw4WP
kNw79Px+WWl/fqPkbbl9SI33Cx/Dtwg/lNv3dhfeT/hp4ffUz6PCl+LDC9so
ttpTeFjyvmB/YK/Ybe/CdoP9rCz8n9z7tCG8tK51Na9LSR6ncYzE/2MzYUvb
M3/St9bvnTVXt+T2je11f1Nun9bMd+f2Xe2w5dzxpS02yFwLr4Be/ZSSXdTP
paW/63rJVtKtJbyexn5dbt/eprBdYp8tCu9JvrFPYdvFhpdgTYS3EF5WeExp
2ztIclJu+5/M+3W9Lny05DJ698d6z9uyo2N0/wZj41uTbfIO9bNZPHuT8LHC
bxFr2C8xJ7cUtg/s5Dbhf4RbVm2fE3KPYbzkb3rHjNzz9l3N7W/X2PbAXwiP
lvwk/PlE4a/UZkvJtmq/k+TjMf6b9Mxg9f0jtq/2k6TvovfeyX5jL+Cfcsej
5YUfyB0LumKnyf7hthTjq3q8rPF90u/AGqr/8cIvqv9va/YZy2oMx5QeM2M/
tnT7EySf1e+nCvcvPCesyzjJJeTTNpWua8M+Al9RKbzf2HeLiS16/vCIy/gU
fEtW2G+yj9hP+KoFsY/wrexN9uj7jItYIHyo8CvCN4efZW+yR/HL7E32KP4U
v7qucO/SsXhg6bh5pfAkydOSbXUvtdlN7Z8TPljycOnPFD5E8uBkm5zEfonc
rHvkY8+GTzss7GQJ/Iz0L/Cs8BGl+/lCc3gq/lT4dMnjk+12cmG7xD6ZlxfU
7mB8l547MnfMJQcjBuDT8G3EEvwS/onYlWlNZ0v3fc3r0EZz+1XY5xaF86u3
hZPafar3Hit8BblGaTs8XvJ5yVX1++1q/2GsxQbCmdZ0G+l/Ut8jdL+58HDJ
j2NdiKu7hz1j1xuRO2aOc5/FPiIW9dU7dhDuV9qXs1++IybmjgvEB+I9cX+V
wuvK+s7U9RKxUHI18ivJO/mu3LkC/naA9N/HviP+vJo7LhAfXs4dF4gP3+aO
NcQcYicxdA3h6zSmqmQnzdvt0m1HvNT9FZEnkC+cofYjpD++8PgYZ1/pjivs
x/DT7ysfOi95H30gPDY5R52e2W75lrv122+Kc9/r93frzoHI7d8THiXcRfjQ
ZPs8TPIxXaOExyR/K+vE/nhG7ZeS7n71t2TDeeqape0H+/pWv7+RHEfOwd/p
fi/J52r2f08xFsnX684RH5X+LeFdkuuO+ySPYG9hp+r3Fck5+j3pXYvIv8hL
JfdSmyckZ+m38ZJP12xjU6T/SHJb8hLJufr9bcnjpH9X8g3dz9U8zG/WPhfe
PDnXJQ8/Um0+kxyod52d2/aeUpsqPozcQXhRk2uQlmrzj/S7Sv+b2nbTs510
v1BtltH9R2pTT84lftQznYVXEF6avvTsl+x/PbtY7dur/adq/2fde/hd4fbx
LH00Eb+Yw7r15LQ/q8+a8CrCheT+yT75AMl9oo6gnjhW1yHYsuTFUQtQE7yh
dzwq+ZX6vDbm50nJl3U/JLn2eUhyT/YFsUL6f/TOxZq3DXW/dfT5gq7z8OGS
f6tNi9z5/My6a8KHhC9JjhEPS35a9xq/Jv1nwlOS9+arur9X+KewH3wjPrKv
5uq03DGIvBqbpy5cSvqR5DhRB+HTLky2NXKMS5NjLr51jp6dwL30x0m2l74b
cUvPnoStSH+y5AW6RrPPJX/X7+sLnyh8rdodxH5nHRreCzsK3xXtz0/ef+OE
z5Ls0LAPpR68JdaC/m+Iufo3e0rXUGJ98vd9LHwf30NOov1+hORRybGD+niF
hn3BherzuogL1yfn4dTlH8U6jpF+huTaane75IfSXyl5qPRXRxxgX1P/TIl9
dHRyTc6c9yn9Xmq5lZLzBvz5laXzD/IQ8v0bInfFH18XuSj+G9/1geQqGu/0
yFeJETdFXYBv/lFXf/xq8nwxb3sn36O/V23PCFs9JXl+mecLwoaxJWyqi64V
hZdn/FFP/Rm+akLUHuRV5Fdf585D8P/k9W11Tax6354S79pBspvabyD96blz
LL6dmDYh8iz6vDNqB/z62KgrW1ErRK1BbLk76hHiw12F4zJxZ+eqOQdi4jd1
fycxt2tyjUmt2S+ZfxjAPmAtib/JMZJxPB9+mXXcMbnuYl2oPQ+KXPS00u/j
vcQ9fPwBkqOTc3Xy3vWTfxsf88K3UbORA/0lu/o8d05VqTrWM79dS9tQt9Lf
0V36uZljDuNkvH/KT3QQXizZinXie9nbul9euEl4sfrvpWevKV2zw5PAl8yO
PIp3vRlxlnHdo/Z/6fmnNWelnmlkEYPUV0fhefrtDumbhZcp7bPrwpnk9NK5
Af6W+Dqu6njLO6jDsRnq91WENyxcI0zHRvXt15MrZLYH+Cn2I7k1nAt1E/UT
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
uobFLy7dcP1OrkWOMp96VmO7Wm3+C7RTJjk=
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1mmegFEUWhacHgdfdJpSR4T0DEgQRQQFFEJSgYAAVEEXMrsKac0CMa3Z1
VVQU4xoxR8wBA+YsKibEnEGMiAju9+0tf9R7dauqq6sr3HvOqVlzr4NHHVSt
VCrX8GcZ/h9XViptyR+RVSrP5JXKaNIh5A8kPUf+hcZKpSv/18NeoVaprN5U
qVxXVCpbYt+IvQb2LdhPYk/DnlWvVM4n/zzP/Mizd1B2G+/YnTbfULcc7ceS
v582J1A3kzbNabs6dnPsztT/B/t47A2w1yaNJL8KY7yB/O/08QfPL2ioVO4h
P4m+l6NuPG0KnluN5y+hvjv29bQ/nvo69cOwb6V+c8p6kH+I/Ge8+1jqt6R+
PmX38dyZ1LfEfgH7MPJHp/p/pmdWpf/JRbzvOup7kg4nP5K6r+ivkfqvyb9J
2d7U/Zv8tuQPIB1Hvon6f/H8O9jnUt8RuwPlK/COP/iexaRmvLMvZY+Q70Gb
TWl7E/Y39N8P+yjsR7E/x15Emz/pb2XsB8m3o34Xvx37A+qH1mLsfen/ZteL
8nakLpTl2IfwrtWoG4F9i+tA2aHktyBtTb4D4/uS/p9w/rBbYW+KfRv217zv
ed7ROY/5vieN1710AmXvULcH/4di70k6L43JsW2M3UTbL7Afwz4Ie0vsjUhX
Y19Jeon+9md8mzO+ic4XZdvlMd+7k75nD3zK8w9SNgl7CM9+jX0W9s7Ya2J3
J+1EfivKPqHuiDL2kntqKmXfUvYT/RyJPdz5qcV6uW7vNsYcO9f7UzaMui+x
Z2BfZ5/YB9DfUPobhH0x5W9Rv1f65g7U70f9ZtSfgH0m5W9QP4L/Q7Dr1L+J
vT32AOzfWlcqr2Ovj90Tu6T+1cbYCwNS+1nYu2P3Sf07Rse6H3Yv7Pexh2Hv
iv0s83c7ZYcxhpM8w+TnUn8Q+d2of6Uec+LcjMIeTP3b2Ptj74HdFXst0tbk
d6VsdmOcGc+Be8q9dRR9r16N/g6l/PV67BXXxLXxTHg2dqRsIO2fxl7IfNew
l/C991L3FPmHSdPJf0f9K/y/wT1L+0GkvbIYs2N/l/9PY29Des9zw37cg/14
D/bJtM2xB2Hf7Jix5/DMeNrtjX0b9sGMd1g1zsjhlC9L+9G0vwz7WOqfoX2D
Z0R/wLe0pH596m/H3of6k3h+62q87wParUL9GtRfjD3Bs0a6m/xb7iHyr9HH
seSvpe3H9P0U6U++vw1lGfVPYmfUNWIvZT5Wpr+DipiT06hfkdSe/D94551p
LVdN59U1PRC7EXsg9mXYK/H8P3n+cewvePeL9N+D8m7YK/H8dqR/OT7KfqBu
E+wx2Kdif4R9Av1tRX9HU/YSZTX6G0l/L2KfQdsTqW9XDZ90fB5nxrNzBfnv
eb4b9g7Yr2PPw36TMZyE/Q72AuzXSOvohylr6/cl//wV9g285xbXnLIPyF9u
X6TTqeuEvQxj2Ye6Gu17U9aPfs7G3hb7auwuxiXKts9iP7uvl+f5ruT7k39F
X8N41srijHnWuvB/Q+x19BfkZ1A2j/XpiP076/EO7e8l/y11v1B3D+/rxfue
o+wI3rcj/Z9G/lPqM8a3P/aF+jbqmmGPw56WxRw6lx/T33+w22D/1Rjz4vyc
QfqK/Fn03yH5u1+x2/D8BuS7k3+Z9q1r4WstW4X8KbQfQftL05o+XI+xr6r/
pP0Z1G9TjTlcSNn71M8mvwzv/536p7FXzMJn6btm12Ot52P/1hhnyLP0M/bC
xvgev/0m0s7kFzNHG2Xh0/Rtu/K+AbyvP2UbUTaH/i4g34r3LaH+EP7P1De5
p4vAFq1dD1If8rvz/Mo83w97gGtD6pUF/rD+XOq38yy4Zjw/DXsc9gP6T+Ma
Y9qH/J32y3wvps2y1M+h7HzybZO/mod9B/Zd2DtXA794ftphD8H+GvsB6ifT
3zdZYByxTpsUL7/Xn1B2IfXf+T7y7ai/k/o1qxGP9IFN2AOxv8C+izarYW+R
3n8P9l7Ym6TvHUL7JfU4z77zZ/L15K983+3Geewm7G9dgyJ8l2d9Bmk8+aX1
8A+O6RfypzC+h7LwCfoGY8dmWZy/bnlgs560fzALjHYrdvvk33bFrmC3wv7E
+IadYW+U5nOK7yMtjz0X+0Ly5xuDssBIYiXxifjsI8oWkD+Y+nOy8Jn6TvFc
UY1nfvBs1MJ3iqHEUqfXwt/rE/WNJ2I/ir2D78W+nfF0T+u/m/4Duyv2fZ5/
7OZpP37q+mLfjd0b+xnsg7FPIr1N/l3jB/nv6uF7P+L9K9L/nrzvuHQ2F7N/
r+T5napxRjzTV2N3Sf6nH/aYND8TssCjn9Lf2pT/m/KGtoGJxcaeidH03YK0
ZhYxx9jTUsybBaYSW1UZw1/kL6Jsbj18ir5FH3JALXyivnGq34+9lGdq2Cd7
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
3QOPFKExbJXay4X/B6WFebM=
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlzj0rxlEYBvDrUcSjR5Z/3sVmsZhNGEyU8lIMwuQ1DNgfRCnyPXwDyiKZ
GCghpQxSdptfGX6d+1xd5+70LmxMrNckqVBHtUhWyskqa1w0JIOyMt3mCk0U
1Ms+WpM+vX6qpeRXXtuR3MnPzOfMy0+dz+3JgDfH5gMOOeJWd08+ZscwI4zz
KR+VX+nMMM0lD/IfTnTeeGWoMSm1JT36czpTTDLLtW6LP+3o3fvLrrPMi/yb
JfM2W2yyb8ej/N3bRfeb0n+n2Y4n+Ze8072LgmX9P964Kbw=
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.560181, 0.691569, 0.194885], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
IVnjeMvRfReZL6rPoPc+LbXYrdio8zPS91n7fVSwWN0jWB2g3pR6VOK5yvsD
g+2F3ldnWz4p3xzufZ2m3r9a6N93g58j1XFNkKd5/FEc0hlRv+oB7v0pZ/WU
apL9ecsR4vObwfMiq2cHeP7q63lZZ1Ox9Qe/V3PoW+ja6cip2NVwbtapYL2R
eolx2zmR1dTqT6qvov5do2BnX7lDPHej59M7gtUaqjke9NytnoY4QTPvH1VO
LIaLP6uOVT17refrl5AXqp7wHP0qMi1YrTnBe1B6D+UK1crirud5Ln4UOT61
eK6YfXVqOUnnZX4w/q7+2LGx1XZ1wMORY2LzaZ3lc/2b3hiMi0ZZ65WpZlKf
Sv2qf3Q29c1T83PxAeUM1dji26drz4P1bNXLLc39cyPrqR7I29zyK+2v9ln1
izjJ95FxQfWO1Mu8ApvzGRdo77h3e9449fHoduYtN56cmu+L86u/o9yt/DlF
vdXEOEO5xPLPK4p1wc6VzlcutrkVq9XH7u0xULFQvPuByPh22dg4nnrU4nnC
qgcUy+v6fi4N1g9UX3Ca51/lYXFSccW33K9UN1yT2rusdF94I1geFweoyO81
kdWVxwTzZ52jSc4r1OtSLC/xmC9+rlitemiKr1+9lyK/tyTYede5Vj2rWD3c
fUm9QvUM1Z9p77lJfeMu7gPyhRnuw/LlWf4uih3qFWid8lf1FdVzvYw5+yRW
46hvECVedyeWX5VnW8f2XVS3jU3Nl+T/vdFNDNZvHBDbOVWeVb5VD0R9ji6K
V9h8GlmN1I97GmStJh3p8WddsF6/ev6rkX/lrRZTj2Ww80/57jDnS0Njq42n
ur3WL93T7mP6jqUSi5uKn+o51C5Yn/4k9Xi8dlYNrbwufiKfUE9T/UzVXb/l
rOf2dc56wDrDI+RL/L44Ms4/1s+gzmLT2HrsshnhWPcpH9XO2v6or626S8/b
6j0f9X5Ud6n+Ui+uuvPGJp4T1ccdkdo6tJ5vc+a38g3F/uLEYqZ67H/6/x30
/4d13v9UHT7Oz5F4m2oT1QWqD3QG6rkP6Ywrb6qPJw5a0zm/3kHv0tD9rP7/
8UPNqTP6abBvqhpW31d7qVrwP705dgw=
            "]], 
           Polygon3DBox[CompressedData["
1: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
yf3nuZk1g+q7RjE/4h/Vxqp5S+D/ARzXkAY=
            "]], 
           Polygon3DBox[CompressedData["
1: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
xw==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl0M0rpWEYB+AbjdIwZoFJb05xFswRZWGGOivjY2KoYXxFlCJNjfkXpjSL
sWRlYXb+BCkfpSZZ2xGbsUVjwUbJXG/v4uq5z31+z33u5zQufB9dKY2IGsrp
rosoVEU0kKOVj/URl7UR7ZURLTTTRk6/T35I5hPDrOo/yt7wRT3BOGPpPfk8
RfUK3/jJk2ytOfvqQw7Y451sLyXmnvh8Z9Fn568kYkT/g/4Yo3ym34yvSfZb
v2V/ON+QyHayo+5J31aW3d1KsvmhfsGFO6cya/rvzWrSK6WMPAOy5fobMgXe
sk6H/maS7VxhdlG2i0H9f942rz/DLHPpf5juXp+9pVruFa/pNHvbnEl1szlT
ziuZouyxOdcvI8445y9/9Aq+W5JZZtf+i87pdH/9I/U9D9ym+5r/H8YPOaE=

            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.922526, 0.385626, 0.209179], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 6], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
pryI1qyckHJHs3PnpxSDKBZRXkX5FZ2D1lk7s9+4Dj42c1wn/7aabAv9Rib2
Kcdk9g3X5z4H5VHGK76BD08cC+gubpAOpv1m+AOJ7YJ8wrHwOhoXnEe6Jjjf
JJ3TPM4/QneROWek3JHeh/yxWYn9jGviWOmErbn94BbM3SR1LmVVapnRe6gL
1sucG6wLfpQ5z6aYbqliqsR5gDcz58P25uZ6e3qDyrkpXzcu+O71BnoVnT9V
vkV5klrK74CTGXsnfa5MHDc1UbwvXUP7bdQvTxxn1Yx3p/zPnfJFUvfplVm3
Ny46v6k8pOa9PXP8fkfm/Kb2ojxp3bjHpcG5YOWBpVMOxxzCX4Nj1RlRTlfl
jpMHMc979GmcOKexOPKFqWMf2VzluyqXnMeRDZWvMThxfuP73Pc3XX0zxxHP
Z55HeaSxqfO8yjOsjXHZqMT7VOx4D/yN1DlSyZ3kT3Gj4jKd15bow2wO9lel
l/bG89Q8A+F9MucNtBflQOQjKF5blzuOko5dlzrnJp0+P+5R+94Q9b18pcZx
ncqLrMydg9D8tTLnCRXDzkmd054IlivZVimmWE19dHxv6tMg7kv+jnyAlamL
+IrUPqBybsq9ydYo9lT8W6NkPf6s7jdzTl6+U5WS44H1meN1+QPyC5QfUE5T
+laxseyF4tVl/NY3ca7p3Gg3FZspL6b8mHzdt3LnAZUrUH5PZ9Imsy5SPKXY
enlqmVU+UDkQ5ab15hXL7ISnJdtZ2c9TSo75JNfySRTPyH+X3lQMq/hVub51
0b4fjbIkmVK+WL6a/DHNK19Kfsv6+K4UZ3+cO7e8JXFOZkm03XofyiPK/1Eu
qEpwPkXx7V1F5+2WMXZx7nhVMqX8u/Lw0vvzaVsqHQu2KvoMe2eOkXWninlX
Zc4xJCX7q9JRyj/KX5e/Lf/9I73RxPFpMfhNKqf3QeyjuGJx/Ja+OYc5VyfO
Q3aP+l8+ZaPoM8h3+DTOKZ/yumB9KBmXPdL/Ck4s2efcnTi32S/zvSunpL0o
97CafW8K/taK4ByV4ibFT0fj2hVjnVRynkI6/3zpv8QxnfaunL/yWvKHle9c
wpz/Bb+iE3o=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmXe0VsUVxT+4iCLeeSp48fo9Na70rCzT28pKUWOPqCAliAoiFnpTFAFB
VBAU6UURBUVReu8oHaRIkyICgoi8SJMHigia/cuerPwx6zt7zty5M3NP2We+
K+5tXatVxUKh8GaFQqGSfs8UJYdC4bGkUFiTFQo1SguFyiWFwiDhMuFvpO8t
/bvCs4V3Cl8r/Krwi8JbhFPhdsJDhP8geYjkF9S+TguFL6Ufob69wquk3yz8
e+HuwiOEdwnXFP5I+JFc75N8UO2Q8F7p92iOj9V2qe1Wm6k2TLomajMk19KY
fpI3SV6iuapr/Uf1/L/Vt1+6D9R3SLrBwq8Iny/9MekPCH8sfEj6m4UnC88U
Pik8Snif8GrhU8JjhNcJt829ltbMlXhN92lMfcmDJU/T2Is0/8cafzi+v0T4
sPAs4cf1/DaN+bPwU8KjpH9N7Zjkq9S3Q7o5alM0V0P1tZHuU+G60n0gPEF4
pHR1JN/N+UneJ30d6ccK19L8nwjfKjxG+PnMe2SvPdR3ntaSqK2UvF59W6W7
Q+12ya0017ii18zZnQ7eyyup38m7Xk79Tfg2ZdJfIP024f3CHwoH4cvVqst+
zpFxDdJ63sj8vf7BN9b8HdQ3Tvjnwtt5n36PCB9VOyW5qOeH6Hel8MG4/jLJ
5cHfbonWcCdnqfaR5DlqtSUPV7tGY14S/lfibzI0tQ2eTG1z2OZ+vbO+ft+U
frzm3it8RPrXhVtqba9LfkTyw2qvST5H77yJeYVHa/zZwi8Jz2fPrE/Pr9W4
14Rb6PndwrdJP0p4gPQPZrbVNzRmhnRb1XLpB6hvpHRLU++JvexUSzX/EXxA
+r6a72LhSjrPL4WfyfwNDwWfCWczUGPKJT+kvmrSlWn+uyRPUd9k6burdZT8
qeZeGr8vtrku2FcOqu8ByePVN126eppvqORBGj9VuhNqL0i/UH2LsSXhhsJv
CbfX2KqaY5Hwp8LPCdfP/S0GxOfnF73HlurroOe/EO6q8fOEF4LVzpKtdFDf
ZexVbb7kNdJ/ENf/oOQDmmNZ0fHjj9KfUN/LMT704N1qF6j/7Hi27LksdWzi
2+AP5wV/j2aSV0q3SHO1EG4sPFd4nnAjrX+N5HVqjSU3kP426XsKT8K/9S0q
a71V1DLJndRfU/pb+T7Yjsa34mwkL8YWNEcLbEP4beGNqeMV9obdHY2xqa3a
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
FvMN/5FQj4+P8ZRcQy1LjYKPcp/EXcx/AIYzN2A=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtlnlQVlUYh69+mGPKR8vMzc/vsxlrWqZlpm1q2qaaafnDnHFHxH1cUhJQ
XFjCDRQEVFRcSXRSVAzFLQ1NTEASRXEJS1IbK60UFIxU1LTnN+/945nzvr/z
nnPPved9z7ndRsT1jm3rOE4GtIM6v+P8CBfgjs9xfqM96TrONtqv4Xu0E/g9
sOdiP0/bHT6FU+i30XZgT4VS/IcjHOch2IIfFuY4HbGTA44zFv9daCZ+Mv5x
Ykvwt0Jb4mrx56CvxS+GfcQdc+3ZWsNctGnS8bPDHWcZ2kra5bAC7kE92n3a
u/AfpBOfBrPhEn2zaMfxjBb6bsMdqA5a/1/0/0J7BurhWtDeqRU9kbYJP4qx
hYzZABvhG7Ra+r4k5mPaARDlfcuf0P6lTYJkeBFegOf0zt533Mm7fEY7CkZD
A/PF84ynsZ+FY8QtJ2Y79m5v/RVQCenEJaF9BavwbzI2A+0gfpXPvmMr2iba
Im8vD+mbaR9Ze0/sKbTTYQbshoFoubQ7YKd0np2DNhsu49cw389oVczxg+YD
X8hx5tM3DxbAYG+OG7AY+ybtLWjV92LseC93lEONzLeCdru3rjxYAnOIu4F2
lTGNMCZga/kD+zRk0zcdP921dR2HLLQ0/GTX+hVXByMYm4J2CvukN1YxPdFj
8PfBeLQktCxow/MdWKn3xr/LGtfgl+NXwDTGRZDT7cnZzrRdIAiNxN73WS4/
gt+V7zIULYX5E6E7fUPwZzA+l/kCxHQg9rprY/0RNu+DaHvw0wK2r72gQDWm
mJDlpnK0CXKJ2eJaXZ7Aj4TN+DHoD2D3hVn0ZaClBiyPO/CMW9pPtKkwBXsd
69sGcfjXXFu/6tJhLU34v2s//JbPyuuzruW/6qAaYtAO0zajP8rYzcQd1f7h
T1b90rcfRqEl4A+CJPxk6IE2GD9KseGWk8rNgfj74TB2CvMNhhL8Cu0vdqbe
lb5y1/ZJ+3WFsQ0wWrURsJqaCZvoyyNmtJ6Dna89hz4651ybJ5W4WNiFXwc1
+m74i5Xr+MMD9i2PMO4oDMMfCoewa2GszgniKl3L53mMy/FbvsSgjUErJq5I
sfj9YAhaHH489CIuVucB2lb8EtUjWrRruaMcmqo1oxUHrWZVu6nQF204cbOw
Z8InxA/DHwAJ+JMgAS0SvxA+1HuiRWrvtV7mW4S/UDUrnfn6wTSdoTCSuBHE
9Yci7AloE6E3MfEa750XOjdKmWs8Wh/iSvG/hWji+kMO9l7VJH0TtT60PNWu
znG09Wi/qh6wG1jjFZhPTBHaarRu+B/BBvy9PKeAcathM3zu2loG+exbK+f2
EbOQ8f8w5rLf5tX8a6EYOwbtKViGfx7+RmvGb4FFjBsEe5gnTftDX19iDni5
MZ+YBTCdmPbU5Tns87oLVHMBuyvWe3eT7qg9rGUI2gHsCqiE79BSme+M7q5w
O8u/wJ/k2pmks6lMZ6ruT7iO/QTzPwknglZ7qinV1kGogjaspZD+9bordbe7
di+sw96ou0O1itYStLNWZ+5S1QkxN4J2b+r+zPfeQ7Eas9pv5+BstHY84wh2
DZTBaWIS0Ud6z9Xzbwftjirw21jNUUPcRWhVv84wtAv4u3RPKZfxo31WH+e0
H96+aV+0P9laj85iOAAdQ3Z+dvDO4scgT3mG5qM/DFYxNlu1obtB57PfnjXO
tf0o976bvl8Z61igc5aYCEjUfwd+KGT/NPq36QQNOjtV/8QMhx2qWdfu7me8
fwD9C1xiviy0auyzcI+4etWL9kTvitZZZ4z2nLj3sQf6rU8xnUL2/6L/mKvK
N2JWoJ+m/yX8l2ECWj7aK9ivqjZ0l+rM1f+U384w5avyNo7YEH57+ADtHX0f
9Ddp34DXlS+sOZa4Ltiu7mLiCohZA5nYr6E9rntaeRu0fxr927wHCYyrQ3tL
ayV2qc/u7pFwke/7Z7jtgfYiExZidyX2bZhIzP9rk6dd
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl0D9LQlEYx/FfGmZ/zEIJ9N4G6zUE0RuouVcQRRRh3QqKKAlaoiANEWoJ
iqZqTo3Waskg0MEkTcnBlgan2up7OcOH5zm/85zDuTc260yveCSF4cPVkDTV
L9UD0gcm6Tcj0iLarEdZj2AC58wu4II8iRROME9m2VJfUOrolALUU+b3uCPP
3ir9OtbgYIf8nbxOX0QJDSTJHVj0w0h7pSj11ZKCtjnbJGtTv3HM7DaW6H9c
7P1SQ8y2uF/ue+DBOPkZWQVl+jzu8IYj7khgg/4aN7hEgdkD8lv6RzzgCWXy
FLrpe9EDP+LM7pI3+Sc1VPGJOfJMxLzNz1u64MMXsw3LnN3i7WPUF+ZnmE2z
F2Y9gEH3m7BMfogs/T2ynNmnyjZ5jj6BZ6958x93/wPAFEdN
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
            RGBColor[0.2306315, 0.0964065, 0.05229475], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            GrayLevel[0.3], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2306315, 0.0964065, 0.05229475], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.528488, 0.470624, 0.701351], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 6], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtmXXcV0UWxn/q3VXX1Xstrj8dke4FUbpDQErgpaVTOgSkuxGQkAYBAekO
BQMVBWlQFBNz7dxdXXWN/T6fc/447/Pcc2fmN3fm1Mybt+vAnAGXZzKZCvy5
AlwaZzL1okxmAfgBMgueSTKZZvAK8LrgWZ4/hn+A1IG/B54Bf+ddB/ij4FvZ
TOYUukUhk/mD52Ho/wTrI4Ph1cGfkUrwAeATSHv4m+DT9P0NbEHf19UH/QXw
tP+ufv8Xnh+E9wW3I+3gX4GfgN8j2cj418hnyAu8Gw9G9H0O3gb+PHjSx9T8
v/c+XyITedcLnBzbGJ/4mO15rg6OA1czz+5gOeb5OHwIvCw8jwS+CN1j4G20
fwa8AH6DfBHZ+nyktUpZG2QufA74kMaAjwA7I2Xg/cCbeVcDnoJP+Xoe1Bog
90b22xHvisKXM/an4A9aE2QJz4V5fz/zakKbv/Ot7eBn0fXl/UmwZ2R71wmp
SZvv0DWkTUX42/oN+Hb6nef9s+BKxrwXfTH0a8Ch6DeAL/t+LQK/8HV+DazG
ON+ADYLZVTf0H4E/IB3h58BXnX8P7kRy4IfBa+jbESxB3y9d/xL4DjIB/h54
ROvleu11I/iL4HGfj+b1BjIK/qv6ub1dzbesg5+D74Pv4bte0bz5rVd5zoe+
NM9/g0+Efy77dFtS3y/dTmQvV/K8An4V2ITnivDGsa2v1nkTuBHpDb8ILuO3
7gILu51rbppjHd/32uBApDK8guyCdTgN3hNsvbRWWrOb0BeCr8jaWsl+rtU+
I5183bTvO9E3BUcgQ5jjCPTTwd3oZ4LPI+/Aj4LbZF/yTfjDyGH4JPAV5BK8
Kzgb2Sv7BPfLdzV/5DjPb2v9E4sFsqvF4AGeB8gXwATpAj+m9dR3IM+hq8Wc
VqMrxBwvqi2yEH3e1Gw0H/iI5gqvpPHB973dMZ7fBXuAI5H18AcS+x591wvg
aORJ+Bj/Xn1LXfAgchZ+CHyJdVwA78Zv7dYzfA94BPlQNgbOTW28+cw3oNuO
1Evs+7UO8+H7+I598KnwMonxvejWw0/4mHt9rfX9ig/fIbcg/4vN3q7l/Tx+
a6NiHfjP2Gzs09hitGL1SMUY3tWNLObIfsrDe4F9kNIeJ7/ymHCr1iW2eNIb
HCubgk+J7b1ih+x+KM81wVGxxUTFwPPMZw2/cQc8Ti2eXfA53++xUTGyjeIi
vK3HyZLwJLXvU/vPhe5f8rPXkG99bq3ocyfYWmuF9IBPB7cxziB4kdRiTkP4
WrA12DIyux/Du8XgWdou510z+EpwS2IxtmRi8Vc2twoeaH87/Hatcda4dIcT
20fZ9WaPOYpJe2LbC+2j7FTxcir4D32D23Bb//aemrPnJuWoJ5EW8C3gXGQ0
/BH5f2q+UCK1Nvoe+e1+9xf5zWeKnR5/7pX/av6KH7xbCM8PdsUWb1N+Q/88
Ml/rrxiA3I3+Ad7XUE5GXzUx+5addwU78+4mdM/Q7075PPobwELIs/ACYBFk
Ovxm+VDW4lgx+m6AT2JerRijC5JVH3Q9g63Li/B2tCsB74GuaGI+K9/tznMx
nl+gzXnG6BdZruyPPkfxBn35xL6louqQ1ObVifdNg+XCkuiawH+EH6T9T+Ap
2t9Bu9t9/reCLWg3NbI2ZZ1LVw6ZEdm6dWCcA7HtRdHU8tou9Pnkh/DLwIG0
aQOeRJ8fXpL2f+TC7oPlpP3o3wV30P462vUKVie9jP6Q58r9nvsUx/eh/7fy
BPp/xZYXlR//Ay5ERkZWD5UP5qvraV8/tTzWHF3d1OqoeqnVBKoNTsQ2V835
8sRqqgPwBrT5K89j3PaqBbPvnby/jnddtZ7oagez0TvQVYAXgf/KN9ai72r6
1gQrop8Rm+9UCuZvmxlnMVJQPoGuMrJK/oduN/Ks20kj+vyFMVoG+5aHGLOh
7JTnYbHVOaWD5b+19Pswtv163+PA47HVJ+VTy++1UrNJ1Q73Bcuvsk/VMQfQ
b4JXpk2V1PJs1dTqk66Ka2CRYLWpfKqAxoVfkVotNFD+i74Q+pqx5dkaqdnq
XnhOav4i3/k2thj1tfK411hqc4v2H30K1g9WZ+ehXw+waWR15I+sbz4wr3+X
6qa68CeyVofWg5/xGKKYdtjjktb0F/rWjmyPVO9Ngv8M/w3Jo3ySy/ZFNcl/
4eM1P8XL2GqecfC7+c2tWYupNfmtMmCByGoU7d1Y+J20KZ7aHEqDeWPLO7NV
n8RWf1bT3vOue2S+qTEV3xTnVGtpPbV/yo+K1bvlK75fW2Pzv0nuI1qT3PCr
UpPcnh9ae45oAG5i/CXKPcFqJtVODcErU2tztddCTRTHwExqeecysCDSKrJ6
409+K29kvqx9qQVfoW+JbQ1LgEdjq0NUI16fWp7Npjauxpf9f8y7B9yuKvua
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
htT/ffS9+n/S/wEkRq7N
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmHkcl1MWxn/DaxnL3BczvX7jh0KJ0l7SrmjRokUqhfbSXiSlhVZpL9Fi
y5YYZZuoLKEsZcm+DcZgmPUzi20MZp6v5/xxP+953nvf5d57znOec6sNHt9z
3H6lUmnjz0qlTNeLK6XSkXmptEigZ1Eq3SR7h+zX1UbKvkT9HXS9T/gS9Y8S
7iL8nvAo4dHCZwmvER4qPEa4h/BjwqOFr5G9QG2h2rVqI9TfUNfV6h+o/lrC
Fya9Q/gQ4drCFwmfK3yY8KnCHYWbCn9TpVQ6Rfgc4XrCB6n/ZOEGwicJH1D4
Gw/Kfj7ztyeo/wJd7xbeWi6VGglP0/gzhQ/X+MbC04XPFr5N/U2Yj3Ad4VuE
zxJ+UXiecGONP0dtq+z/6d5M9Z2ptkF2Z91roL42wtuFzxGuK9xa+H7hEcJ3
633VhVsI1xReIzw797/yz4tyrwlr00b2dI2dI7xH+A7hOcKnqVXX8w1070D1
Tdb9TbLvUZshu4P631H/AOG79P6Owu8Kvyh8hsYPF66rcXXUhsmeqXsPqO86
4VnCQ9RK7JXu9VXfwbLXy35C7XzZV6tdpXav8FpdB2t8Rdf59Gv8uIrHMX6s
cHvh1/X9vsJNhS9Se0j2Yt5T8T9PV7ss91yu1r0lum7XmH36/wbCU/V8B+Eq
evZN3XtE9pUaM1d9bwk/K7yRfxCuozZY40/TvaTx9YS7Cp8hfJTwFYXXa5bG
X6m+kcKPZvZxfH2a2kTZd+neFPV1FX5Zz49hT4gPfe9SxrOH6rtW7U6N34W/
4e/C/1bfbuG3NfZ+9W1Qe054rvpv1L2JsjvF8+whe4lP49snha/XVesie2Xh
WHuBmOFfdP2A/VLbS9zq3urwIb7PGrAWTwvPFp4nfLvwCuGd+vYC4aOF+8X/
zBa+TfiZGE8MtpTdPzk22Y/L1f+k7r2q51cIdxa+TXipxnbXuIaZ58D/nqfW
S62HWk+1JRq/Q+PH4d+FfRhfZs9eL3ssc2XOPMMcmesfhN9V/1LhbcL7hGvq
+ddkfyb772pv5L43AZw8drvuvcK/qv0GvlH/h/CB7OvU/7Su72d+P99Zpf6P
ZJ8S/RcWjsUbhJcJTxK+QXiQ8PKKOY/9GBqY97MfZwuPFF6l60rWS+1t3W8f
c+GbO2XvUfu97E9i/1bo+Y9lP8O/6PnLhDcI7+Y9Fa8xaz08cOvC82NNmO98
4ceFjxVeLFzk9r2X1B6V/XBubhqvdnvy+sAF++IdD+bmlxfUHsj9vr2ZfRhf
fkT3tsLnao+rVdO9E2LPvq7i5/H9Z4OjGMPa8488203j/6HxFwm307svFR6g
+72ExwnvY79iTV6Fgwr/Pz66INb7VuIjd+4ZTgwGF8E1vdUOIJZ1rxH5JLgH
zuoq+3z1z9b3ZzA/+dOQ3Ou7UW1w7hyF/WBy7uql9p3sabrXQn3nCe+fm/N3
6Pm++C/czzPC/YQz/jv4foDw4fCYcDfyhfBfNL6/cCvhLvigcJfgwz5qq2S3
1jMTK85Xf0z+/8f1/pL6q8s+nRxH7BGvyft5JnwqfAS5gf3W+G651+sWtbay
+6v/UF23CJ+r8RcIHyI8Gx/X+FfUrs/MeXBfP727e+b821f2B2pXZX6e98CX
y2RPkH1FxW1C5CC4dWpwOvloamEuwjfwkeWyW8FzmfMfebBNMt9MYg1kZ3qm
FXOTXUPvqq/riZljntgn55J7JwufpbEzhLvnnsN04bGyx+AbatvYY91bqeto
4cs19kv5bEfhqnpHVeGTdf92uFCtiey6kZv5x+ayf6hiXIf/qDhHkavgxClq
36v/1JgLuf1yfW+z8IfCUyKX8G/oo3ayBxX+XnXeQ27U9Z/CJwSf8Q+N1Wrk
/re12p9a6muo952g8S11rS18nNqJspvr3s3wLVjv/oVac+Jd9+qrr1lh7YMG
4n9akK/UdxlzVN/Tev+bmTUB2gD98TCxlFurPVV2PBFXQ4V/lVsrsqY1c/Pl
a5lzOrmdtSE/ky9YoysL24si36/RtZI5566NnPZibg4k15HDdgUXLQo+ezlz
voIT6CfXzcmde8lZ5LqmuXPZjMJctj63npkmvFN4WeiFx8r+f+YxsGLNu0T4
qNxamJgj9g5ir9CO6l/O/kR8wn+sO+v/VRVz2M2yL8zNbTzDszfqXm/1bdf7
vtb448kJZX/jqPC5HoX/gX9ZINxL+J2yufs43Vuovr3Ca5m/8Hjh58t+dy/h
scJPCF+TWYOhxXaXnW/aRz5Cky+IvUKr9yusBUaE/00ijjPzJzw6PmJ3U8T4
S2XjUbInV8wnh8m+n/govP5oh7tza4+5uf0fvoQ38bGftGiy723R+3oL3yPc
Snh9aH04Z5jsYzX+WLgCzab+xbq2J47Vlsi+R88fk9nn8f3NwiP5PjwiPE/X
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
FL2Cr/8fwDlrEQ==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtlnlQVlUYh6/21dSkfjfH+OaTLxPMjUVRAlwQBUVAJyXQckGRVUxFRBRR
EXGjzCS1JE0FREGiXHIvM3NJc0lTcylbbG9q2iYrte35zbl/PHPe93fes917
zntOQOa0lPzmlmVVwN3wnteyUl2WNQ9SbMua6rOsy2hbsavhBHq5x7LSscfD
BNiENpyyAn0b5XY4hbYIvwhynbh1aDPwB7gta7raUD4Gw+BlxoilLIBo6toQ
9yJae/xCSEDzR1uHFo7fG2LQXGir4ST9Z0ID2vP4rWEiMZMgD7qzjkq0o8Qc
g6+IS8NfIA27Hq0RrtD/GahGq4FRaNNoex6tDLsYZkE52kransDOgY+IXYXf
SNw6xlsPI9AeQTuCFkrMIbiAthwtHpZit1dbrQd/IGUcDIIo6uIpvejJ2KOx
c+EB/IfgaewKyKHOh1/PGGnYC9AWwhb8hcyxF/33hjq4hNaH8oi+EeUKqAQ3
7UPR8mk3FWqIG4a+3PmvSTDENmvRmvYRkw4t8D0wE7sI+lP3IP69EI6djBYI
N/0sKwRtL/YexVLXGb8H80vVd4JMaIVWy9jTsHtBMHF/0HYj2lhnn2i/hNHO
z2P2hPbGDNhEzGL9G7Q7+C2xW8G/tO+m/w+dqfsPvxltw/BDoSOahX8HPUhj
QhDa3/h/wSLsTmoLVYxxG60LdlfNhbpb8plPAv5gSNS/J64TfVZjL4Fs4jri
L2M+z8Aa+BCtijKQthHEPAo9YS1tWxIbS30G/ni4H/9hWIFd6TZnsx2+DXHY
ORoDqmnbDW0/9gEopi5U31l7HP8YpKAFe8ye0d55Fm0ZNNC2Doqx58IczYm5
bUYrxV4MA4lvS7tUqMDuyfw7wCj8QFjrNv2p3wD8EJ/ZJ0/iR7jMOvTf9f9r
0Guhif6b00cW2uf4FnYz+AL7Bnym+Tl1d9E2ijISAtCa4xczxhjix0Kh/j/a
XLQFOqMwA2brO0Embb6n7UWdL/xdjH0O+zRMoG4A2lDa/qy8gV8ArxLzJ/+4
l86y9gus0V7zmbOjM7RF/xPtBdp/SdxZ/DNwDe2k1+TRezQP6kZqHtAXPxrq
0bLwn9C5xm8L/spl9N8f7SfG+xF+gCFoq+A49e/COxpfc4YS+rlMzG1Iwp+j
70D9PCiFEtoFoU0m7gIxv8A+5raLcjfabsqd8Dr0JW4H2tfY38Be4vqhfYv9
HZRTF42fAZuxw+i/NTyOf47Y+dgr4aruEbRCxh6Jvx5/Axz1mjVr7QPRBykn
oz3lM3lG+Wao1oh2ENpg+8FzupN0x6A1MI8rcFV3A+2maL86OTPPyfv6RvpW
WfApdYcp//EzZ15nPwReoq8RWguaTf1ZtAiPOQuzsGdDic6mz9wpkS5zNpXz
wtFinHwR7JxhneUDtL1J6bZNv+p/D9p1t8lJyk1pmjP6RtXb5vuc8pq4j4n7
BLZS14eYKT7zX/R/knUH6xs7+bbIOas6s8orO9FeoewG3WEHsW9Sd59t7oeu
9DcOP81t+ohHK9MZ1Rl2zp7OYBZjNuk+0BmgfA22aa/Q3weUB8Gful8pt6M1
qoQdmpfP5OwxzjgaLxgt12PulDj6j7XNPjjkNfs9EhZTF+kx9+9o/HG2+T76
TmX6Vs4bRPe17u0l0GSb9Wrd87XXINu5k6+jTcd/i/68To5QrihgLqU6S9ir
tW+dbzpR+5Y2UTqrOjO2yWu5aOkuk8/jaJcDIdRddJl7Pdd5W1xzmTH1JliN
NhPtEn6ebeLHepz3lW3+udaW7zFvIr2NYtDCIR3/tNe8PTKgSrkIrQucx67T
fec2uSkB7Rb2ZOhB3WD84T6TO5VDf4f9XvMG0FtA9/9hZ43H0eMp37dN3lL+
0ttOb7xatBqtkZgcvdmw+9km72fjv43eDv835U+0N/A3QJL+PxSiJert4jG5
fSmxLWC4x7y/bjh58hych2InHygnJsIk/P8BaSZkZQ==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt0LsrxWEcwOE3iUwMSqcUyqVMZFQKWTApZKFsHJeJXDIY5BLJLWYhAwO5
DBwORQxuJ0X5D5T8A5TndAxP79v39/nd3qLuwZaBtBBCLhkcRUJ4zg4hQTQ9
hCdrQ34I43khzOeE0Ec/C7xoH4naV7Kl77EO6Tv0JfZllFJMXLvk2pX9h/ba
2syteZX+3rtuuOWOQ/MJ81XNNDOskTAvNN/QLLPEOrvm7+xrYpxzxpy2zXtj
mhbv/bROsq29pECzl/yf9NS9s9qHSOpfRhlhLLn3nAou3BvnMjv1zANtlnmr
fR31NJFpduVauXs76aI9eX7mjfxqVlnhh7P/8+zVDLLoe6qtw75nVn9sf8Ip
X/oas6n81NnGtDvWTV6TZ8CO5p03vqnV/wHqcE0B
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
           "Directional", 
            RGBColor[0.264244, 0.235312, 0.3506755], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            Hue[0.7, 1, 1], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.264244, 0.235312, 0.3506755], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.772079, 0.431554, 0.102387], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 6], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxFm3fYFUXSxS/hXhBF3pm5cIMDiJhAEAQVFURUxAQGTOgaMa1Z17SGNa+6
pnXVFcU1gBFzAFExg5gTQVQkqCBZRUEk+p2fp57n+2OePtO3p6enu6vqVFXf
DkPPGnxm40KhMKhpodBE5bb1QuHkUqGwa7VQuC8rFK4qFgoXJoXCYN2fJzy/
Uig0UpuvVNe0baGwTPczhJsI36H2w9TmVd0fpPZXCzdW+YDqzxYupYXCCOHb
hH/T+0YJ/0d4PdU/KHyD8EN6dqTwUcKjhE/XWIaU3P5h1Z+v+n+ofnuN4VHd
l/TeJ1WepjaprkeEb1Gbuvpcp3YnqO5O1d2t6xTVN1X9pno20f16enasytXq
+3zVvyo8UG0uEh4n3FT478KvCzcXvkR4feFU+FLhQ/RtBeGtVL6p+haMTfUP
Ce8sPFzvf0m4KHyB6l8RbiK8tKFQuCfGw9wNF74i5udl4UbMufBdwtfEmJmH
d2IunlL9cNW3Sl3Hb2Vd7XS9XPL7XtRvS1X+rraPa41aCe+tcX6o+0z4Wv1+
mO67qv32KnuXtcaqX6n6aWrzjvB/hL8UbiN8u/AlattZeJKuL6LNbaqfKNxM
+A991/jo/3LVH6l+68LP6P3/oi/h01PfU/+syiFqs1Lz30XlO3q2peqvVJsJ
wvsKXyH8kXAn4euEr2a8umq6/171h6m8T/VzhTcSPkP4K+EZwncIfyO8ofBd
whtmnoc7hb/N3E8rlbN0zYxnt1bdG7r+UTKm/EK/zYz+71abTbR/Wqi+n8b8
neqnqL6odeylulnC7XXNU/0QlSPUfna8d7jwQuFu7HPha9V+G+HvdI0T/gRZ
KFr2kME99J4rVX6luq9ZUz27RnN1np49Q/VPq+6XppYN9v5oXXuWLVNFte1b
ttytUfudy5bH1cJ9ypbrVcLj9cyIkK9Bqr9X9c317H7C1wm3EB6r318Xrqrc
t+w9x37bJzB1u5Qt12vV57MqJ6r+34w5xtm65H39bskyM7DsPdxM/U+I9/N8
v7Jlf5362a1sOSqozSpdxwiPVf1q4V2FXxJeIXyE8GjhNcKbCr8s3ENzOE5l
C8n4WtX3Uf0ruv9DuAc6KvUYx8Q499P6dVE5RvUjQ87W6X5jrcGPKo9Tf/3L
1i2N1Ud71S8W7qj63cvWS40Yo+73Ft6m6n7GR1+7lq3f/mB+Ms/t5sI7lq0H
Vgh3ED6OvSa8WG02E35Y+EfhrYUfFe6qNn8TXiTcRfgs4YXCW5WtnxcI35q5
DTr6hZifv6m+rcbxkq5lTV1OKHo/PZ153bdVm+eEf1fd2chC7IHFwqnqd9Ez
K1WOZj3U5lzVj+Fd0efzwhuo/Tmq76ZnTxdeItw9xvaj8HZl67Rlwr3i25cj
p7oaqZ+zVLZX/Qmqn46sBZ6F3ha+TPhb4Y7CJwvPFt5M+AzkSHiHsnXpb6n3
NXtxra52qj8aOaK91maYfttZa7hN2TbrJ+ZHeCjzJtw51mK+8JYxzs81n5tH
++9V30m4mfr5Qfg3ffsjqn9BeKrwJsK3Cn8uPFn4FuEGPb++cKLy25ptypPS
gd9LbzYWnqNylq51msvZKuc2eJ6/U7mvntkOuVFZU58dhHsIv6Ln+6E/VG6L
DhLeXuWCaPOg3ttO+CGN8/bMOoT1Yt3maQwr1P8YPbu1njlE7bsltu+s3Z6a
p57C/8ls37cWPlx4ba49pzH9oWcXqJzR4O+dqXIbtblabRqr/Qz1/63q7lb7
6Q3eh+zHRoltZWOVaxus86aprOi3BuEmqi8knp9lDf+/Xxnzlw3en+zTrxq8
39h3wzKP+d3E88W8sU//qesfqn9N9fdXbOvvU/m/itvco/JuXW3RzyofqFgm
RqgcpauZnvufxr9Y37KP2ryluu00Lx01np30rS3V/7bCM1R+VPH+WaO2c3TV
9OyI3Gu9Prwmt73A7mB/9tN1eck28Wv9PlbPHit8lK7XAh8X+BVdfxEerfJg
lWei57Bl6Cg9207lpio305hq6nNbjbG18NFqO0/vPSb6oT/qXxVuqzZzMtss
7OAD+u1t9jP8S799rfI+PTta37UxslPzXmHPvFix7cKGYdu2rtpOdVDZV+PY
UXgzSl1bCfdOPCbGtqPev7vud1H9Fomfw87BCXjvdsytyvtTj40x/kX33VR/
BLKr+ulFj++7mvnDExrP0xXbllmq2yhxP9Mzjw35u1ffMkX3rdXm37r/WPgy
tanGvoI3/azyGD27E/OvcveqOca76jtXu+uFL0isB9GH8Ku2wfcuVv1xujoK
b6eyrvrNhZ/C/up+ucZ5RGJ5RU6Zo110v5/K/ipP1rUHcsdchf78Vc+eGH3S
9yGJbcHegVkD9uihuvYXPgwdI9nrqef7a573gCuj/1X+S9cOwqernKLvuU7l
k5qT0+K9vP9z1f9T5ROqvypsIvMwObOcnqLxHF61Tuuqsm3ddmmp2vfV/cGa
k91V11dXb/hoxXwd+3iZyjI2Eg4HT0nMt9GHZ8bYrlc5oOx93VRtN85sp/cu
m3OMCb4xMPTh1SpPTc0H4WAbqf3Bwmcn/k76pO97M/PbZnC/iv2MlzTmqsb5
JvZBY28qPDexT/FY5jH8oPuftZ9OUPmi2jeozXbqo5navKl+eqvNBJV9S94P
84r2I84Xbp2Zl8Fv8FHujDUaprJ92MrL1Feb4KjLtfc+Qd8If6ayq377p/AT
+v2xxO86nr2n8dyBbc/9nXzvbXyPrmOFRzNWXY8K35DYBo4ILtJB4y8wVn3v
5siY8G6q27hsPTlD7zxAz1wpfGBi3gP/2bRqO3Kq8N3sl6r52AqN5f5Y3wcS
8zjehZ93M/YNHVG0vkK/vaE2/w07hb0aoH5OE56nOdxC+AXhhcLL9fzuws9p
PLerv4Ow0ciG8G0ly9UBmbkWsrN/8KV+ifVq57Ajg6qWl/Hqc1Bw716q3zU4
eY4eCh+nTeI9x7qz/tvEGmFnuoXf97twl/CD8Enm19zfKq3FPlXbtYf1rn2r
9l9m6/cN9Gyl6P1wcck+Dv0enFn2h+j53eChug7X/aKi7xfyvWozW+W9oZvf
KtlX2SOzn9Eusd5GT6IvB2TmGHANOA1cBb8cv479jxzgG+Aj4H/vE35KF3Rd
7MM0/Pf7df+bvusglUeq/qDEPgzzhi/VT9c3RftZO4Yvw/xeU7Idx1/Cx8DX
IJaALkOnYau7Ittqt0TzuW1m3+dqeKDm6xvVFSRfF8f88N4rM9vWU4QvySwL
jwofWPW+/V5zfiF2QviKiFfAd5Zr/IcFD4TLXpWZB76sNjdk5o2vJOY6jO1n
9XNFZs75dOirUnC8f2Xmn3CMvWJPopdvzDzPH6r+8sz+C2O7TPhE9D9yoe+6
CW6l79o5+CH8oAfzVrLP3Cds06IG20R+w+/rq/pq0f74dPXztX5fmdvfxu/G
fm2dmS/9prqmifcb+251g/u+GXunbzsrMX/7sOK5XCO8fea9XNL9opplaHVu
Pwd/h5hKr8x2tkVifXUhNpq5DN/w16bm9HB74hb4M3Bm4hwfpd7X5wp/mHq/
/U14Qmp9cqrw2+gd4b8KH6C1+Lv6rUgvfZDafp2j+h80to56/x+5n+FZYizd
635uXW5/Er+SGMn7+JDCZ2X2CfENhwq/C18XPkM4y6xTTlf5Tmodc1pm232L
6s9U+XFqHXteZp8T3/O4zL4oOvDYzPtrZNgp5pD9iX1AP9AeO7hXYjtxYGY/
eOPwheHz1wufoHJgZt7eNrEviv09WnVd9I2DM+uZ11VfVv3Jur8oOMkjif1b
/NzjkS+1PyzzOuILw9/2V/lXtflMuLHGeWhmX/ioxP4w+MTMdh37PrBqvxre
flTmmAXyjR59LGJKxJbg7cSG+qt8OvW38250L98KN3gm5mqI7keloU+EH08t
4+jCvTNzLdb4yRgPY+ydmRuil/Dr8O+ImXXCFmeWhR2jTSu1+TS1HkAfwL2w
Fb9k9jPZk8QCsSvYlyNYu9RyjG+D/mFsd+EjpNa96OB6Yn1GnIl4E+NkvMS5
kK8emX11bBC2CL+LdWQ9R8SeR9fupzk5UuUvGvPxqXk9cRX0OPoc7o3fhD94
r8bwWOw31p44RUVt10NfxhxekDlGg24jrkDsBl8enx5foAOyqHf9ULGewy+7
PrPvjA4kZoHtJrY6N7W+elz1fTTOfsQt1EfrsvfY5/p9VMn8Db+3GrLPdxAT
I7aEvaAOvdAUH1v9DIJv6PcedfMNeMfS2HusM1xxXeZYDd/2fNHfSnzkz+8q
2g89PmJuvXXtDK6bzxBXQM8Pq9iP5HuJOREja6Nrk7Dj6E14GHwMToWsTgzb
QDz5VLhQ1fGadyL+s2XmuBW+ebOydQ56K8OfLprbLE3NYdZo3p5hH0Qco5f6
fEp4S/W5aWZ/E394i8y+Bnr+vdCN66vvzTP7p/jUHTPL3Z+2ELkVbqNys8zx
gXkN5rpwo/X07M2Z4xWTNIZ/Z44LgRuVrSvQGcg8sv+mcJPAb/AtZcsLcpOW
va/YX8gMsnO0+vk1bC7yvSyzLCPT6E9kBxn6KXgC8r1X+A7E1dqULeOTIo7E
fmZfP6FrgfCZqXUtvAfOMzR8rp4qk7J1Lzq4UvYYJsP3g69OJa6SOfa6KLM/
AgffRM+2KlvusDkty7YF2IThantAyf22KFvno/s3KNsuYB9uyRyzmgInLNtP
eUv1G5Ztj7BLecSmvhTeKOKW04SLZdsybFq9bJn6IjX/Hhn7raHsdcc2VuPZ
KcITwzY1L9tGM89w7W51yxHyRGyU9uRJiLcSN4VvYyMZ24jENo/v3SRx/Jc4
MHkYYqn4qg+FneW7vtZ7plfsQ2BD8Wfv1LtOQTfouqlk27c45JF40LoG82Hy
IUuC190m3Dlz3oQcx1aZ+/9FuFPs2xPVdoXuB8Xew4axP8t690mh/9lvx8U+
uTQxbzg8vgvb1ifqiaUSUyV3dF3mtfi76q8NWYB3MX7W+n+JY6bERYmP7h82
kdgGnABuAG88KuSOnBe6mpjeJxXbRfQV/Ambge04JzGPYY91TcwDjokx/Gmz
hY9MHE+Eu8Jhz9Z1c8l7nlgkXBROCvffLWRgXtgp4o7EgvkWvgm+Ce9kvxLn
ZX+yT+dHG3QAsWBkHx1wkvBHsW/hx8jLTxXHLuGr8Nat1N9mJeuC01LnMvA1
4Bs3lixHxFXhyfBl4q3YDmwINmK+cLu6Y7JwYzgy+p+cAZwQbkaslZgr9gM7
AmdBZlgvuPb0wMQN8T8ZJ3E7uBd6AZ4GP4Onwc3WD9lhTdF96EDkZVb0w15A
xuD9xH7/9BFUtyy3HCKPcPMpIUeXZpZbMPx9cnAY/Iwh4Tfj1xLbPCJ850nB
W/BR8GWIB3ZRebB+m6j6Tio/CU5yA7orMbeHP1cT83/ixK2jnrjUrw3m+fih
czXWw9Ef6meDxP4mMURyk8gUskVuEllD5tYLfkKe6q6Izz6ote6m51+LuNkO
uroLH62yeVtzL9aO2Bncnlwc/eALkHNbrH6uT52b+zKx7JB/ODWxT01M78nE
c44ufCLx2qGbZ+vZa3U/SX1/0WBZw8fcObUt65M6jjQpc1yuZeK5Ys7Is+LL
4NO0ivrPMusIdEWmco6eWY0OUP/NE3MwcpvkjFlHdOqdajO1wXFL8pTkK8lt
rmywn07OFl8d/KjKmTXb1eF6bm7NfnR3jbFXxB6JQX4Wa3qT+nuk4lg08Wxi
N/jOq1SuCZ+LXCgxbvrnncR64CHEFYbFs/RBDJyYAPlP4gY9kWON4ccG54v3
17csjvgk+WS+l3eR24SH47cRo/5v6rwn+U/2GzEN8rfP6bdbdP97zXlr9Dbx
DHLS9AkfIXbRXeWCeC+ch1z0/BgDueufGrzfyI0Tl2eNyI0Tb8WPIR8+O/IX
6HvmgRgIudybY12wkw/mzhkQb2+nMdzIfk6dT4SPEfPrFPU5Ywx9SL5ocmK9
R75riZ5/X/dvqb+1iTlfNzhFxXsM3tQ17GMblc/kHgcxq6mJ9SQ5tOeKjk8R
97mjaF5H3O3awE1Sj4PxMN73EutD8k6PR/x0qfrcNLXvSeyuleTqAeRdY1ik
+wuLjo+9GeP/NbFM4cuQsxoXskMcDt0FB4b/bqzrbuGKyu66RrB/UtskbNM0
lR8k9tOJ101MrIfJlU1DXwh/ofJZXfcLP5M4Jok+mxB8F967J7mdxHoVbnKf
8KFF54Nuj3lpnDomDK+AT3VIzDfgRC9rHs6HJ2oefhe+OPW5iD8SxwTI+/2Y
W999X3PMC/0JNxyT2B49r/IhtdkycX6BmCd2k7zcyMTcEn5K/B070jrq4a5w
2L8mtqfk+rCh+Cjk6JAf9jCxpmdzx8onVryO2E1yfc/HGMjvfZyYz3/K96j9
a6m56M/Cj6TO7RaC8xCn/0n196TWFcgZ6zI21gJbg1/FHOIzsK/wwYnbcG6C
McMZ4NSc+UDu8DmaaD1mM1e546HERatV537IAX3LXtJv49GBNeczsCPEkF5V
/XPEcGqOjePLk4esVZ0zyskNVR2b/TZ3von9f6TKe3LzBmIv16iciiyofD33
3l2nPt/BzwmZRd6QO/ysP89YFB1HvCp1TI/YHuctiBUQc/0mMYcktzwuNz8m
/jw2N9fH39wi9f4/EJ2t+vl6pqT6d9FN2Py6x88Y+PYDoz2+YxYclfMLY3L7
APienNvAPhKjeE31LyTO03GuBT1JDJgzMehtYgqcNcEOEhu7P+zTU1qHvVU/
qugcCfkz8miN1f9uzJ1wz9S5tnFF5942qLq+QeVj6meHxLnavqn3yUB4BP6S
8CDeX3U5K7duOUPtf6m5nnh+We86N3GcYYDaTc8d619b856jT/pG76B/0rpt
FTaLOMqXar9T6voDVD6l+v/qGpY7D01u9DDVX6K639XfktxndzbizFduHdS8
ak5Dn8RdEv3WS/ff6PfnK+YqcIwNVd8Zm6T6XVVezrqn3ne8cw/6rXqu4Dnt
9b4ti/bjyJ3DkYiVLg5eRByUWAP8cmjq/QP/WFXz/rlc+DO9f0nNeQHOYrAH
yJ+9T/xD+ODE+ZpzwhYTG1is+5t4r8pZ5NGR34pzBvCc9yo+P4FfgF/OPlyi
fprXnY+BK+IfD02c2yNXNDTGeWjq/BE+AmPoHPwQnsiZM/x9/H5yzey318hB
5z4z1Lvu8aL38K0HJ/bj9k+c/2NsnA0ZlNgf2QddmNhPIb7yfO4c21cVn+eA
bxAP+qlm3XssZ67Yi0Xrw90Sz9uuifOS7DHOoYyNOXlJ5VO586PMySe5zxhx
TgmM7K1f9zfwLQtqjpuRIyBX8Lrquwu/ofJTtS+zBmp/QnAzzpTNjLME3fXc
h7ntIrmhz3Pnjb6h78T5evLdb+fOnSODyBb9b8U+yG3jl2InhfsIL6yZS+dq
s5PKbRLHMzmT9VFund6ibl+O9eIMF2csiONxngJdNE/3xbr9WHgO8Zit4r2d
E9uu/kXntV+omEPCJSfl5jSlqu0mfi7n1zhDQ1yI+NDU+Hb8g80Trws59Ml6
tgM8SM+2hB8WrW+oI8fWSGW/kC/k7GRdnxZ9jg4/4pDUtoP8NL4/eQjileg6
8gPvhR/4rsof1P6I1DYiq5szrMc5vrrPNsIPz4n9Rv64U8ln18gNz8xty+dW
rP8/LzpfTK6ZfYVckusgr0F+g1wWOS32R8vgTpwLI+aKHuBMwzRyrvg5Vede
OaM0VXW3hi9AfKuj6u4rWgdx5vCKks8hfFlxG/Z/Zz3bk7MHqt9L37lDyWdA
2YOci9tA5XfqdyW6VO13SB1H5UwcNvLJ0A/MBXOCDlxec776af2+Z+jwvZAz
tburaFsJL0XHvq1yma6TkKnEa8bawS3xxX7OLI/kcI9X/XnwrsRxJOJJ5FyJ
PRKD7Bm2pkfqcw7EjckHFtv6jEL/qmPjF+kb2xNDS53v42wgNh0fH18fPU0u
k/OcnAV9X88uyh0fJB5AjJA15IzEtKLjOPiexMNap+aE8BlimMSsiJ/tFPMG
Rx0YeQTOlxLXIm5BvK1n4lgGOexPg2uRUyeOx9oTd2+ra2TR9mOvmNv9gmtw
ppBzj/jHL+p+VWJuyng2YW5i3mrC+4a9xs7ic+IXTEjMV7BB8JdddD2BXk2t
Ax8P27plap+A8wiDg2NzBpDn2A/YT+Ti46LnmbgWsZQ34Fp1x14OrVoeyfu+
pfot6j6jS3xgfm7d16buM52cO/qBPmI/s6/Hx/7hXYN1jREekvrsHmeiONOH
vL6k+xVq27JufwFdcUjwEGxQl9Q2rn1qPgevY70ZE2N7O3PekPPAH2Q+14Qv
iU95dXA59AN8g/mCh3yXOHfA+UfOyXJuFo5F7pccMM8TJ0S3oGPgAw8WrQNH
4vc2dYyCvDH5Y87B7qO+HyvaT2kSMoIfVtEzB6Xmw/BYzif8VvFcMCf8xpmK
cfEtg2NOpic+e4bvydnSR8J3YG9slDp+yNlMMLqRM6fV2Hv4XPiG7AH2AjkJ
eCb+GTwWv5Jzr5yZ4SxKim6pOk6C3ZmjNpeiFxPPFfL7VmL/YnjovJlqd6/u
R+u7ltWcK/+04rMonD2ZkFsX4Zv0Ts1/z0UWVV6ZOBbK+Va4JeeusK0z4734
D8R1kYUZFfsU+A3jc3NIuCLnFgeEPufMBWPgnM575FKrtikbVs13LqZ9Yt8V
H3Y5a1T1OfSPc/u86KQvhCfrfQOK9os/DN+Ks5aFun3hXyo+U4UdJN7P+Tp4
B+eRpoWe/D4xpyM2y9neOWp/QdH29+fE5xk4t76uYr5KLOjBxHPIGWf8Btov
SKzf0fMtUscNaM9znOkktsA53DXwwqL1P+PEb34/4lic/bsmcRyBdW+eWv8z
b29zTrBuX3tFxfwMnsZZomK8l/PXC2I8C2Pt4GmcRx6gZw9i/zOuxLEy8mEb
pvblySsh2+xnODnnEoi5cTYWDn1t6KOHc5+3g3cRJyG+QXwEmzY69OSo3Gc9
4XKrY5+wjuxD5KJR1efEODuF33GjyoeLPkfE2TLOL52U+BwPviR+45xYL+wb
Z5NuLZqnMScLYw7vijFztvf1xH43552nxF7ijPBKPdO1aF/vuVhf1pk5ZW7x
+1YJL1XdB+Ebscc4U7e6YrmAk2N/sbET1Wb30KX9U78Xn52zyfA44hvEORrC
PmIniWHA8zlXzv9HmH/WAb2KbZmSO85JDJwzyOhqzmvtmJovIaNf57bdxCUe
VjkrZIf9TGwKLvBG7rUmx8F59kdzy+GPmr/t1cdDMeaLEscHOP/+f5vR5m4=

            "]], 
           Polygon3DBox[CompressedData["
1:eJwtm3W8FVUXhg/IOSqg3pm5es69HkQUARNFARFbxCLEDizs+gzs7u4AAxRF
UDEQOzCwuwtREFtBRVEJQb7nYe0/9u/sd3bMzJ69V7xrnQ5Djtnpfy1LpdLQ
JUqlVvz2bSyVtqZ0zkulLpQTslLpwHKpdE2lVBpclErDuTaMsgX1LSmDaD+X
9tMpb1LvzdiNKL9Tn0U5mXIebdsxfh/6r1wrlc6g/ib1GfVSqcJvmXIvZRzl
AfofQP9d6XMWuDX3WprShtKW8mWVZ6F9OP0+YPyRXFsJ/AnlAuojGTOCMpf6
PEqVcidtV1BWpr4+99+d+iH0mc34tcDzePGe4Jng3vxuRLmcvldQvm3i/vT/
iGu/0b4c/ceAL+f+X4D34/q+lMHgfSj7M+YJ2v9H2Yd6S/qfT72R+nv0/5Hn
PxL8B/gt8MqM/Q/8Cu+7Peu2ZnOptC3XMkpH6q/T5yzmPZE+//IsMxl/JfUO
jP+IthWZ/1Hw3uAfwW0Ycyx4U+Z6F/wxZRXabuBaW9r6Me8OlDu5NpqSc20U
bb2of07fo/wFr0EZQL8h4AMoT4MP5HcN7vcK9YOo/0T/U+lzCuV98AeU+6hf
SPuRvM/91Hej7Eq5j7b7XU/e5TTaT6V8Rv1hrk2g7EWfvSlrUUp+K8av7XfM
Ym+5x+ZQX4/7b0d9R9pmcf9RaW1uosygnjNXRtmG99+WsiT9L6dtda59SP+u
/N4IfoCykP7/NvBO3OtESjfmnJTFXM75DfXhXBtG+ZNxsyn/VONZdqTtZebr
w/qtz30WgVtTf5w+j+WxJ9wbbbn/XfTvwbVP6X8P1+6mLEFp5bzMd3J69ldp
P4Fruzi/z0T9RsY1gTcALwNuB6675yntU3Fvu8dte5t53nKdeKZulCMYczjl
JdpepozIYu5bKG1oP5K23xm7Lfgo6q9R3gV3Ab/uPuSdrgU3MPYznm8Wv7+7
n3y2IvaN++c2ymrUf2A9F3KeXgKfAF7A/c6iXq7Enl+K9bgd/BDXJzPf0czx
D3gg7f/zWfM4bz7DedR/Y32O8XzT/336n8u1ZcCn0f9QzxelBWUJyvVcX6ox
5vP9lqa+AteXz2NPrs3vLJ6vQn0uz/g59X5cGwseR9khD7mifLmEMox6i1rU
68qpdiHP9gIfxvy3ca3CmHN8H/Ao8FLg68D3g29XrtH/UvAE8J3gW8BHgA8H
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
y3wZ96oxB2MPQ4uIHRlDehs8pIjYgDGCp8CnFRHrcn5jWecWwd3L4RuL1waV
35eT0zZVV8s1y9HK1RoTNTZqjoK5DcZodkvjjQWY82FswDk+zyNGaqzUnAFz
B04vIvdC/9LYmbEa+S1jfsZsjImOTv3NTTCfQ39NTt1YozlC5tKYU/N6HrlQ
cq1yruZELZ3ajRGYL2E80limOQTG/83ZODjNJ1dvTon8qBy8XLwxVf0tcxb+
yiOnRn9Mzt7Yhfk85mKYo/RqHt/Qb+M3Uo52qYW/qd/Zpl3EGtyr7ll9QfeE
e8M9aYxnO8qdlci5M/duXtqP+g/GX5QvA6iP897tIpcjqwTHK9drjpS5Utr/
RRG5hjek8+G9rymCqzGGba6KOS6OdY7WRcSo90nrY26JOUET0vsaqzCnRz7V
GEeL5FOMTPtBX8OcnvFp/cw9MYfo8NTf2Ii2mPFpczrM7bgDfEclYkTGisxR
0r825rEgj5yMsWl/mQtjTPDadF4X54sUEWvQ3zMXrUviN30//WNj5vK15rCY
y2LM+YCEzc0xBj4kPY+5KuZ7Gbs0Jmdszpyvgek8Gc80/+0Kx4LfycOmuxJ8
bBG2Xpvkm6zpeiGH2yl7s/BrzW28g/qe5TizxyUsV+MZ9awa79QW9kx4NtYG
b1wOmaBskKP0/HkOtZ3XysL30EfXV9cfND9RH1RfVF9z2XLkh+hzfpd8NzkY
uRh9NeMPcmhyafq3cpv67Nr/5nPI98jRyNX82RDtcnhyeb+mdv1d8yGNB5n7
Il/Ztghb3viL/qw2vfHN98uxRnMaIp/I/aw/o19jfMf4x9mVyO/cObWrU9Qt
crzKa+W2vvkZWZwNz4iy+4y0Xsp8Zf854L3LIfOGpPn0JZR5yj75cnNj1VPm
gi72mWnvXwmueazcaBZy+tQ0X8dyyGRl8x4Jb66MKSJ/0e/rHjE/sjELXacO
UZcYX3cvaVPod2hjKSuU6/o62tDa0uawyt9OZo3ycnAcch0zGoIPkWPrnNbf
XNTXKAPZ+7fJYbQKn1zffJUsYpXy7ebtamMvov2XhrC9a0XkxmiPm/sxI9nq
cjhyOX5Dv6UcdCvmap3F/Rf7i0XwnXKjfjPjca7lWuXQ+a6peR/awsp0ZfuY
9D3Uea6pZ8N4mpyPZ8S4m/txsf9aRM6r+0m+2Nymx8BPVsJfMP9KjsX8IjkQ
9/vBeXDfco5yj8bwnNO5ehWRL+TausZyveen/SiHJZc1N623/rF+spy8vpic
sVy9Pozro88j9/9zQ6ynnKnc6e15cG1yaqPy4IS0neRY9b/lQORCjAEaa8mz
4KfkkOWSlRcdysFZy12vkEV+kxyrXKv5YF+Vg5OWm7bPFmkd2yX+Tm5Mjk+u
z5ilsUv9d/14OT65Pt9HLtyYhHvEvWGs4sUiclfbliMerM5Sj6pP1WXmJJg7
oD1kLoKcifHw/bLgUvQVtd+MQekzmnPjt/ab35mFj+BZ90xrH8vhyA0ekge3
Y46CskcZo6x5wXOXnmdeQ+TkeHYHp/kmc//GcvhY+lqvgjdNtqi+kedL7vTE
LHwb/UFjHfpY+lrm7HiWPcOeZX0c594lC9+nRXrf/uke5gxp3+nPy6/LWZmv
q4+rrytnNLwS9oZckhyWsszzIbclZ6MtJicll6M/7FlafKZq4RN7FuV05WPk
RN9K8tm49MAicoO0r8ck3s/cN/eIPrk5XOZymaO8sCFyfrZP3+PcLHLA3Ivu
yQUNkaPnWfHMyOkbs1aXqFNOzyLHTl2hzpD3M6dwlfR9HP9fU/he+tz63pdl
ESuSz5LXMsdJWaBMMF/iCdZgt3L4d9Oq4YOpG9QR+mbmkGgvmlN3XxY5ANoX
+qfmKpsTqn0pP2s+w4KmiP3ps+m7mT9mfEj+SR7KnBpza/ZM9qE5qtqT8rmH
ZZFzqz1uvNd4rjm02odnpvubo6v9IX9kPHhRU8Te9Bn1Hc3JHZye33iNHItc
i5yE3ITxn/vL8Z8I/W//I2HuvhyEXIQ5Ov3S+bg+C59S31Kf/9Hka24AHkTZ
nfrsIrglczrM7dBm1HaU7zJHeU5TvNupWeQPynFuUw7OQO5gVrJfXA991Of1
CdUPrls9cpS0d7SntWefrMb9fQ59397JV5UvlTftmnx7Yy63ZZGDqq2hzaG/
+Fey1/ZN621Oj/6eOVfGv+Vs1U3qKLnctRK3oP+qH2u+v7aUMlpZbY6ettDG
aT/fwvO1K4fPqu9qTvrFqV3bSa55cT5FOf6foK88B3ndGTyV+fetha9tTEK+
9Oem4Jr1mfWdzbE111YdZ7zNM+hZVEepV+TqlOXKdOOJj1djfu+jbz66Gv83
+CHpW3NO1RXqjG8aIneuVyXluGhLZBF76ZLeyRiIsRD72HdGEbmX3k9eXc7d
s/ltQ+h7uQVtSW1KOYbfwJen+c2lkR/XH9Av8P8C5gS3T/KnmvS7/zdaIWE5
7qYkT+S+5d5PSfJQ++2zJH/Uwdfl8Q39lnIiciPmMKvL1Gk1z0SST+ac+v8I
9Y25R16zzZzES5N+ML/c77NuWm/5EL+L38dv1pb6L9zv71bBocil+P+elysR
f/b/FK6Xa2lMy3xVc9r3TPLF/yZoM2k7tXD/NURO8tAkT43/+p8EbSF1vv/H
eLgI20AbQdtMjkXu5ZOG4F7UUeoq+U95UONrfivjbdoD/melSxqvf/BFU8ja
T9N4c6C1tZdIz2MO7sS0/+VLzKnS39HG0NbwPwv6CvoMxgfNDVLXq/O11/4P
WEWeZA==
            "]], 
           Polygon3DBox[CompressedData["
1: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
+cafo7WwXhbcejT3HdrHPmOc5zkDeWf/A7DB+ds=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlzj0vg2EUBuBbpbY2tBI0NdTGymRgajAgwWrQMJEK/0H8AR+/QCTMYrUa
JSYsYiURHwkS4hLDlec89znPed9Ga3OhXUhSoou7vmS/JxljlD0+B5Lx/qRc
TQ4qySE36mXZk17TzDZb7HJtR0Vvytw0M+zIr+RFecO9gwJDlGq+LR9W1xlk
hLL8x/4Lb19545EPe77l5+oJc6fFZNJ5W0+O9fI3252888WR7JI1+QotVnm2
o7f2/3aeOWap+pcHuxbVZ3YvOe/Nd5p98WZD3aapt+48MfsLKRwstw==
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
           "Directional", 
            RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            GrayLevel[0.3], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0b8rxGEcwPHn/LzzIwaXH5tkYrGY6Iork9TRXUSJTTkLsYgsNhMZlInF
P2CVEiYySXEuXSaDwWAgr6cM73u/v5/n2/f5fp/rXljJFRMhhGVMtYUwyHVY
6whhoD6EjN4yH+ddnudRnOohTiRDuNY7+oa3+Zav+BIf+ok/UYWUzSrxHrxh
EyVc4BgvqMWw5+5zhg+4wCdcxlfcN76nn1eu2GOdJ9zzrPd0Tpf0WfwuPcLn
cU+zAk+blXVWT/rOPB+5HuND1zW84Qyyuk8vWWvnH4ezqDv1r7Yc0pg3a+YH
s7xO6Uc9qxv1Pd5RjW/coQlz1ht4hlu5BUXdy8nY3iFtk554PuZdvMr9///X
H1uJNaU=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/G3I9zJ7zvuEF2cTTLorGRQCmFRDE4yOO5fuJAo2SwmVpMU
s7JKGUz8F7Jg8LgMr57P9/vz/Xz6vD/ffKmyvF8XEWX5TkfMKLrkMRuxkIyY
54VMxBqOYRkXZZ7PYV9Kj5/zPTzDfXzFF7ngnziSiGjDDUzKG6/ae4rPciOr
6s7aZaxfYQKvsQFvsRknpZWvY5OcOP9QXbK3yi/5Nj/gD3yHL+CTHOtt4a7e
EV/iFTOWcFq9gnfqjtr35t/kRd5pbRgH1Sle4EO8G/PSqJfDr+aIX2+Y4T88
od/LP6TFXduxiO+YlXrrPbV5cQD7JcMnMC2pXMR9S8Q4n9Ufrb03TtX9/6s/
rRorTg==
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrh2EYh/HbzyBhpChFUsoh5/Pyc0wm/gLJ+RyLxIqJ2aQUymSREJGY
DCaDiWQQCwsbnzJ8u677e7+97/P0Fg7O9s+kRMSUHGVHbCUixiU/N6IgM2KH
P+sP8Q2vcU/ScyK28cszpfyVl+ELlmNJakSx9PEabJRhu1aslzIZyIp40hXx
FKk2j5kr8Bsr8Qd7MM2+TppkSNeCtdLj/Y/mpGeS/JN38HaeZd/Fd3V5vFt3
ynt1nXyftzn/Cf662wGumUexwP1r+Aa/s1vC94yIG77MP/gELsqVbg4vdcd8
it/ycz7Dq327QUZ4M1bJLL+wn8YzXMB5uefrOCk5zpDqDKs84bwr+GC/mfj/
V39nXDbP
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0csrhFEYgPGXkQ3jPsrS/yH3e2wkkkQjoUSRIgqxYslWUcrC1kJK/gAh
yspK0pAlkeTyk8XT85z3nO/M9zWV6amuyayImEBvecRMIqIB6YqIm2TEol41
X+cN3uZlHOh53i+IONen+oJP+JKzcyJ+9ItO6hLUWJdzEXKRKow4NvvCLTLu
qud7vuIHvuZvvuNCz5SiWqe4AM/uP7R+c+Zen+kP/aAz+lMv8SuezLY4/G5G
r+h337jJu9ZrXOV8HY/4/kd7Y3rSXjfvWI/qnr/zupG7MGzWzrNmfbpZL+hB
3arzvWcxanUZ56FND9lv4QHu5A5M6zQ3od87HLlnSO+Z9/Icjyf+/6tf2L88
MQ==
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrhWEcwPHn6BhMziD323EtoWOVySnbWcgplwwycjD5CyTERC5RFinn
JCWTyWqwShks7vdRBj4nw7fv9/m97/u8t/j4dH8mEkKYxHdpCKloCDU4qAhh
qTiEtG4uC2GCO3iOh5HSAzwaC2Fab+kZ3uBZvuFrrOsHfkUFPvGMW1y4do2v
cIod62re5Cxvc45P+Iyf8IZyfOARK/Zf5axz5vW+PtIL+lwf6yG+xLJZJn8v
s0U9onPecYqT1mP8ZV3Fh95/V/fqmGOdPGhdpBM6rWu5HYVmTdxm9uMb1uuE
jpg36Hu8oBLvuEMjChyP869rWrkFJWY9XIc9zzBln27dZ96V34OT0f9/9QcL
3Dqa
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/H3FZcocc4d5QbTlVIKZUBSokzMMpgUTvgDTJTJZJBBpBik
5FcZLPgTlE0pKZvfv+Uhw6vn8/3jPp/v93v1I5ODhURETMlyNiJfHPFaFHFb
G9FQGdGkPtHvxHMcwBa54o14b+eDz/BPnMIvPMQ9yddEFCUjhuXRuUdYI8dm
Q6mIAu5KVm8RDzAt4/Jifx9TMiZz5lU4jz1+u4QZ9YQ82D3Easm4c9Ssw045
n+VdvIKv8G7ejFuS1uvDXr0Ub+X93qkXL7xHGy6on51/55u08zq9bbMSDPUm
L+UJ/mYvyTf0fvhVhTv5B7/ha/yLn9nJedYnPo2n6m++bv6Jq5j4O192eAbf
9a89Q5V70upL/bK/74y54v//7xdryz1F
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{5204, 5205, 6751, 5234, 6748, 6256, 5232, 6746, 6257, 6842,
          5223, 5221, 6740, 5222, 5246, 6263, 6753, 5245, 6754, 6264}], 
        Line3DBox[{5206, 5207, 6733, 6246, 5208, 6731, 5209, 5210}], 
        Line3DBox[{5212, 5211, 6732, 5214, 5213}], 
        Line3DBox[{5216, 6735, 6247, 6730, 6248, 5215, 6734, 6249, 5230}], 
        Line3DBox[{5219, 5218, 6737, 5217, 6741, 6244, 5202, 6738, 6250, 6736,
          6251, 5280, 6775, 5279, 5278}], 
        Line3DBox[{1790, 6317, 5360, 6314, 5201, 6729, 6313, 5359, 6318, 6255,
          6745, 5224, 6742, 5225, 6254}], 
        Line3DBox[{5226, 6253, 6749, 5235, 5227, 6743, 5228, 6747, 5233, 5231,
          5229, 6744, 6252, 6739, 5220, 6750, 6258, 5236}], 
        Line3DBox[{5247, 5248, 6760, 5244, 5243, 6781, 6271, 5260, 6780, 5274,
          5264, 6764, 6315, 6312, 5356, 6841, 5358, 5365, 5257, 5363, 6779, 
         6259, 6260, 6765, 6268, 6756, 5252, 6276, 6771, 5275}], 
        Line3DBox[{5255, 5256, 6773, 5276, 6817, 5282, 6280, 6777, 5283, 5281,
          6776, 5268, 5269, 6843, 6319, 5361, 6311, 6840, 5364, 6270, 5251, 
         6755, 6267, 5273, 6769, 6266, 5250, 6833, 5271, 6768, 5270, 5345}], 
        Line3DBox[{1943, 6273, 6763, 6272, 5272, 6770, 5258, 5253, 6757, 6269,
          6758, 6262, 5242, 6767, 5237, 6243, 6728, 5200, 6752, 5239, 5238, 
         6261}], 
        Line3DBox[{5285, 5240, 5241, 6761, 5261, 6778, 5284, 5326, 6810, 5266,
          6274, 6844, 5286, 6782, 6245, 5203, 6784, 5254, 5249, 6265, 6759, 
         5259, 6766, 5265, 5277, 6774, 6279, 6284, 6828, 6309, 5346, 6832, 
         5347}], 
        Line3DBox[{5319, 6806, 5318, 6294, 6800, 6293, 5293, 6788, 6282, 6803,
          6275, 5267, 6783, 5287, 5288, 6785, 6277, 6772, 6278, 5292, 5262, 
         6762, 5263, 6283, 6789, 5294, 6831, 5342, 6827, 6308, 5336, 5335, 
         6826, 5340, 2132}], 
        Line3DBox[{5320, 6296, 6802, 6297, 5316, 6295, 6805, 6288, 5310, 6801,
          5317, 6286, 6791, 5298, 6804, 5295, 6790, 5296, 5291, 6787, 6281, 
         5290, 6786, 5289, 5305, 6807, 5297, 6285, 6824, 6305, 6821, 5338, 
         6825, 6307, 5337, 6304, 6822, 5339, 5343}], 
        Line3DBox[{5321, 5322, 6835, 5314, 6797, 6291, 6836, 6316, 5362, 6320,
          6845, 5324, 5323, 5303, 6794, 5304, 6815, 5309, 5308, 6798, 6289, 
         5307, 5306, 6809, 6299, 6808, 6298, 5329, 6812, 5330, 6823, 6306, 
         6829, 5344, 6830, 6303, 5333, 6818, 5334, 5341}], 
        Line3DBox[{5349, 5325, 5299, 6792, 6793, 6287, 5348, 6834, 5301, 5302,
          6819, 5331, 6302, 6820, 6301, 6814, 5328, 6811, 5312, 6796, 5313, 
         5327, 6813, 6300, 5332, 6816, 6292, 6799, 5315, 5351, 5354, 6838, 
         5311, 6795, 6290, 5355, 6310, 6839, 5353, 5352, 6837, 5350, 5300, 
         5357}], 
        Line3DBox[{5370, 5371, 6865, 5400, 6862, 6331, 6395, 5534, 6958, 6405,
          6332, 6861, 5390, 5388, 6855, 5389, 5412, 6338, 6867, 5411, 6868, 
         6339}], 
        Line3DBox[{5372, 5373, 6851, 6324, 5374, 6849, 5375, 5376}], 
        Line3DBox[{5378, 5377, 6850, 5380, 5379}], 
        Line3DBox[{5382, 6853, 6325, 6848, 6326, 5381, 6852, 6327, 5397}], 
        Line3DBox[{5386, 5384, 6854, 5383, 6856, 6322, 6392, 6383, 5520, 6940,
          5539, 6328, 6393, 6384, 6957, 6381, 5545, 5446, 6883, 5445, 5444}], 
        Line3DBox[{2335, 5385, 5367, 6847, 5368, 6330, 6859, 5391, 6857, 5392,
          5551, 6410}], 
        Line3DBox[{5393, 6329, 6863, 5401, 5394, 6858, 5395, 6860, 5399, 5398,
          5396, 5540, 6941, 6385, 5533, 6394, 6948, 5387, 6864, 6333, 5402}], 
        Line3DBox[{5413, 5414, 6871, 5410, 5409, 6888, 6344, 5426, 6887, 5440,
          5430, 6952, 6398, 6388, 5523, 6944, 5530, 5549, 5424, 5537, 6953, 
         6334, 6335, 6874, 6342, 6869, 5418, 6349, 6879, 5441}], 
        Line3DBox[{5421, 5422, 6881, 5442, 6923, 5448, 6353, 6885, 5449, 5447,
          6884, 5434, 5435, 6889, 5423, 6870, 6343, 5417, 5541, 5528, 6959, 
         6406, 5536, 5439, 5544, 5529, 5548, 6877, 6341, 5416, 6932, 5437, 
         6876, 5436, 5508}], 
        Line3DBox[{2482, 6346, 6873, 6345, 5438, 6878, 5425, 5419, 5542, 6942,
          6386, 5521, 6396, 6949, 6337, 5408, 6875, 5403, 6321, 6846, 5366, 
         6866, 5405, 5404, 6336}], 
        Line3DBox[{5451, 5406, 5407, 6872, 5427, 6886, 5450, 5491, 6918, 5432,
          6347, 6892, 5452, 6890, 6323, 5369, 6893, 5420, 5415, 6340, 6950, 
         6397, 6387, 5522, 6943, 5543, 5431, 5443, 6882, 6352, 6357, 6928, 
         6379, 5509, 6931, 5510}], 
        Line3DBox[{5484, 6915, 5483, 6366, 6909, 6365, 5459, 6897, 6355, 6912,
          6348, 5433, 6891, 5453, 5454, 6894, 6350, 6880, 6351, 5458, 5428, 
         6951, 5429, 6356, 6898, 6407, 5524, 6947, 5547, 5505, 6927, 6378, 
         5500, 5499, 6926, 5503, 2663}], 
        Line3DBox[{5485, 6368, 6911, 6369, 5481, 6367, 6914, 6360, 5475, 6910,
          5482, 6358, 6900, 5463, 6913, 5460, 6899, 5461, 5457, 6896, 6354, 
         5456, 6895, 5455, 5470, 6916, 5462, 5538, 6956, 6375, 6403, 6390, 
         6963, 5527, 6946, 5532, 5550, 6377, 5501, 6374, 6925, 5502, 5506}], 
        Line3DBox[{5486, 5487, 6934, 5479, 6906, 6363, 6935, 5513, 6936, 5489,
          5488, 5468, 6903, 5469, 6921, 5474, 5473, 6907, 6361, 5472, 5471, 
         6917, 6370, 6408, 6960, 5526, 6402, 5494, 6954, 6399, 5535, 6391, 
         6945, 6404, 6376, 6929, 5507, 6930, 6373, 5497, 6924, 5498, 5504}], 
        Line3DBox[{5512, 5490, 5464, 6901, 6902, 6359, 5511, 6933, 5466, 5467,
          5546, 5531, 6962, 6409, 5495, 6372, 6955, 6401, 6382, 6961, 6389, 
         6400, 5493, 6919, 5477, 6905, 5478, 5492, 6920, 6371, 5496, 6922, 
         6364, 6908, 5480, 5515, 5518, 6938, 5476, 6904, 6362, 5519, 6380, 
         6939, 5517, 5516, 6937, 5514, 5465, 5525}], 
        Line3DBox[{5557, 5558, 6988, 5588, 6985, 6424, 5586, 6982, 6425, 6984,
          5577, 5575, 6976, 5576, 5600, 6431, 6990, 5599, 6991, 6432}], 
        Line3DBox[{5559, 5560, 6969, 6414, 5561, 6967, 5562, 5563}], 
        Line3DBox[{5565, 5564, 6968, 5567, 5566}], 
        Line3DBox[{5569, 6971, 6415, 6966, 6416, 5568, 6970, 6417, 5584}], 
        Line3DBox[{5573, 5571, 6973, 5570, 6977, 6412, 5555, 6974, 6418, 6972,
          6419, 5636, 7014, 5635, 5634}], 
        Line3DBox[{3052, 5572, 5553, 6965, 5554, 6423, 6981, 5578, 6978, 5579,
          6422}], 
        Line3DBox[{5580, 6421, 6986, 5589, 5581, 6979, 5582, 6983, 5587, 5585,
          5583, 6980, 6420, 6975, 5574, 6987, 6426, 5590}], 
        Line3DBox[{5601, 5602, 6998, 5598, 5597, 7020, 6440, 5615, 7019, 5630,
          5619, 7002, 5620, 7008, 5612, 6439, 7018, 6427, 6428, 7003, 6436, 
         6993, 5606, 6445, 7010, 5631}], 
        Line3DBox[{5609, 5610, 7012, 5632, 7058, 5638, 6449, 7016, 5639, 5637,
          7015, 5624, 5625, 7021, 5611, 6996, 6438, 5605, 6992, 6435, 5629, 
         7007, 6434, 5604, 7074, 5627, 7006, 5626, 5701}], 
        Line3DBox[{3207, 6442, 7001, 6441, 5628, 7009, 5613, 5607, 6994, 6437,
          6995, 6430, 5596, 7005, 5591, 6411, 6964, 5552, 6989, 5593, 5592, 
         6429}], 
        Line3DBox[{5641, 5594, 5595, 6999, 5616, 7017, 5640, 5682, 7051, 5622,
          6443, 7024, 5642, 7022, 6413, 5556, 7025, 5608, 5603, 6433, 6997, 
         5614, 7004, 5621, 5633, 7013, 6448, 6453, 7069, 6478, 5702, 7073, 
         5703}], 
        Line3DBox[{5675, 7047, 5674, 6463, 7041, 6462, 5649, 7029, 6451, 7044,
          6444, 5623, 7023, 5643, 5644, 7026, 6446, 7011, 6447, 5648, 5617, 
         7000, 5618, 6452, 7030, 5650, 7072, 5698, 7068, 6477, 5692, 5691, 
         7067, 5696, 3398}], 
        Line3DBox[{5676, 6465, 7043, 6466, 5672, 6464, 7046, 6457, 5666, 7042,
          5673, 6455, 7032, 5654, 7045, 5651, 7031, 5652, 5647, 7028, 6450, 
         5646, 7027, 5645, 5661, 7048, 5653, 6454, 7065, 6474, 7062, 5694, 
         7066, 6476, 5693, 6473, 7063, 5695, 5699}], 
        Line3DBox[{5677, 5678, 7076, 5670, 7038, 6460, 7077, 5706, 7078, 5680,
          5679, 5659, 7035, 5660, 7056, 5665, 5664, 7039, 6458, 5663, 5662, 
         7050, 6468, 7049, 6467, 5685, 7053, 5686, 7064, 6475, 7070, 5700, 
         7071, 6472, 5689, 7059, 5690, 5697}], 
        Line3DBox[{5705, 5681, 5655, 7033, 7034, 6456, 5704, 7075, 5657, 5658,
          7060, 5687, 6471, 7061, 6470, 7055, 5684, 7052, 5668, 7037, 5669, 
         5683, 7054, 6469, 5688, 7057, 6461, 7040, 5671, 5708, 5711, 7080, 
         5667, 7036, 6459, 5712, 6479, 7081, 5710, 5709, 7079, 5707, 5656, 
         5713}], 
        Line3DBox[{5719, 5720, 7106, 5750, 7103, 6493, 5748, 7100, 6494, 7102,
          5739, 5737, 7094, 5738, 5762, 6500, 7108, 5761, 7109, 6501}], 
        Line3DBox[{5721, 5722, 7087, 6483, 5723, 7085, 5724, 5725}], 
        Line3DBox[{5727, 5726, 7086, 5729, 5728}], 
        Line3DBox[{5731, 7089, 6484, 7084, 6485, 5730, 7088, 6486, 5746}], 
        Line3DBox[{5735, 5733, 7091, 5732, 7095, 6481, 5717, 7092, 6487, 7090,
          6488, 5798, 7132, 5797, 5796}], 
        Line3DBox[{3489, 5734, 5715, 7083, 5716, 6492, 7099, 5740, 7096, 5741,
          6491}], 
        Line3DBox[{5742, 6490, 7104, 5751, 5743, 7097, 5744, 7101, 5749, 5747,
          5745, 7098, 6489, 7093, 5736, 7105, 6495, 5752}], 
        Line3DBox[{5763, 5764, 7116, 5760, 5759, 7138, 6509, 5777, 7137, 5792,
          5781, 7120, 5782, 7126, 5774, 6508, 7136, 6496, 6497, 7121, 6505, 
         7111, 5768, 6514, 7128, 5793}], 
        Line3DBox[{5771, 5772, 7130, 5794, 7176, 5800, 6518, 7134, 5801, 5799,
          7133, 5786, 5787, 7139, 5773, 7114, 6507, 5767, 7110, 6504, 5791, 
         7125, 6503, 5766, 7192, 5789, 7124, 5788, 5863}], 
        Line3DBox[{3644, 6511, 7119, 6510, 5790, 7127, 5775, 5769, 7112, 6506,
          7113, 6499, 5758, 7123, 5753, 6480, 7082, 5714, 7107, 5755, 5754, 
         6498}], 
        Line3DBox[{5803, 5756, 5757, 7117, 5778, 7135, 5802, 5844, 7169, 5784,
          6512, 7142, 5804, 7140, 6482, 5718, 7143, 5770, 5765, 6502, 7115, 
         5776, 7122, 5783, 5795, 7131, 6517, 6522, 7187, 6547, 5864, 7191, 
         5865}], 
        Line3DBox[{5837, 7165, 5836, 6532, 7159, 6531, 5811, 7147, 6520, 7162,
          6513, 5785, 7141, 5805, 5806, 7144, 6515, 7129, 6516, 5810, 5779, 
         7118, 5780, 6521, 7148, 5812, 7190, 5860, 7186, 6546, 5854, 5853, 
         7185, 5858, 3835}], 
        Line3DBox[{5838, 6534, 7161, 6535, 5834, 6533, 7164, 6526, 5828, 7160,
          5835, 6524, 7150, 5816, 7163, 5813, 7149, 5814, 5809, 7146, 6519, 
         5808, 7145, 5807, 5823, 7166, 5815, 6523, 7183, 6543, 7180, 5856, 
         7184, 6545, 5855, 6542, 7181, 5857, 5861}], 
        Line3DBox[{5839, 5840, 7194, 5832, 7156, 6529, 7195, 5868, 7196, 5842,
          5841, 5821, 7153, 5822, 7174, 5827, 5826, 7157, 6527, 5825, 5824, 
         7168, 6537, 7167, 6536, 5847, 7171, 5848, 7182, 6544, 7188, 5862, 
         7189, 6541, 5851, 7177, 5852, 5859}], 
        Line3DBox[{5867, 5843, 5817, 7151, 7152, 6525, 5866, 7193, 5819, 5820,
          7178, 5849, 6540, 7179, 6539, 7173, 5846, 7170, 5830, 7155, 5831, 
         5845, 7172, 6538, 5850, 7175, 6530, 7158, 5833, 5870, 5873, 7198, 
         5829, 7154, 6528, 5874, 6548, 7199, 5872, 5871, 7197, 5869, 5818, 
         5875}], 
        Line3DBox[{5881, 5882, 7224, 5912, 7221, 6562, 5910, 7218, 6563, 7220,
          5901, 5899, 7212, 5900, 5924, 6569, 7226, 5923, 7227, 6570}], 
        Line3DBox[{5883, 5884, 7205, 6552, 5885, 7203, 5886, 5887}], 
        Line3DBox[{5889, 5888, 7204, 5891, 5890}], 
        Line3DBox[{5893, 7207, 6553, 7202, 6554, 5892, 7206, 6555, 5908}], 
        Line3DBox[{5897, 5895, 7209, 5894, 7213, 6550, 5879, 7210, 6556, 7208,
          6557, 5960, 7250, 5959, 5958}], 
        Line3DBox[{3926, 5896, 5877, 7201, 5878, 6561, 7217, 5902, 7214, 5903,
          6560}], 
        Line3DBox[{5904, 6559, 7222, 5913, 5905, 7215, 5906, 7219, 5911, 5909,
          5907, 7216, 6558, 7211, 5898, 7223, 6564, 5914}], 
        Line3DBox[{5925, 5926, 7234, 5922, 5921, 7256, 6578, 5939, 7255, 5954,
          5943, 7238, 5944, 7244, 5936, 6577, 7254, 6565, 6566, 7239, 6574, 
         7229, 5930, 6583, 7246, 5955}], 
        Line3DBox[{5933, 5934, 7248, 5956, 7294, 5962, 6587, 7252, 5963, 5961,
          7251, 5948, 5949, 7257, 5935, 7232, 6576, 5929, 7228, 6573, 5953, 
         7243, 6572, 5928, 7310, 5951, 7242, 5950, 6025}], 
        Line3DBox[{4081, 6580, 7237, 6579, 5952, 7245, 5937, 5931, 7230, 6575,
          7231, 6568, 5920, 7241, 5915, 6549, 7200, 5876, 7225, 5917, 5916, 
         6567}], 
        Line3DBox[{5965, 5918, 5919, 7235, 5940, 7253, 5964, 6006, 7287, 5946,
          6581, 7260, 5966, 7258, 6551, 5880, 7261, 5932, 5927, 6571, 7233, 
         5938, 7240, 5945, 5957, 7249, 6586, 6591, 7305, 6616, 6026, 7309, 
         6027}], 
        Line3DBox[{5999, 7283, 5998, 6601, 7277, 6600, 5973, 7265, 6589, 7280,
          6582, 5947, 7259, 5967, 5968, 7262, 6584, 7247, 6585, 5972, 5941, 
         7236, 5942, 6590, 7266, 5974, 7308, 6022, 7304, 6615, 6016, 6015, 
         7303, 6020, 4272}], 
        Line3DBox[{6000, 6603, 7279, 6604, 5996, 6602, 7282, 6595, 5990, 7278,
          5997, 6593, 7268, 5978, 7281, 5975, 7267, 5976, 5971, 7264, 6588, 
         5970, 7263, 5969, 5985, 7284, 5977, 6592, 7301, 6612, 7298, 6018, 
         7302, 6614, 6017, 6611, 7299, 6019, 6023}], 
        Line3DBox[{6001, 6002, 7312, 5994, 7274, 6598, 7313, 6030, 7314, 6004,
          6003, 5983, 7271, 5984, 7292, 5989, 5988, 7275, 6596, 5987, 5986, 
         7286, 6606, 7285, 6605, 6009, 7289, 6010, 7300, 6613, 7306, 6024, 
         7307, 6610, 6013, 7295, 6014, 6021}], 
        Line3DBox[{6029, 6005, 5979, 7269, 7270, 6594, 6028, 7311, 5981, 5982,
          7296, 6011, 6609, 7297, 6608, 7291, 6008, 7288, 5992, 7273, 5993, 
         6007, 7290, 6607, 6012, 7293, 6599, 7276, 5995, 6032, 6035, 7316, 
         5991, 7272, 6597, 6036, 6617, 7317, 6034, 6033, 7315, 6031, 5980, 
         6037}], 
        Line3DBox[{6041, 6042, 7331, 6065, 7329, 6628, 6698, 6201, 7326, 6237,
          6202, 6684, 6715, 7328, 6217, 6058, 6056, 7324, 6057, 6077, 6633, 
         7333, 6076, 7334, 6634}], 
        Line3DBox[{6043, 6044, 7321, 6621, 6045, 7319, 6046, 6047}], 
        Line3DBox[{6049, 6048, 7320, 6051, 6050}], 
        Line3DBox[{6052, 7322, 6622, 6695, 6185, 6228, 6186, 7400, 6678, 6714,
          6197, 7416, 6187, 6229, 6623, 6062}], 
        Line3DBox[{6055, 6053, 6218, 7401, 6682, 6175, 6697, 7417, 6619, 6694,
          6680, 6174, 7402, 6219, 6624, 6696, 6681, 6230, 7323, 6679, 6224, 
         6106, 7346, 6105, 6104}], 
        Line3DBox[{4353, 6054, 6039, 7415, 6693, 6196, 6713, 6627, 7406, 6191,
          6234, 6235, 6199, 7404, 6188, 6232, 6059, 6626}], 
        Line3DBox[{6060, 6625, 7330, 6066, 6238, 6200, 7405, 6683, 6712, 6061,
          7327, 6064, 6063, 6236, 6177, 6190, 7325, 6233, 6189, 6220, 6198, 
         6231, 7403, 6176, 7407, 6192, 6629, 6067}], 
        Line3DBox[{6078, 6079, 7336, 6075, 6074, 7350, 6640, 6089, 7349, 6719,
          6205, 6703, 6093, 7421, 6702, 6688, 6241, 6180, 7411, 6195, 6242, 
         6087, 6211, 7423, 6630, 6699, 6692, 7433, 6716, 6638, 7335, 6082, 
         6645, 7342, 6101}], 
        Line3DBox[{6085, 6086, 7344, 6102, 7377, 6108, 6649, 7347, 6109, 6107,
          7422, 6704, 6181, 6717, 6096, 7351, 6721, 6204, 6686, 7432, 6240, 
         6639, 6720, 6203, 7408, 6193, 6239, 6637, 6100, 7340, 6636, 6081, 
         7392, 6098, 7339, 6097, 6162}], 
        Line3DBox[{4489, 6642, 7338, 6641, 6099, 7341, 6088, 6083, 6221, 7409,
          6685, 6178, 6700, 7418, 6632, 6073, 6718, 7434, 6194, 6223, 6068, 
         6618, 7318, 6038, 7332, 6070, 6069, 6631}], 
        Line3DBox[{6111, 6071, 6072, 7337, 6090, 7348, 6110, 6145, 7429, 6212,
          6643, 7353, 6112, 7424, 6620, 6040, 7354, 6084, 6080, 6635, 7419, 
         6701, 6687, 6179, 7410, 6222, 6094, 6103, 7345, 6648, 6653, 7387, 
         6676, 6163, 7391, 6164}], 
        Line3DBox[{6138, 7370, 6137, 6662, 7365, 6661, 6116, 7356, 6651, 7368,
          6644, 6095, 7352, 6113, 6709, 6691, 6726, 6114, 7425, 6646, 7343, 
         6647, 6213, 6091, 7420, 6092, 6652, 7357, 6117, 7390, 6159, 7386, 
         6675, 6153, 6152, 7385, 6157, 4674}], 
        Line3DBox[{6139, 6664, 7367, 6665, 6135, 6663, 7369, 6656, 6130, 7366,
          6136, 6654, 7358, 6120, 6226, 7413, 6689, 6207, 6705, 7426, 6118, 
         6706, 6182, 6722, 7355, 6650, 6723, 6206, 7412, 6225, 6115, 6127, 
         7371, 6119, 6214, 7431, 6672, 7381, 6155, 7384, 6674, 6154, 6671, 
         7382, 6156, 6160}], 
        Line3DBox[{6140, 6141, 7394, 6133, 7363, 6659, 7395, 6167, 7396, 6143,
          6142, 6125, 7361, 6126, 7376, 6129, 6216, 7428, 6657, 6215, 6128, 
         7372, 6666, 6724, 7435, 6184, 6711, 6147, 7373, 6148, 7383, 6673, 
         7388, 6161, 7389, 6670, 6150, 7378, 6151, 6158}], 
        Line3DBox[{6166, 6144, 6121, 7359, 7360, 6655, 6165, 7393, 6123, 6124,
          7379, 6149, 6669, 7380, 6668, 7375, 6146, 6227, 7414, 6690, 6208, 
         6707, 7427, 6132, 6708, 6209, 6725, 7374, 6667, 6727, 6210, 6710, 
         7430, 6660, 7364, 6134, 6169, 6172, 7398, 6131, 7362, 6658, 6173, 
         6677, 7399, 6171, 6170, 7397, 6168, 6122, 6183}]}, {
        GrayLevel[0.2], 
        Line3DBox[CompressedData["
1:eJwN0MErg3EYwPFnvc2W/QPMSUk5c5I/QJFkJQenndTKjlI4SDlQO5Di6LDa
XdqBlZPtNLuQy5QVc5KUw1J8Dp++7/P8fu9W73ixvLKZiog1Eu6zEU22eB6K
WMxHvGiXBc+P+kSPV5bsPnQkEzFKjlW7Yf21H/DJst2XvtPnh8Sdgn1aq/5v
jzaT5gnWnY1pnqb78+aWTptn2DGXtcQcs1yybV/TKb91pXWt0GXffMCFO396
osd6RMP5GW98mzscOn/QxK7HKTekyXHrvK/n3LFBlgwlrp23vb/r2/4DUEs0
tA==
         "]], 
        Line3DBox[{1790, 2250, 2169, 2208, 1791, 1778, 6737, 1779, 1771, 1773,
          1808, 6743, 1806, 1793, 1792, 1801, 2251, 2170, 2209, 1798, 6740, 
         1799, 1886, 1873, 6757, 1872, 1878, 2260, 2181, 2221, 1893, 2218, 
         2178, 2164, 2228, 6779, 1833, 1831, 1967, 1890, 2257, 6840, 2177, 
         2217, 1889, 1884, 1885, 6784, 1973, 1947, 6772, 1927, 1925, 1980, 
         1978, 6787, 1979, 1998, 6798, 2026, 2025, 2070, 6813, 2083, 2102, 
         191, 222}], 
        Line3DBox[{1813, 1814, 1950, 6775, 1951, 1811, 1810, 6750, 1829, 1835,
          1840, 6751, 1744, 1745, 1847, 6752, 1839, 1838, 1867, 6781, 1902, 
         1900, 1853, 1851, 1955, 6817, 1957, 1956, 6778, 1963, 2071, 2048, 
         1983, 6788, 1965, 1966, 2043, 6801, 2044, 2052, 2276, 2205, 2194, 
         2273, 2031, 2033, 6836, 2239, 2199, 2165, 2242, 2153, 2148, 2028, 
         6795, 2027, 2160, 2157, 2243, 227}], 
        Line3DBox[{1841, 1842, 1856, 6760, 1862, 1836, 1837, 6773, 1887, 1888,
          1904, 6761, 1845, 1846, 1964, 2039, 6800, 2040, 2041, 2042, 6805, 
         2023, 2024, 2036, 2235, 2195, 2274, 2032, 6797, 2034, 2240, 2200, 
         2279, 2149, 2156, 6839, 2158, 2159, 2161, 2244, 2202, 2281, 201}], 
        Line3DBox[{1860, 6754, 1861, 1891, 1911, 6763, 1909, 1905, 1871, 6756,
          1870, 1917, 1941, 6769, 1865, 1866, 2136, 1919, 6766, 1920, 1990, 
         1986, 6789, 1985, 2012, 1997, 1995, 6807, 2060, 2078, 2062, 6808, 
         2063, 2068, 2069, 6811, 2072, 2086, 2110, 2109}], 
        Line3DBox[{1875, 1876, 1937, 6768, 1939, 2139, 2145, 2129, 6828, 1988,
          1944, 1945, 6827, 2125, 2122, 2118, 6821, 2014, 2016, 2100, 6823, 
         2080, 2081, 2073, 2075, 6820, 2098, 2066, 162, 2111}], 
        Line3DBox[{1943, 1910, 1912, 1942, 6771, 1874, 1877, 1938, 1940, 6833,
          2141, 2142, 2128, 1989, 1948, 6774, 1949, 6831, 1987, 1984, 2011, 
         1996, 1994, 6824, 2119, 2015, 2013, 2077, 2079, 6812, 2082, 2074, 
         2076, 2084, 6814, 2085, 148}], 
        Line3DBox[{149, 2067, 2065, 2097, 6819, 2096, 2087, 2088, 6829, 2121, 
         2099, 2101, 2123, 6825, 2124, 2115, 2114, 6826, 1982, 1981, 2140, 
         6832, 2143, 2144, 2138, 2137}], 
        Line3DBox[{5, 2029, 6796, 2030, 2018, 2017, 6809, 2064, 2007, 2006, 
         1976, 6786, 1977, 1991, 1906, 6762, 1907, 1974, 1901, 6759, 1864, 
         1863, 1868, 6755, 1869, 1918, 6765, 1834, 1832, 2227, 2187, 2266, 
         1936, 1898, 1897, 6770, 1908, 1859, 1857, 6753, 1858, 1805, 1804, 
         6749, 1772, 1770, 1789}], 
        Line3DBox[CompressedData["
1:eJwVz78rxHEYB/DHJe4/UBZdRv8Ak11ZbnIymeVW3AlRuhtIsRkQMSgdw9VF
GQ2y+NEhdeoYZUGyeH2GV+/v+3meb32/uclifrojIia4ZDAb8d0dsd4bUZDj
PFHVH2WblpsNGrzpm3ZX8pAjLsy30o4BTs0W3NTkMkuc6y92a9Q5M9tlxnxH
linRtKtQY06/lSscM+V2Nn0rD/oqJ1T1CkX7YTlELv2L3idv3MyzT3/6ZrnI
Ngd0mmUYc//VFfFD3vOn/OCXPwpmPe6uvVNij5b5K8+MpH+U77QZ1e/kPU3+
AUNhPXs=
         "]], 
        Line3DBox[{2132, 2117, 2116, 6822, 2120, 2134, 2133, 6830, 2106, 2093,
          2095, 2108, 6834, 187, 2135}], 
        Line3DBox[{164, 2146, 2003, 6793, 2005, 2107, 2094, 2092, 2105, 6818, 
         2112, 2131, 2130}], 
        Line3DBox[CompressedData["
1:eJwV0L8rxHEYB/DHwm1SNwlh9A+cyW5SSpRBoTsTmwxyXeq65GQ2HKUoSpdC
x67O707y68og/gLK6PUdXr0/z/v5fIbvt296YXS+JSKmqDCTisiw0xnx2xYx
wSQDum3dt/MnNfMmH7yY6xTt95KkxBYF3Zm8a424Z8V86k2ZJlW7Dcpc2L3r
1jnhQHcs13glZ56j6lxztySfmdU15CqHZM1HssgT4+as+0NykF56ONfd2i+z
S79uX+Z5oMvcnXy/e+2ygzQpxpK3vueGH/6oe7OU/CeuzMPuVJwXueRa98WI
/k02eaTBP8j2PJ8=
         "]], 
        Line3DBox[{229, 2163, 2282, 2203, 2245, 2162, 2151, 2150, 6837, 2154, 
         2058, 2057, 6835, 2054, 2045, 6802, 2046, 2050, 6806, 2049}], 
        Line3DBox[{225, 2113, 2061, 2002, 6792, 2004, 2126, 2127}], 
        Line3DBox[CompressedData["
1:eJwV0LsuRFEYhuF/iInZWyJR7YzjxDQkWoeOuAHHiEIiEzUtJlEKGgqFhum4
AXQkZBoNVyFOU4nGIeFRvHnX961/ray9S5W1mdVcRCyj3WI2jZjDfhLx0xpx
W4xoKkTkcGP9qftCXm5BXdfGwxjBIO50A9yNd/dsuG8dF9abfM693GF/gYc6
I3Z0l6jKiX6eD+RvpHKGfpTN/uoO0UBiroAT6xWucYUnzU7g3lvGuFl3ZG+J
R+U333Btr8FT8jSe5D3exuL/23CFR32dx51/4GPUkPeWTBd8Jp8ilV/5w5kX
7pJ7UEZmrsol9GELRd2zuV3//g/93jCz
         "]], 
        Line3DBox[{2335, 2336, 2324, 6854, 2325, 2318, 2320, 2351, 6858, 2349,
          2338, 2337, 2344, 2906, 2709, 2816, 2341, 6855, 2342, 2426, 2413, 
         2919, 2723, 6942, 2830, 2412, 2418, 2926, 2731, 2838, 2433, 2832, 
         2725, 2697, 2850, 6953, 2374, 2372, 2506, 2430, 6870, 2429, 2943, 
         2746, 2852, 2424, 2425, 6893, 2512, 2486, 6880, 2466, 2464, 2519, 
         2517, 6896, 2518, 2535, 6907, 2562, 2561, 2607, 6920, 2619, 2635, 
         459, 2644}], 
        Line3DBox[{2382, 2383, 2397, 6871, 2403, 2377, 2378, 6881, 2427, 2428,
          2443, 6872, 2386, 2387, 2503, 2576, 6909, 2577, 2578, 2579, 6914, 
         2559, 2560, 2572, 2568, 6906, 2570, 2680, 2687, 6939, 2690, 2691, 
         2693, 469}], 
        Line3DBox[CompressedData["
1:eJwVzDFLgmEYheGnEKKaHcohGsQQ+qhAnPoLDv6DHBIUC+kHRIKDEhEfBFFL
c0O4SyDU0CBNNQgJDlG70N7lcLjPfd6XZ7t2Wj1ZioiKHK1GfGxG1PBcUpnw
a7yUpnzyBt7K2XrEYC0ityDfwCfexql/x7a6NGwV2y8O8M7Wwke+lYvI6ve2
mUwlz4feLnDuzpetq49sRfzjPXzhu/jDC/jMO/jNM+7meYmPMcUyFiTRX3HP
n76+s7gjB/obXmGCK973sczf8QYPsSoP+gRjOeIfBoorwQ==
         "]], 
        Line3DBox[{2415, 2416, 2933, 2737, 2844, 2476, 6876, 2478, 2669, 2675,
          2660, 6928, 2526, 2483, 2484, 6927, 2656, 2653, 2987, 2787, 2889, 
         2801, 2886, 2884, 2783, 6963, 2983, 2550, 2950, 2753, 2859, 2552, 
         2877, 2773, 2972, 2634, 2986, 2786, 6945, 2888, 2805, 2617, 2974, 
         2775, 2879, 2610, 2867, 2761, 2959, 2612, 2980, 2780, 2882, 6955, 
         2632, 2876, 2772, 2971, 2603, 2957, 2759, 2865, 430, 2977, 2808, 
         514}], 
        Line3DBox[CompressedData["
1:eJwV0L9LglEUBuDTaK1ORUMEQeISlUQ0CNFSg+DYaLvW0twgFP2AxHYjKFxC
dLEhEBqN9ijKCBT/AMHVx+HlOe+5373Dt1Qo5YszEZGTViKiIlVpSm8+osgT
OZ1zPhuxyGe9IcmFiJJd027IHI95JD3nbfn3xsv0e2cD+2V3Lnmmf9uX2dFX
OdIv+Kan2ddX+Kpfyb75QNLeONT3zH+sc+zbc17r71IxZ/jEX+5yiyl3M+YP
c5XbrPGTWa5zg13ecpOP/OGNrLl/p++YH/jFez9wAiLuMAE=
         "]], 
        Line3DBox[{417, 2770, 2969, 2604, 2864, 2758, 2956, 2602, 2806, 2881, 
         2779, 6962, 2979, 2631, 2970, 2771, 2875, 2622, 2872, 2767, 2966, 
         2623, 6929, 2652, 2887, 2785, 2985, 2633, 2807, 2893, 2789, 2989, 
         2654, 2892, 6946, 2788, 2988, 2655, 2647, 2646, 6926, 2521, 2520, 
         2670, 6931, 2673, 2674, 2668, 2667}], 
        Line3DBox[{273, 2565, 6905, 2566, 2554, 2553, 6917, 2601, 2955, 2757, 
         2863, 2544, 2543, 2515, 6895, 2516, 2947, 2750, 2856, 2529, 2445, 
         2923, 2728, 2835, 6951, 2446, 2513, 2440, 2922, 2727, 2834, 6950, 
         2405, 2404, 2409, 2918, 6959, 2722, 2800, 2932, 2457, 6874, 2375, 
         2373, 2849, 2744, 2941, 2475, 2437, 2436, 6878, 2447, 2400, 2398, 
         6867, 2399, 2348, 2347, 6863, 2319, 2317, 2334}], 
        Line3DBox[CompressedData["
1:eJwV0E0rRGEYxvF7vDQzXpJMeZmxUBZWdpYy2dtYTNRE2AobvofXKQ2lWFA+
AQuxNHwBu2l2lGIxyoz8zuLf/76u59yn85yJ9e3FrVRErKBmWOiJGEBrLGI3
G7GHbzTlL26hjVQ+os6PeMK8nRd+91yNz1HFh/zK92iY77iCExxjszfi2m6O
p7zzSHeDHflWP8JX8iXe7Je5hDl0Ozv1zLS9VfOsbo2rujQX5X7uw4XuExvm
M55M7sUd8rj9irlsHtaPYsl8oCs4a/NQcnfeR8nZoJzHn3yIZV1BfvaNM9yJ
ruQ8E/GgC3MW6eR/yU39D37xD+1yNdE=
         "]], 
        Line3DBox[{2663, 2649, 2648, 6925, 2651, 2665, 2664, 6930, 2639, 2628,
          2968, 2769, 2874, 2630, 2878, 2774, 2973, 2641, 6933, 455, 2990, 
         2809, 516}], 
        Line3DBox[{432, 2793, 2994, 2676, 2540, 6902, 2542, 2897, 2795, 2996, 
         2640, 2629, 2873, 2768, 2967, 2627, 2638, 6924, 2643, 2662, 2661}], 
        Line3DBox[CompressedData["
1:eJwVz80rRGEYhvFHSWdmimyosZlJspOyQ8reaspqokkpNqZ8ZCOJvb1siISU
lWQliymFjX/BinJ8W5CP3yyurvt+3uec95ziRLU00xARYzgUFrIRI8h2RDTz
fCZiEcNyxuxX/sYL7vCWj7jgbezgBKnZbX0niXjFg36lL+cizrynkw/0fdw7
q/GS2amzAr/zmlleLrjzWJ+VV8ymeU9v5VW9nY/0Ks/pU7yrt3CXZ8tmoxhC
o9mGs3Ee1G/cXZE3zZo4QSrneIsnud/eAK7t9nAv+tCNS7Nn//dldx0l+096
W/3b8Sif20k50Wvyj/yHT3zgH8BON14=
         "]], 
        Line3DBox[{2688, 2689, 2692, 2563, 6904, 2564, 2678, 2684, 2679, 6935,
          2569, 2567, 2573, 2589, 2581, 6910, 2580, 2505, 2504, 6897, 2522, 
         2585, 2608, 2502, 6886, 2495, 2496, 6923, 2494, 2392, 2394, 2439, 
         2441, 6888, 2408, 2379, 2380, 6866, 2388, 2292, 2291, 6865, 2381, 
         2376, 2370, 6864, 2353, 2907, 2710, 2817, 2354, 2490, 6883, 2489, 
         2935, 2739, 2846, 2797, 2356, 2997}], 
        Line3DBox[{521, 2695, 2694, 2682, 2681, 6937, 2685, 2595, 2594, 6934, 
         2591, 2582, 6911, 2583, 2587, 6915, 2586}], 
        Line3DBox[{520, 2645, 2598, 2539, 6901, 2541, 2896, 2794, 2995, 2657, 
         2658}], 
        Line3DBox[{614, 3433, 3434, 3432, 3015, 6968, 3021, 3020, 6967, 3012, 
         3013, 3025, 3024, 6970, 3031, 3078, 3079, 3065, 6978, 3064, 3050, 
         3048, 3037, 6972, 3039, 3029, 3030, 3044, 3057, 6975, 3059, 3093, 
         3090, 6985, 3081, 3080, 2998, 6964, 2999, 3106, 3107, 7019, 3167, 
         3163, 3115, 3113, 3218, 7016, 3225, 3354, 3236, 3186, 3188, 7051, 
         3312, 7044, 3196, 3195, 3299, 3265, 7032, 3264, 3316, 3318, 3324, 
         7078, 3419, 3321, 3320, 3422, 7080, 3263, 736}], 
        Line3DBox[{3052, 3053, 3040, 6973, 3041, 3033, 3035, 3070, 6979, 3068,
          3055, 3054, 3063, 3060, 6976, 3061, 3149, 3136, 6994, 3135, 3141, 
         3157, 3155, 7018, 3096, 3094, 3231, 3153, 6996, 3152, 3147, 3148, 
         7025, 3237, 3211, 7011, 3191, 3189, 3244, 3242, 7028, 3243, 3262, 
         7039, 3290, 3289, 3335, 7054, 3348, 3367, 802, 3378}], 
        Line3DBox[{3075, 3076, 3214, 7014, 3215, 3073, 3072, 6987, 3091, 3098,
          3103, 6988, 3006, 3007, 3110, 6989, 3102, 3101, 3130, 7020, 3166, 
         3164, 3116, 3114, 3219, 7058, 3221, 3220, 7017, 3227, 3336, 3313, 
         3247, 7029, 3229, 3230, 3308, 7042, 3309, 3317, 3301, 3295, 3297, 
         7077, 3415, 3420, 3414, 3292, 7036, 3291, 3428, 3425, 3424}], 
        Line3DBox[{3104, 3105, 3119, 6998, 3125, 3099, 3100, 7012, 3150, 3151,
          3168, 6999, 3108, 3109, 3228, 3304, 7041, 3305, 3306, 3307, 7046, 
         3287, 3288, 3300, 3296, 7038, 3298, 3416, 3423, 7081, 3426, 3427, 
         3429, 812}], 
        Line3DBox[{3123, 6991, 3124, 3154, 3175, 7001, 3173, 3169, 3134, 6993,
          3133, 3181, 3205, 7007, 3128, 3129, 3402, 3183, 7004, 3184, 3254, 
         3250, 7030, 3249, 3276, 3261, 3259, 7048, 3325, 3343, 3327, 7049, 
         3328, 3333, 3334, 7052, 3337, 3351, 3375, 3374}], 
        Line3DBox[{3138, 3139, 3201, 7006, 3203, 3405, 3411, 3395, 7069, 3252,
          3208, 3209, 7068, 3391, 3388, 3384, 7062, 3278, 3280, 3365, 7064, 
         3345, 3346, 3338, 3340, 7061, 3363, 3331, 773, 3376}], 
        Line3DBox[{3207, 3174, 3176, 3206, 7010, 3137, 3140, 3202, 3204, 7074,
          3407, 3408, 3394, 3253, 3212, 7013, 3213, 7072, 3251, 3248, 3275, 
         3260, 3258, 7065, 3385, 3279, 3277, 3342, 3344, 7053, 3347, 3339, 
         3341, 3349, 7055, 3350, 759}], 
        Line3DBox[{760, 3332, 3330, 3362, 7060, 3361, 3352, 3353, 7070, 3387, 
         3364, 3366, 3389, 7066, 3390, 3381, 3380, 7067, 3246, 3245, 3406, 
         7073, 3409, 3410, 3404, 3403}], 
        Line3DBox[{616, 3293, 7037, 3294, 3282, 3281, 7050, 3329, 3271, 3270, 
         3240, 7027, 3241, 3255, 3170, 7000, 3171, 3238, 3165, 6997, 3127, 
         3126, 3131, 6992, 3132, 3182, 7003, 3097, 3095, 3200, 3162, 3161, 
         7009, 3172, 3122, 3120, 6990, 3121, 3067, 3066, 6986, 3034, 3032, 
         3051}], 
        Line3DBox[{803, 3369, 3303, 7040, 3144, 3145, 3274, 7035, 3273, 3284, 
         3285, 7045, 3256, 3223, 3224, 3356, 3234, 7023, 3233, 3187, 3185, 
         7024, 3235, 3217, 7015, 3216, 3180, 3179, 3178, 7002, 3177, 3199, 
         3194, 3193, 7005, 3118, 3112, 3087, 6982, 3085, 3089, 3092, 3058, 
         3056, 6980, 3043, 3045, 6974, 3038, 3036, 3047, 3049, 6981, 3077, 
         3022, 3023, 3017, 6966, 3019, 3028, 3026, 6969, 3010, 3011, 3014}], 
        Line3DBox[{3398, 3383, 3382, 7063, 3386, 3400, 3399, 7071, 3371, 3358,
          3360, 3373, 7075, 798, 3401}], 
        Line3DBox[{775, 3412, 3267, 7034, 3269, 3372, 3359, 3357, 3370, 7059, 
         3377, 3397, 3396}], 
        Line3DBox[{769, 3413, 3368, 7057, 3302, 3143, 3146, 3355, 7056, 3286, 
         3283, 3272, 3257, 7031, 3222, 3190, 3192, 3210, 7026, 3239, 3004, 
         3005, 7022, 3232, 3198, 3197, 7021, 3226, 3159, 3160, 7008, 3156, 
         3158, 3142, 6995, 3117, 3111, 3086, 3084, 6984, 3088, 3082, 3083, 
         6983, 3069, 3071, 3074, 3062, 6977, 3003, 3002, 3042, 3046, 3000, 
         6965, 3001, 3027, 6971, 3016, 3018, 3009, 3008}], 
        Line3DBox[{822, 3431, 3430, 3418, 3417, 7079, 3421, 3323, 3322, 7076, 
         3319, 3310, 7043, 3311, 3315, 7047, 3314}], 
        Line3DBox[{821, 3379, 3326, 3266, 7033, 3268, 3392, 3393}], 
        Line3DBox[{832, 3870, 3871, 3869, 3452, 7086, 3458, 3457, 7085, 3449, 
         3450, 3462, 3461, 7088, 3468, 3515, 3516, 3502, 7096, 3501, 3487, 
         3485, 3474, 7090, 3476, 3466, 3467, 3481, 3494, 7093, 3496, 3530, 
         3527, 7103, 3518, 3517, 3435, 7082, 3436, 3543, 3544, 7137, 3604, 
         3600, 3552, 3550, 3655, 7134, 3662, 3791, 3673, 3623, 3625, 7169, 
         3749, 7162, 3633, 3632, 3736, 3702, 7150, 3701, 3753, 3755, 3761, 
         7196, 3856, 3758, 3757, 3859, 7198, 3700, 954}], 
        Line3DBox[{3489, 3490, 3477, 7091, 3478, 3470, 3472, 3507, 7097, 3505,
          3492, 3491, 3500, 3497, 7094, 3498, 3586, 3573, 7112, 3572, 3578, 
         3594, 3592, 7136, 3533, 3531, 3668, 3590, 7114, 3589, 3584, 3585, 
         7143, 3674, 3648, 7129, 3628, 3626, 3681, 3679, 7146, 3680, 3699, 
         7157, 3727, 3726, 3772, 7172, 3785, 3804, 1020, 3815}], 
        Line3DBox[{3512, 3513, 3651, 7132, 3652, 3510, 3509, 7105, 3528, 3535,
          3540, 7106, 3443, 3444, 3547, 7107, 3539, 3538, 3567, 7138, 3603, 
         3601, 3553, 3551, 3656, 7176, 3658, 3657, 7135, 3664, 3773, 3750, 
         3684, 7147, 3666, 3667, 3745, 7160, 3746, 3754, 3738, 3732, 3734, 
         7195, 3852, 3857, 3851, 3729, 7154, 3728, 3865, 3862, 3861}], 
        Line3DBox[{3541, 3542, 3556, 7116, 3562, 3536, 3537, 7130, 3587, 3588,
          3605, 7117, 3545, 3546, 3665, 3741, 7159, 3742, 3743, 3744, 7164, 
         3724, 3725, 3737, 3733, 7156, 3735, 3853, 3860, 7199, 3863, 3864, 
         3866, 1030}], 
        Line3DBox[{3560, 7109, 3561, 3591, 3612, 7119, 3610, 3606, 3571, 7111,
          3570, 3618, 3642, 7125, 3565, 3566, 3839, 3620, 7122, 3621, 3691, 
         3687, 7148, 3686, 3713, 3698, 3696, 7166, 3762, 3780, 3764, 7167, 
         3765, 3770, 3771, 7170, 3774, 3788, 3812, 3811}], 
        Line3DBox[{3575, 3576, 3638, 7124, 3640, 3842, 3848, 3832, 7187, 3689,
          3645, 3646, 7186, 3828, 3825, 3821, 7180, 3715, 3717, 3802, 7182, 
         3782, 3783, 3775, 3777, 7179, 3800, 3768, 991, 3813}], 
        Line3DBox[{3644, 3611, 3613, 3643, 7128, 3574, 3577, 3639, 3641, 7192,
          3844, 3845, 3831, 3690, 3649, 7131, 3650, 7190, 3688, 3685, 3712, 
         3697, 3695, 7183, 3822, 3716, 3714, 3779, 3781, 7171, 3784, 3776, 
         3778, 3786, 7173, 3787, 977}], 
        Line3DBox[{978, 3769, 3767, 3799, 7178, 3798, 3789, 3790, 7188, 3824, 
         3801, 3803, 3826, 7184, 3827, 3818, 3817, 7185, 3683, 3682, 3843, 
         7191, 3846, 3847, 3841, 3840}], 
        Line3DBox[{834, 3730, 7155, 3731, 3719, 3718, 7168, 3766, 3708, 3707, 
         3677, 7145, 3678, 3692, 3607, 7118, 3608, 3675, 3602, 7115, 3564, 
         3563, 3568, 7110, 3569, 3619, 7121, 3534, 3532, 3637, 3599, 3598, 
         7127, 3609, 3559, 3557, 7108, 3558, 3504, 3503, 7104, 3471, 3469, 
         3488}], 
        Line3DBox[{1021, 3806, 3740, 7158, 3581, 3582, 3711, 7153, 3710, 3721,
          3722, 7163, 3693, 3660, 3661, 3793, 3671, 7141, 3670, 3624, 3622, 
         7142, 3672, 3654, 7133, 3653, 3617, 3616, 3615, 7120, 3614, 3636, 
         3631, 3630, 7123, 3555, 3549, 3524, 7100, 3522, 3526, 3529, 3495, 
         3493, 7098, 3480, 3482, 7092, 3475, 3473, 3484, 3486, 7099, 3514, 
         3459, 3460, 3454, 7084, 3456, 3465, 3463, 7087, 3447, 3448, 3451}], 
        Line3DBox[{3835, 3820, 3819, 7181, 3823, 3837, 3836, 7189, 3808, 3795,
          3797, 3810, 7193, 1016, 3838}], 
        Line3DBox[{993, 3849, 3704, 7152, 3706, 3809, 3796, 3794, 3807, 7177, 
         3814, 3834, 3833}], 
        Line3DBox[{987, 3850, 3805, 7175, 3739, 3580, 3583, 3792, 7174, 3723, 
         3720, 3709, 3694, 7149, 3659, 3627, 3629, 3647, 7144, 3676, 3441, 
         3442, 7140, 3669, 3635, 3634, 7139, 3663, 3596, 3597, 7126, 3593, 
         3595, 3579, 7113, 3554, 3548, 3523, 3521, 7102, 3525, 3519, 3520, 
         7101, 3506, 3508, 3511, 3499, 7095, 3440, 3439, 3479, 3483, 3437, 
         7083, 3438, 3464, 7089, 3453, 3455, 3446, 3445}], 
        Line3DBox[{1040, 3868, 3867, 3855, 3854, 7197, 3858, 3760, 3759, 7194,
          3756, 3747, 7161, 3748, 3752, 7165, 3751}], 
        Line3DBox[{1039, 3816, 3763, 3703, 7151, 3705, 3829, 3830}], 
        Line3DBox[{1050, 4307, 4308, 4306, 3889, 7204, 3895, 3894, 7203, 3886,
          3887, 3899, 3898, 7206, 3905, 3952, 3953, 3939, 7214, 3938, 3924, 
         3922, 3911, 7208, 3913, 3903, 3904, 3918, 3931, 7211, 3933, 3967, 
         3964, 7221, 3955, 3954, 3872, 7200, 3873, 3980, 3981, 7255, 4041, 
         4037, 3989, 3987, 4092, 7252, 4099, 4228, 4110, 4060, 4062, 7287, 
         4186, 7280, 4070, 4069, 4173, 4139, 7268, 4138, 4190, 4192, 4198, 
         7314, 4293, 4195, 4194, 4296, 7316, 4137, 1172}], 
        Line3DBox[{3926, 3927, 3914, 7209, 3915, 3907, 3909, 3944, 7215, 3942,
          3929, 3928, 3937, 3934, 7212, 3935, 4023, 4010, 7230, 4009, 4015, 
         4031, 4029, 7254, 3970, 3968, 4105, 4027, 7232, 4026, 4021, 4022, 
         7261, 4111, 4085, 7247, 4065, 4063, 4118, 4116, 7264, 4117, 4136, 
         7275, 4164, 4163, 4209, 7290, 4222, 4241, 1238, 4252}], 
        Line3DBox[{3949, 3950, 4088, 7250, 4089, 3947, 3946, 7223, 3965, 3972,
          3977, 7224, 3880, 3881, 3984, 7225, 3976, 3975, 4004, 7256, 4040, 
         4038, 3990, 3988, 4093, 7294, 4095, 4094, 7253, 4101, 4210, 4187, 
         4121, 7265, 4103, 4104, 4182, 7278, 4183, 4191, 4175, 4169, 4171, 
         7313, 4289, 4294, 4288, 4166, 7272, 4165, 4302, 4299, 4298}], 
        Line3DBox[{3978, 3979, 3993, 7234, 3999, 3973, 3974, 7248, 4024, 4025,
          4042, 7235, 3982, 3983, 4102, 4178, 7277, 4179, 4180, 4181, 7282, 
         4161, 4162, 4174, 4170, 7274, 4172, 4290, 4297, 7317, 4300, 4301, 
         4303, 1248}], 
        Line3DBox[{3997, 7227, 3998, 4028, 4049, 7237, 4047, 4043, 4008, 7229,
          4007, 4055, 4079, 7243, 4002, 4003, 4276, 4057, 7240, 4058, 4128, 
         4124, 7266, 4123, 4150, 4135, 4133, 7284, 4199, 4217, 4201, 7285, 
         4202, 4207, 4208, 7288, 4211, 4225, 4249, 4248}], 
        Line3DBox[{4012, 4013, 4075, 7242, 4077, 4279, 4285, 4269, 7305, 4126,
          4082, 4083, 7304, 4265, 4262, 4258, 7298, 4152, 4154, 4239, 7300, 
         4219, 4220, 4212, 4214, 7297, 4237, 4205, 1209, 4250}], 
        Line3DBox[{4081, 4048, 4050, 4080, 7246, 4011, 4014, 4076, 4078, 7310,
          4281, 4282, 4268, 4127, 4086, 7249, 4087, 7308, 4125, 4122, 4149, 
         4134, 4132, 7301, 4259, 4153, 4151, 4216, 4218, 7289, 4221, 4213, 
         4215, 4223, 7291, 4224, 1195}], 
        Line3DBox[{1196, 4206, 4204, 4236, 7296, 4235, 4226, 4227, 7306, 4261,
          4238, 4240, 4263, 7302, 4264, 4255, 4254, 7303, 4120, 4119, 4280, 
         7309, 4283, 4284, 4278, 4277}], 
        Line3DBox[{1052, 4167, 7273, 4168, 4156, 4155, 7286, 4203, 4145, 4144,
          4114, 7263, 4115, 4129, 4044, 7236, 4045, 4112, 4039, 7233, 4001, 
         4000, 4005, 7228, 4006, 4056, 7239, 3971, 3969, 4074, 4036, 4035, 
         7245, 4046, 3996, 3994, 7226, 3995, 3941, 3940, 7222, 3908, 3906, 
         3925}], 
        Line3DBox[{1239, 4243, 4177, 7276, 4018, 4019, 4148, 7271, 4147, 4158,
          4159, 7281, 4130, 4097, 4098, 4230, 4108, 7259, 4107, 4061, 4059, 
         7260, 4109, 4091, 7251, 4090, 4054, 4053, 4052, 7238, 4051, 4073, 
         4068, 4067, 7241, 3992, 3986, 3961, 7218, 3959, 3963, 3966, 3932, 
         3930, 7216, 3917, 3919, 7210, 3912, 3910, 3921, 3923, 7217, 3951, 
         3896, 3897, 3891, 7202, 3893, 3902, 3900, 7205, 3884, 3885, 3888}], 
        Line3DBox[{4272, 4257, 4256, 7299, 4260, 4274, 4273, 7307, 4245, 4232,
          4234, 4247, 7311, 1234, 4275}], 
        Line3DBox[{1211, 4286, 4141, 7270, 4143, 4246, 4233, 4231, 4244, 7295,
          4251, 4271, 4270}], 
        Line3DBox[{1205, 4287, 4242, 7293, 4176, 4017, 4020, 4229, 7292, 4160,
          4157, 4146, 4131, 7267, 4096, 4064, 4066, 4084, 7262, 4113, 3878, 
         3879, 7258, 4106, 4072, 4071, 7257, 4100, 4033, 4034, 7244, 4030, 
         4032, 4016, 7231, 3991, 3985, 3960, 3958, 7220, 3962, 3956, 3957, 
         7219, 3943, 3945, 3948, 3936, 7213, 3877, 3876, 3916, 3920, 3874, 
         7201, 3875, 3901, 7207, 3890, 3892, 3883, 3882}], 
        Line3DBox[{1258, 4305, 4304, 4292, 4291, 7315, 4295, 4197, 4196, 7312,
          4193, 4184, 7279, 4185, 4189, 7283, 4188}], 
        Line3DBox[{1257, 4253, 4200, 4140, 7269, 4142, 4266, 4267}], 
        Line3DBox[CompressedData["
1:eJwV0csrpnEYxvHbeG2mKYdxLJKNFFaalJKFhbJRNsqOIqVMySFTZjYzZakI
9bKwGP+AkMLLRg5ZWJA1GjnNlEPULPi8i2/XfV3X/XueX89T0f21fSAjIn7g
KRGx8jliFUN5EX9yIuZKI27oNSrlw/I1Oiu/kF2iih+Vr9O/fFt+xD2t5Wvw
avebftP8KC/MjWgyT8nOaBH/EfXmO7sT8iNzMd7s79I+2QfP3aaZNEVfdCld
0plefgcJ3YO8Wj7Gb9ACfELCOw7orf19+kv/E/1YQItsnuakd1Buf9FuCW3k
J3Un6XvxJ94xozulNXyrfFF/RWv5QXrIZ7vPir0eWRe+oA7TWJYnaYm9JTrm
zLG5wJkRvpTPKnOn9DeUN8j/yfec+07H8VuXgWbdOb+DLf02fcQz/uNS1uEZ
r+YXdKb/ryxlHsiKeAfVgVC1
         "]], 
        Line3DBox[CompressedData["
1:eJwV0T9IlHEcx/HvmV3lIJd3nGAndAltolNEQ5NDJRyUFxiERHOchot/sFrq
iAjCLZHISbR/t4RgEM1xFBSYLdfQFHGpg4JHoK9n+PD5vt+/74/n4XmKt8ev
VVIR8VBSJyPaZD8T8SkbMdcV8acQMWhucbuSN1+QJ86+6k7753XT3mPujpTw
Eb5bD8lzrqFPcHVdxed0Gi+6d0xfl8vyj192vsNfNV/iSvKeG8M3k139Cldk
wnxgty+5b37B/dZF3JmL+Izv4iU8qes4w9/A2/h4b8QqVzaPcnln3/AMHsEj
egVv6TJe96xuO9+52eRdufv6Bz7FP8Xv7EzrFr/G39JTuKp/4TP23uIHeBMX
8Gv8wb0e8wZ3z9kb7pFu4CL/EQ/oJp7n2737T+6Z+S/X72wz+R96Dy8k31i/
1P/1Rf6LZ2STf2Tu4GtyFteO+n7caXxFD0suHXEIkfdMJA==
         "]], 
        Line3DBox[{4371, 4372, 4967, 4798, 5121, 4496, 7346, 4497, 4369, 4368,
          4934, 7407, 4763, 4384, 4388, 4393, 7331, 4317, 4318, 4400, 7332, 
         4392, 4391, 4419, 7350, 4452, 4450, 4406, 4404, 4501, 7377, 4503, 
         4502, 7348, 4509, 4615, 5021, 4857, 5179, 4592, 4529, 7356, 4511, 
         4512, 4587, 7366, 4588, 4596, 4580, 4574, 4576, 7395, 4691, 4696, 
         4690, 4571, 7362, 4570, 4704, 4701, 4700}], 
        Line3DBox[{4394, 4395, 4408, 7336, 4414, 4389, 4390, 7344, 4438, 4439,
          4454, 7337, 4398, 4399, 4510, 4583, 7365, 4584, 4585, 4586, 7369, 
         4566, 4567, 4579, 4575, 7363, 4577, 4692, 4699, 7399, 4702, 4703, 
         4705, 1466}], 
        Line3DBox[{4412, 7334, 4413, 4442, 4461, 7338, 4459, 4455, 4423, 7335,
          4422, 5109, 4785, 4954, 4465, 4487, 7340, 4417, 4418, 4678, 4467, 
         5110, 4787, 7410, 4956, 4468, 4536, 4532, 7357, 4531, 5159, 4836, 
         5004, 4556, 5170, 4848, 5013, 4541, 4997, 4829, 5152, 4539, 7371, 
         4849, 4604, 4622, 4606, 5014, 4850, 7435, 5171, 4607, 5173, 4852, 
         5016, 4612, 5017, 4853, 5175, 4613, 5181, 4859, 7414, 5023, 4616, 
         4630, 4653, 5035, 5036, 1554}], 
        Line3DBox[{4427, 4428, 4483, 7339, 4485, 4681, 4687, 4671, 7387, 4534,
          4490, 4491, 7386, 4667, 4664, 5197, 4872, 5038, 4660, 7381, 4558, 
         4560, 4644, 7383, 4624, 4625, 5191, 4869, 5033, 4617, 4619, 7380, 
         4642, 4610, 1427, 1555}], 
        Line3DBox[{4489, 4460, 4462, 4488, 7342, 4426, 4429, 4484, 4486, 7392,
          4683, 4684, 4670, 4535, 4494, 7345, 4495, 7390, 4533, 4530, 5158, 
         4835, 5003, 4555, 5169, 4847, 5012, 4540, 4996, 4828, 4719, 5039, 
         7431, 4661, 4559, 4557, 4621, 5196, 4871, 5037, 4623, 7373, 4626, 
         5192, 4870, 5034, 4618, 4620, 4628, 7375, 4629, 1413}], 
        Line3DBox[{1414, 4611, 4609, 4641, 7379, 4640, 4631, 4632, 7388, 4663,
          4643, 4645, 4665, 7384, 4666, 4657, 4656, 7385, 4528, 4527, 4682, 
         7391, 4685, 4686, 4680, 4679}], 
        Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/GvWIRy3KKc8mdgMUkdwxlO2chCGegsGFxZZXATo8lgok4i
lM1iJGUxGIhiwHJK3XUGlJfh0+f7fn9/v+fpeTpz+cnlmojISbUuYrc14rcl
IpOMeExE9OsS3uJrUxFP3I75i0vb3eJe/Y779JtO2g+ab9o9FA+Yy3qbv3J+
U7/gHv4Sv5oP9RpfcecOt9kdcd36GW/YneOCfsAd/AKu4FM8rX/cXeTWzfdc
ypkDPC9l7oSb0t/OjXDj5iJX0hmclQnzp/0+/2Ee5VZkxnzG1fsHCfOYdPF5
fc03eVcBz8msHHvGkh6WtBTxkG6UBtnD1Wb/1/1V9y/+vx2H3R8/hDyT
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D1IlWEYxvE78FDakKYOcjIIhEKHwholULCpIdsaGjKDMlEh/IAEU+eM
dBCDTDgWjQUOR22pTh82lYpBToaJVhgNUpgf/d7h4n9f/+e5eT+ONbZdbN0X
EU/keSrixOGIcyURecURT2W1KCJ3JOICNsgHeanP4rxUubtuZ9DdBf2UvqFv
ujPMHZVRfj+f45v1B/oEhtTxab4W9zDDTTjP2s9gDb/Fj/Fd+mWc1P9ghz7l
Xok7H7lu7jE3LCnuFXed23VniGuXtJ7v7IC8dV6Ab/Am3yLF8ky/hDv22uxc
M7/g9rBP38Fp/Sr26Fcwq//D2/ouFpRHzHBN5jKp5tcxw53Hcr0OR/QvOOZZ
S5jm65P/hqs47vyRrJgPybJ8lZTzZv6TeRAf2p8z303eo9DzzL3m17it5/CO
/t290+a/3Mnk/bmDyT/S3+M7GeDOYD/ekHnzhr1Sz1ww3+Nq8Ied49ipZ/Gn
fhbv659xCBexCdfsrzmf1n9jJXbzM/hLH3W+jBX6LX4y+U79m/wHwrdrWw==

         "]], 
        Line3DBox[{4674, 4659, 4658, 7382, 4662, 4676, 4675, 7389, 4650, 4637,
          4639, 4652, 7393, 1452, 4677}], 
        Line3DBox[{1429, 4688, 4547, 7360, 4549, 4651, 4638, 4636, 4649, 7378,
          4654, 4673, 4672}], 
        Line3DBox[CompressedData["
1:eJwV0T9IlVEYx/FHI0nMymuDhCIaEkmLg0i0GNYUId7BRUoQKhq0P6SCiCVB
gxguFiJBcRG1qCEFo6AhJQoikzDKNJRAEqfMoT+U9HmHH9/z/Z3nHM57b1nL
hXRbVkQ8kIHtEbmFEQ2piANyfG/ENj4mOSURqwUR9ZKWY/ay9aOyz+xcccQH
/SH9Oh/Qv+c3cY1X6l/zCvzK+/TPeLZ7r1sv6krtDelycIaf15dIl65fssx2
83l7RWbu6zJ8i9fyxT0Rk/wy349LPJzpsJ7VpcxknCnEd7xTf4234FP+F6/y
J76lwMxb3RVdu9zR5yXfoNuJr7BV35Z8vzziP/C0ubO46Y7nujDbpNvQPeSN
eIo34xT/hb8lJeM8jX+crTFz0npEt45VfA0z/AQW86N4m+/CYVzBe84uYytf
Td5mrhYH+QLewnz8InfN5tufte7TH8bdfA77+ZHkXbwOh/gS7uBv8AavTt7u
js9+53LrS7oJXOBV2JP8pzgtL+Qc75WX1v/MfJSfzpfxi/rH+En3XYb137BC
d8beQVzhy/If3UllNw==
         "]], 
        Line3DBox[{1560, 4707, 4706, 4694, 4693, 7397, 4697, 4602, 4601, 7394,
          4598, 4589, 7367, 4590, 4594, 7370, 4593}], 
        Line3DBox[{1558, 4655, 4605, 4546, 7359, 4548, 4668, 
         4669}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJyM2wk01dv7P3CpKCUqSRKaB4QUKjwJFUXRJJWh0ZCKIiVCpZKMkcgsKvM8
e0yZx3PM88w5zkAqUep/vif3nvu7a7Xu/67WeuV9d/uzP/vskVp74YbOZXY2
NrZFa9jY5jJUe5jA5rKRBr/Ng0enRaM5VjWAgECzg4jLEP42bdahP+ZzXqtW
SnwbmDUFVhRQtzpzjsD//XNp8O96Vv6rHnmOc7XbVBPwtw7IqXZtUpJOB/5/
lV81W17bhfcyB1sXajGNw6ISHRPNnZQ/tlNpW9rFniv9qMg0GZ+OhUZ0nSD9
XX7Vv8pXiYu9dNtHwBqmYYgFyhbnImnQuV+LO3ndAHYwTUH/8GUD+/JG/vhc
wX/lK2fzXQEUj9j1/biTaTKmy3zb7POUBInflh+Vde/FJKaJeFXurLPxezLk
tRrrFxd3YA7TGBy//jVS/gkFDsfo3XlzvxWPMH2PXKdqF5w4SoVXp22WY0EJ
ujP1RbHDsbE3bOlwkj7jMDrUhyeYJqFiikX1xTQS7Fo8lTf6rRmkmUaBVm/k
XWooFaR+ReRtjSCiONNw5EWJFN3rNPC5dnnf3Qcf4TVTHyDPhMpUP6P/3Q/8
/+oHLh8Ol2e2+biEqQc2+/luyMqiw8wTjm1PNjzH357FUJlUmuovOqyy7tWO
bE6EtUwdgWe5iHHxKB32qWjK+Xm8xWNMrbBoSQY58BsdrJLdtIe2Z83qApIr
M4fON9Ah5kyVpXZVCSQw9YWz95ddmLhHB3uj8/IKZq342/d4wi3l1ZbjVHhy
44r++DQBfxuG4+RiE49ntL/HIf+/xuHNp4crB3X70IJpEp63Ei7jFib/cTws
p9u6tu/vRT6miegCHBc72snw+EHopw36/fjbZBRp8RCJOkuCZ1la7SaXCfjb
MLw9JP2hKIQGhjsK5ygUFuB5pp54NvbXmyfxdPgy0MwhNx6PKwb/5wMsHRwd
rGDMo2Shn4NzJHshiWkiPFfReFsy8ud2rnfyORkz0oe/TULH1x7+fKkkeKKf
kxh7ug1/+wEbP3EG/lhDBd3jSY7Ow02oxzQS9bhlOMJbqGCTE73tQi4BrZmG
YZt0+kZZbxrQ3geLkRf3IZ1pEnbvbsh8c5wMVKNGVRnzZqQxjcKO2KQrkEeF
3WfqY2pzCSDLNAyqDUsENzLqEd07ospV2T9rMmiVPtGOn08CxR+t1Tv142d9
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
cpEthVOsz+uwdvkREclW1LafuC1o9o/xzyF3eVdoPUZ5OnTyFLGee/XWpwUq
wjlo+t397o0aVv3vxV2ijHpL8Ja0sjTPfVZetXx5utFQAfpNS8U6xLNyrdGw
+a4CcficI7+ucZyVN6o6x+Z9jQH/TrvE3k+svPbJwY1rC1zh7PPN6tL/mC9n
ty/WXtoejaLWCbTOCVbOMS+t75RlGUiPPWiVMWHlNEHniVolT9y7zMu76Scr
P8ElczdpeyZqdJZ1q7awcqXFOYRPCzNBSLGvNOMfuXdyO2fVSCFca7D/sCaS
lffynq1tP1AC+XWLLL47sXLO3KM9FVvSQC33dsS+Xlb+o13uhC53E7z9FfHp
NBern1c2HcqcRiJk2cqskbzJyj9wVm98EZAODku/N6/sZNXj6jQz8W17Idj4
TSiOxrDyy6WHPtxZWgOHlLLDiwVZ+fYRp1HVE4WQ2qV6wDv6v8/nWQnWwebT
FbB0y8Yl0wdZ5aVkTz+5bNcIfGk+OkYbWO3UfTZsFVBfA8d+JT6cw8Mqr164
apy2uA4mBbc93THNKu8UFv5xNydCOHT+9C9ilTc5ttFByKoUWp1dl6lYsfKH
M3yduYERcNFpRubsFCvPH+29ucQxBJpEF4nn/WMfWc6zibDUIRNyJTSalZtZ
+XPzNXpv8+LBrk1dVnGMlfffObctuzsfzFuHrzhmsHKzT45vSzcx+oGrsEXm
OCtfd23hkhpyLXTr9d5SmGG91zWJZ/q2YVWwzKLrs5EUq/x9veXosScPZJpO
yieUsHKFbQL+FQblcG5C9cO186zc2Zy687F4NXS1vha8sOUf+yPO13leQIBC
9szgY36s59o0HS0eX9MAcbwryGWGrHyfypGNpqvD8b7R922Hp1n1PI25mPSi
qwH4hToj9u5jlT+34IHO+/Y68FTeHZDURfvPcfLHe9zX8JuqHC0wKVW6Z/Qd
a51JbO92cXqXj6lfGnVPZLHa07bn0nLPne9QbaOJQPNXVu4usXXvRV9/0N44
80NhhpV3+b18veQcEebeNdKRc2C1c0778R8PPzSCscWlZZpCrJxSIyCVy9UK
g4TU7Z2WrPacHnEpgJcEWH0UAuSD//t93/O8SHBNLEO9Y8f9hK6w2mORedbp
pE89mLbvLS8sZtVT7HuP6HW4FYrsin1/XWI9N5kqqur4qw1MRI7mXZvLylf6
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
ryuWD8PrTr3VSdM8uxDtGlnmz0bS68sv3tzLs5eTtqlTmd2woWexTbyTidaY
aQ2+3D0CM18Tv37nG4CcZUumXe4x0EyS8LF9s2Nwef17R/RgCJxmns+XFJFh
jPTqc2jZGJg4yplbWJHgvOhQ0y9eu7DW/VbU4s2r/6RX9pQ8FY5mAMFL9hDN
CAMNdyfur73CG9eW5R5eiXRENnJ0kfLHweWcTic4OgLsJx5lCj6DKI5+fefb
6xRYya97J+wjGeqOmC9jh1HRFX0+rw/HCPBhWwnm5dUxMOB6ZTwfJvNcNIIu
XYgIS71Wpbhp4mFO7RlmxSALbd/ae1Xy8TB86MxXs37VA59EFMKDROlw6H6b
h830MHDDdDmqiXiIE3l2bkiAjtYsMdu35/IYFBJjcyIccGA1J/rQVoUJfQLB
N1wneuCsT9rswMNxSH/9bS47lI4O2K3ctHbDOOg/rEox6cbCnfOFObIdVGSo
7jCWqYYHfEz+4Kb141AzRGLK1rFROFEhPz6sH1ozzV9tneuGh6Rfmr62DLRk
87ZCLfdROClYKglFWGD0iq3/osxEJw1Fd16NxcK3z5gw4cvDMFmsxMLNM1GV
x2DIxfVYsGhm5+58MAAXuCU1CiwmmkgRUcitHYI9N5XmVijxWOF2SuwpC+1k
iTsv8RyCbebXxIaj+qFq/NWk1w8WUixSOXFBdBAEnuPwm9v6oPm7CF6siYmI
3wQi72OxEMtmRV99MgDyxlsCO1ayUVCS28rg74Mg5vVVZJ9LL6S937d94hUb
RUXckTzmNABe4S64HQd6IE2rqGvtIh1tzPCaDn41Ai+LJIrnuaMgj2nr6W2j
o9jPja8ba7Hw4OdPqfQLOHjMFN6rKMJCX+WIuHraIIQaRrRfshsCzmvBC+eu
s1HRx2NHA071QwOt4dU1gz5wObxD4PxxFloj/cBC5u0AsCofSCglDcFz/R+l
+hdpCJ8Q8gKLGYHPQ9555uN4mN6ttMd6kok+GYk19WUNwuH89vurdw9DvKF7
fhWeiX6K01sJj0Zg3mohIkW5H4oNhPQkDrHRy5kBmzP6Q1At2f8cz+uvOr5T
0jsZbMT5UnKg+d4ACBZYXYp16wLjgC1EMwILoZSRpRz8EMQfOX6RrdgLe+y9
vFWr+2Dd9oXXPi/JsLpv1XcxdSrgS69r7zOgQ+LFpIcrTLDAkkvc3aqEh4CB
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
0wyvDT+e0mHiabFu6s9K3LYuQSV1CRV4mtTE3WsZsPPrmqy4mCY4KbvbzbVN
kO/7DNfJP2SA2dz1bVYnyxHWMGTJWhQ4t2xvBkuUCbdUa802rXkDqes5hjk3
hqHScIrHpnrBvPVOvSfCrxFoqsr7KQdpcK/c+sNbr2G4JmfbdjeuBBOtq67u
DqVASIoRLZXHAApz27Nt1VSodrTZc2lLLyxTtbL6vJ4KQZfjklP0hrEkYa7j
yjkkeM80snlgK+hTiVNVrmwU7LtNlPSro1TwbZ52zSOdDvNnDz/VO0zCkiSp
M1WCvNN1mS3VdZMKiWUuoxY+jfhd9PnMSgMaxHz7GX302TC8Cw/cHz2Uhgpv
L83brkUDxTcRE/YddMFcXBHtOZUMVltnNfnMH4Ru+yIJCUF/OtyzOpY9sxeS
GnUPas0nQ5efq/2u5GHYc8vrylfowOdWcyMjBV9XesN8prs4DQ7+GKvO6yfh
crLBMVM5Ctxffz6+24ICIltaPPn+Q7ir//Tct1so0FHs+H6NoEeoJOU1fnk8
ACtmrnnwImIIVtzxMdgryJNTT1atCtbKgmaVCQk3cxrE3+yvPJ1CB+luSqbN
CcH+TFSdso3TD23Xfp6f5UWHs7VFRS4Zgn2glqJ/Sq0bzJ6/15/WK/g5+27R
1lcNgYi30ieX9UOwOTFrYeJRKpDW9IxYjZTj6t83RkbCh4XHNBhUfmZTKzMI
zm8uatyoIgNLLpXbl0cFhZ8HY1mruGiWp/7vel87xKxpN5oeVQ873khf2BfB
A9qzdd7fLEpBmyU39PxE0/98vv0r1HWer0gLVs5jxZqL1EFjf8DhPcNcEHfL
6Hj3pB317/xZqBFZBX+vKFWTHnL/5/NhBbnbg+u/18BuH5LvNr0GaNxXsEfN
nAf9MkmNnWb1gvujlIi/RC2Uxn8M+XSRB0/WPqmXbvGH/ETJaynrusE24cPq
CVvu/3yuW3w24kD9aC+USw81qXm3wJHb3y9sAjZwpJ4dzqBlwAZehHGxII+k
urcfnxoimN8PfNe36GkC05G932Ta20FGRO/eIRLnfz53Kj3yqPeSfAcaaetv
aSukgY5GJ+lMDhXMzU9TDeybIHJY2rr3MA16fd5fabMbhhMrHn21ud0DpicS
02yzKVAW4VuSeJMGDi7DrptzuuHRp0XTI0sK4KGouFy/LBfux1qe/1jZh86E
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
4tFYF9dlOWRO3+8wSTkaqnBbvFyBBxddrdtpD0uI8bOMyQW6VMiEzyANu3iQ
DM6Xb1rVSAaDRb7OFXShUMnB4aKAi+zrhaW3HTPgcqncXmG0E/f3ry5Qledj
qHSO6uTkPPws2ZNtKsyttKcl7JjoHqw/+nJm9rZ2MkK3Vnn7hoozT58ekvjB
AjOszKDKuZHMvX93WGoGHfofUp0tT7CxpWm2+PcLnXh0fuar+QdaEf+0dOaC
q1xY2xGH0C8s8vtNXEzawzakZR/ZZ99HhcapR303jGjEw+XLYlPLToz0zrCS
fs/E54uKjQOxDBJ7MCGf/r0LV454it1n0nA9XG9W5AQ6cs/73ry1Vbie/daJ
Vy9lYWW4eCCvqIn8NPEQGMh2YUVYgn1fExfjRb1HZW0SIR0/zyPEvhOdrdo1
Zkf5SGRvO3Js6DEKUgb3R56ko8Gcybt/gwurhVJOo0vbsWQF997MtmZs0UbK
nIs8XOvZuitpewXy3txRoSpR4Fi3PaEujYetGS3bO707UHZjnW/1xhZo7I/4
vnWQi1MO32WWX29F//bqs7+3N0Pn+J0T4oPCPkmDKtu5oBO9LuHn9D60wEvn
mZFXPBfNxTfUuf05iPgS3fnJuQvhP41e72b3gJ1zJ8blGBt7pVzqvTd8BKO6
3kc1kIn9tuuU1Y90I/O6K/uNTSmSrG4rPtboAeWB+gn5Od14VUp3mP65BBF2
01mGRj2IDv6kmCjsQ9Zaa1l1yXyG+z0XmWnCPuTitPyK2s/C57BJzXHpoVZk
z/SSUjVnY/yc/m3s3FY4RvlevjaeCvl36rWebWzYS12feN+VCdVgm8J3C9vA
s1vhoFsmfB71VdV3RIXX13iou2J6K07fp6qaJXOwRbJrs+IZCirS4u+FDLRg
wGmbuoMbB0t7J6xQ+VqAM6/dW47od8PNsXTOLIcenJB+/MFDvQjf92hdOXup
GzeVXGZanO6Bl5uIcsg0OtnXMm9jo0UHZM2sF+y0Y6Js5eSTPgk1ZJVhl0zz
OQoer2roTljDw5X9HtFrUlkwbgjSjDpYi5O6ez0T6hnYYrNyS0V3Odlp4jpD
m04BbU220afdPPjuqtm8P6AE5ywXiC8c7MYml1VHzKR74DbDmT99Qh2qN/Mv
lQnzpFavYKdHLxe9jVONpgrPS5f8avuNByi4HnuCmiC8DpXfKx64lYaosvHR
34+3YbVY+LBTHgute2arP0nl4HzhDfWsp3XgFbp/uCFDw0/NxQYeCvlEJvBN
RGoRFY+q9XfUb+IhaMB5leXSVJL840pqjQsNtvuOd5tM4MFjNGpPFGlCJWPK
heI8CiR+Gaz2KeYg1Wu7qM6WWuJ9ovD32akMZAT91ll+iQ0WTZOxQOkTTI+l
a9f10HFD3tb0Rx4Ho2snn5EwCyNtcikHRltpEP20e/f+Bi68Xl1b49yXjuQq
gdHoJzoefM1qmDWNi/nUXSYytc3E3MLwjvoDGvw3DJ0JU2dj516/DNkv9eSr
SKrsWis6tnRNjNx+no2h9c+7pJXakbP3buybeVQ47X4waZ5wXQlkP4+rSWCR
GYZFQduudWPNBYavxRoK6sMg0qNLJdcaZsu8U6OB4lifadVEh7Zg8bOFsgUY
MD718MICBtwMv2efteFg3u6qhBeuCXg6ZYNNXwgdXZH0cyPruHD48HHI2qqO
nBuI2RJM6NjrKSjZassGZ8fZYz6p5WT8gYKhkjQGqvYUJfebsaGjr//41txO
/GxQ//N6HBWOfzYFpFBYcJjSoJsznk2mO3hPtfHvwut751e7LqNgj4OYpuJq
GpHfWj0Qc5KKk2VKixnldKyU2D3jrUYN6a47kuuxnwGN0Omjt0zYaP6t+/Pr
lkLCl7JQDjjJxN59IQ8ttdm4tNBU8rR6PgnZR8mY4MTEqoEG2bXCcdn+TAvF
tV1wKBNJUpWk4tsxD336dRZuscxyNlYwccGb5M5vbQN33ZWR/ep0OFpuFPHa
3A0dhweNiXOoGDjpvPCPDAsx5UnVXJdSJNeaehw4zUCB7oaeXA4bw4EbcX5d
MvmVphgiJjwP9aV3P3ATZWPCejL5j2QxNta/d3UEA4zzmwz2LuNA69OxljO+
TATWVX9vetyGq18rKmIeCd83YZvHOi6L3Go7c1KhsgujZWsu/lal4Ee5rJjK
KypJ6J2gspBORZhp4w+lFjr2RzxYPj+aQj5Erg1eE0nDVYPrIXOG6aBKG3NO
ne4i9mlZtwTedGjKDWUuFt6/DzPrx4ewikmDwCstajYTR+ySvuiYspGx3MHE
NbKDvM/xKLvyi449CsbDh5wZaDKpOnUS7cT88Iuo2+cYeHCPb6vxiIENNi1y
zqnliDuqSKwcGCg7Rxv1fym8/6qW9FyNHPJiuWqxVhETjSbx3Ler2Sg2ua3p
2SDcH6tVX1XOqkfP5GXHrpZRsT97o/JEYY4pERkfmWBbDukk9Sp53w6ITCra
4fKejrnqTeISim0wqX4ep+LDBNdJjPv8Tisx8o0Pj+5iIHEg/mhCKAPzrho9
2r6nGvbhE0xfBzBQOKATN6LBRs+FlVomaSFEpObwxpXnWCgPkNmFVhacS+J+
fpNrxMEATqF2EgVFeqKSh1dx8eCB5PGlBQzhvm25kiLRhtDCfUmBjxlgq82X
zZVjYo3nq10BMm24895xJkOVgW1pOuZLzbiYEjbt7f2Yeqx0EWmoqabgeYGf
RO0ABUoZ/csZv4V1zP9istYyJtI3WqdqTqTBfesn6ttBCiZOSgx/L3wubT03
YjfVsVFX2vV2+FQbOr5WT4qqoaBR6fiM6K9sMnv1+Tb3G93YJ5Dji7h24JfH
3sjeFjr5/Hh5WKc8DeOs9/RHG1Nx74lhD8YzCdPCf0WABhXL/rS9keYJ89/Q
nSvlN7kk8kXvh52Z7ZiJOO9tP9og0anbdNKDhm0rr01x7aHgiUWJQQaFjmbe
joftB2qhrc7yXBPBAMefMiu6kwWz22KcI5IZqNyw8uTr67WYw7CeuC+mDyk2
N6oKDtLwsnK8eeZD4XPcMPPFl0Nc9JkZR7/ZVEYSaNuOzJ7YAotO+YPVvXwU
zAhwzXqTRazrioKe2LVhx/c3zj+FfXWH/mOfPpowv93X6Nq9pBF33PpSzYR9
Y//Fjq3W1XQM2hQmLvxUiYKhPIWL4zmYnCBtNqWRRljPnpX7N3WgMsvNQ9VZ
uK9OzN+/9HAItC9+836m3ol3Nr+sPa/xYXoh7Ue9JgWHP+aRjX4t+ASZgtmJ
HBzTrVjrW1NE+OvOTP0MJnZV0JP5+9kYPPdpV9xuGopCX5KrVuVoNThFVz/J
RYDMNSPzfXQSu6js5trABtSPmkl1nBL2aZ1Zw5emU4ljMG33QHoznHpTvYRZ
EReORd5QYXeiw3xtusblYgQwbflTsnvQczlzkvyyFpzsVlU+86kJHXOdFm04
1YO1MayBV5Pz8UVhnNTaCd3wYWZr1r3pwa432waKhyk4ZiJ+2aquBdvCI5w9
F3NQ6fhjysAnDpqaLyrV+tVB3vGJXZIoDR+kW2wsVVvxdcpLu6gKChbr+3b5
K3FgV2PqpviECVZK6pLdwnU+ocqM/zOdjnOd21K88lqIvIThl/TkOvgNGAoP
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
kVCyc8wrZN/xnXfNfgmwIXTZ0c5bn6A5pi+Od5jqpBcKIBdq+qUoruqfIQib
MfGym4QACkvyFzdUU4nimMlE4/2Lxzmuwr5upbX+B5dCVIwZCIXyHyJZgQJs
stipNtenDuvHfItOoh6VGNSH2Lym7aaXosizMa+T8i5Jts53AW5yS18N3KeR
v6aQtxmn90r85OJLQIrvSj0W6R8zg1xZ6WR4Rni+qE5dV+R5uAMrx4yDrNys
24lhfAz4nvoUZ52PoTEfo3+z9bKDMQIIVtTmRqp+Ij1j+pJT831XDBcJ0ODn
Kv89oo789S2ZdXw4uOXp/15votGDJ2/8yCdTx3xMxM2MuJLhAsxYZxna1dhM
po8ZRYxP5jnPj+nF2d9pHlln8sjpMf0J8RP5OpgiQGiE60fZAhp5O2YKSQ42
rRqu4aI5Jm6ZxJSqf4Ygeqfn40Zpwf+bz9z/ms+cR8pKFiVNRHrMSOK72GoR
pasXk2raS71PCs+dMTPIqHZN//RM4fp0Nsyb8ZFB/ppGbkWkulzcwsGtZzfj
b5qziMeYGaS6Wl5/biIL2S8e5rheY5K/phPuQIn9oqdsrLedOOn+aBHZPOYT
ImbkdVj7jgCTFx4yKF1NI39NIbqv7mmqbeFB4UjzWc/ldPLXVFIX4xUgd0fY
b/zY/M5K2N9WjZkEpf6woM9yPZjxHIvdpRsgNmY4fPQuXlhn/L+fyznJROtU
Kxb5awaZJxBzaI/+z/eetZ8NHqb8MwmR/ZtMja70oH9PiSPdgP3P9wiTNMyt
zGAi3ku/x1OkG3FjJsLKddy5EV4Pzrd5lfD0mLgwZjqObf3RfyWLjSqRpQYi
JxpRMWYErgUZPJ6n2If1agrVqZWtWDdmDOT3mQTt29aL+f81f+l/81+glcu2
3CisA2NmkPE8/Q/8DhbCgzprWBW1CBszFFfDVw4Gv++D3QKVWOvcNtiOGYtz
LLfMlMm9UP8Y13vQmoH1Y6ZBI111a4MbBx3xh+aXTWknf31HVO9djpMb5MPf
QfzVoD2N/DWFFAxO1+sX4YH9LrNwuyYNnDFT4DL+V+qvNTzQ/YYvBgrPU8aY
aXjxjBV5di0HUb7OgQ7fP5P4MV+Q9MnrWocNhPvCSL77ViMLM8fMwATVKaL3
t7LQVf6AwyquI399S9ReHfHM8u+D2eMzNUtfJJGzY7oTjSDHgzf7BPhoUf7w
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
KrYF3jHwqyKWPVb1FQ5s9HJFR5Qed8N29bRtr+JLSCozfhpX2CfPT/wz78Iw
mxgWuBnq/axFjeUmH2l1OtpO2bpKcNnE1HP2orK+Wiw9NGkZRZuOk9enWls7
FhBR9QeKSzbEw+qUQpB8gABbprrO3b2nG5eKOmtS7UuIJV9Bs3N/DzJjdAeq
beKww03j+wLDJyTyfIluYL8ACYPvAv/MpsLzy3iTP68+k4W+xw5P3M/DYV3D
1/QvDXD5OmJjdJGQzqfqE71+9SLJXr0hcHsdmbxaT7P7TDZqtNU25Tv1gUXL
XTDNkktUYmukPGfUY5bp0lWLv1EQvf7seeX9XKLJKX14argOJ7ecUHZVpmJL
uvVPdtdnIthb92vVhVRMnfIrpUtTgDDfTud75eHINKrQ0F/rR+41HJu7b1iA
yaL+l397teFuyaWG38wC0uDBNTVO5sPJ0ybntxaNpH6OmP/bvByiIulxJae4
yJyrNblyHZdIHPpa8IJdh/uqA7R2XSqkZ4j+1A2vJWFzZ1y/6pCFt1Xd9wYC
+3Dyu/8+QXEeGf+tTXA+NhYn9iRSzkYI5zOtPvKSdStx2rPIVXJWAeQiWs4M
/OBDZeqqfI0JtSi8rxV25PYHsqnu9RKZxD6oaPmbi9myiMlXlYfa9TUw8f69
XHcDE7yXU0/LCXPHl7S7e1ooNTjUeW6WhRwTOZNolRMWdRG/2xfnezwtxpfZ
1Tc2x/Ygvpk7T2e4iRSeta3fsDkPTVumrN7v24s9il/H74hngL2ux4M6sZrU
NL6SKVjGxgQp0Wm+LyiYtGiGuBGrlDQ/1xvpCuMh2k73+a9HVIy8szNzPF5G
5uxVu2bN58Lbs7G4Y2sdSnS2r9hvnE1susZ/MHPugxQvkXlnJ4Us7PY6VmJa
irR0Z+V6Cu//V3/+77Wq54w3KfpsEhYuNjzZuRZKYgUh7AUMDDTLpj662Izv
oUaeKn55ZLuIYgTbvhej6358vVpfRbLYm4eeLnqP02v17pnz+6B+yVu9vL+S
yB+KPH/sWgasnvrLrhnpw9xg3hcrw2giO5g48EjzMaL1l1+0GxRguUK5t6sE
lWxLXaO3NfAznH3s9jcc4MHbNasi7zGLKHc9OC7ZV4O2P7s6OaJMyJ6u/S5x
iU5UJLK+SSlUImSo34hySnhe2/x+IHBlk6X1v6OvhtRinLrmaG0HHZ88J+aY
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
kSy8/Oy95jdY/pQ7zrSks9jzkK1r97loMuKbU4mmRP/lbh+1U17tIaIPKWTp
0Mi/9qzUqe4OUSQitPPim5ZPf3nAo2CV1UpEZDNcF1wS9pcf614SXFIgImO2
bIvnEX/5OSOOxkDaOJrjnEZZWn/9XLjxed3EASLabs5PbWLR42QRNt80NYq2
GPKqxsv8PZdPFbdwObb+vU7y3kmW9deM99TGY36IbzlJecLihyDPLA8fzM8a
D7ZQP7H4+dmsyIYO7FwSHoHXYlnO1bHpl7NJ5CD68nE57CLLPSWVS1zgjRhE
FmlrBpJZuOs6/uIqbP2oxxyXJgv/JkkVSCpF6Nnhg93VLPfxw5PDdvplCJGF
d1sgFt7RZfTxd/Ager/RYmZ/zF89v0ti5JVdu9Grt+KvvX/9/XznvFNjp9E/
XPvKnZss/JGpvn7y9CgKuilns4XFb3dmZM6tw/yToyNgN8ziHzF1Of2Y+93o
hY4vF/vvv3qcFe47iz3sRq4F5XKFLPqlDkprV35HKMSQx2JN+V/7ndqz8v25
WxFbDanNe91frq46Nq78uwVNPN7Nl7z+L39Cu68+faMbPT1c08T256/+pW+v
DQ9gfiiQG1KyZvHD/aNGbHyYP0vun9KqY/Fbf537vB62r/1R91O+LPv2fcav
GVvbivw7dd8EsHA9OQ9ZoVWtSCpR+e4SC5c59D3kE+bPtxnD5+6wnHdFK658
HVa37Xh09+2J/muPk7J7iUM+Qk9/WHQOs9ijL7jl1W7nbnTGZ6WJc+6vnpN9
WWmyhQjZ1R4m9bCs73v25XQD36NS3Mo///7y++G3S+3x06Vap8b/iwvZ0qQf
3u1Gwlz4nuss8VqXnTeOx7jopau951i4KfXPUlQxQrcP5C41s+y76UxUfUcJ
QhnRAkr1LNyU3SlfW6xHcxNt6b/29dVguyk034LmY54oP2GJ4xdpe3I4eyvi
d0mf4WDhpjujgtawtaL+h/lnJFn4xsEZdiWeVrSs2f/ZncX/oRXlAYewe1TN
1WV8heUeWZWOmBtgcbQ/uOngJ5b1XMihTvNON5I8YH4+juW87Z9vuPA96EYX
X1KsGSxxZJxzIGktt6DyvQW3NVjsufj4Rm1vHkJdnsEieBY/ENf6694XIKF4
4b0nl4X/1u2M1NN1MxhXMyajdyx8IL/3QiI/CXE1a8Sni/zlw+e9rxaubkWJ
Ots3EVnsV+t/0ZyL+WfWUf3YRhZ79rmuPTDI2YoC1gdzZLCsD9/Oi5PB6oaz
kwOdtW4UnMrqBOxefOPme1rLwk87CVoD1g+Y18U9GWDhJcMbag/RfmoO/KD/
V3zj2T+36NCJmhNNf/6LH1Py0X+KEGTwvnpewaJnmuOJTFsBAqWvWw/1sfB9
lOmdVWkI2u1yLrGz1Ie+R9kvLMb54aA2YZlV/wf3UQPepJ+aH54y/mtfzjZ+
qZCt85oi5rj/4ntyrb9QixDoHcnubmPZ96RdvX5VMQK+4ghH1jyXXJDa1oLZ
LxeufLychUtTog2uYnaKvTUlr2Kxk2en7/UzD7shoWDdoXSW/MmOfiL5zLUb
UuxfnnzIwrfabi97g83/Ox6FMj+w5OGFH69qTe93Q0yljgIfCz9vTyqI524F
5WsUZy+W+I68j1IQX26Bdk+J/sMs+eBldyyUDzvX7Z4FTdbzihOvqGRwtkKT
NzEri0UP9XWmRQ9XK9w05z4Xw8KDNYtO7ljbCks6xXafWbgVBz/zJGYPe6AZ
L2v9lM9gVL3PQXCYJ28njWXfLFd7ysq9brheJ6WzleVc4lW7tW86doOAzphb
IUvdS7CKXLsL88+fZHaNBJb1dPeu/itsrSCtaxcpynLemPKyBe3b3ZCVe0L6
AIue0VrLsugSLO5m0gus9ernmRcVChhfSqbWNLLw28nuR/XVh0r/JC7+V/6w
Rd/S2UxdLB2raPwvrqmVwpGH+bn9WkIMa/6s1dqj8IynFU49PNvwgMU/PuM+
y0MYv/7bmunMwvc5BJlcxfzsYpudE8rCi9N+fL+ArW+gSmm5sXCTDi3m+Qfd
oElxbx5myStaQZmYMHav8eWj8qzvnbJFZhqPczfgfvRPrWfxTxi7gKiJSze0
fg/91sriZ7ktj6W8sDxhO1bklcuyb/w16gBxdSsIfZR7Nspah41bjzzE8rZC
RYGylkXPr+dLJ+9hcX94mMdRnYXzv2q2fIedq0316Ph9Fj0vfz97cRTTf+HQ
VCaNhT+n7SX988m6uKn/fl/2XrxR+2vLfKni9f++79tLzb8HYff3eMm0Emv9
GTtUvvZ9LoIrbBx7yCz8Qtrh+I0YDzSlyFFYuAyfT9Np1fFSvg+//0s/x+Rr
tf7FFjjI0zt5hiUPJ9gVdzzoGSjtnfvv/DGyZZ/pS0CgbXp2chtL3VibU3bp
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
6Lzf9IAO/ey9r25TE5C8xtIyZPLwx7KjsxUTTODzWaLOEkGsPLPYPsswARq0
JjUp7HYWl6tsvUc+AHUmb9/avtuKe1cYm/znPL7xntvylnNpGCMvu/TEk2dw
4Lq37UUmC5xPzfkzuqEJQ/nv3t70MhfmmjZ/3vmdCZpZF7K1dvagwwPj6k2b
y2H9BnPL9XsZIF+90ulBVBrohEl1kLOeIbOILqLErsc06+obr0cl6LXv6IdT
Y/EgZZFks5f9XGfe23kGB6TivjlGyxm0cFj0LO/xMRYLnGKsK0/HpsHc6X3i
dbnP0CiJkL2eXU+4xNrSYfc0ONgi27Iu+hketbxdaMYuX+M2Iwbz0zFnm2e0
tWAEJHoyb71nsMCodj4t6gjCt6U+W657JWBpcujrfPa+oviKVgvP505cHLIp
+s6NUlBQkwZqFQMWOO+o/zTVhv6b2tPtHYsg+Dxhh5EVE/SyHfgMeKtBtdr0
/k3dDLSdO1UVdJ49/6t9fT2vvg2WNTlef6RchHdr7dZ+OM387/+xz2ttvxUz
gJl+diWBXPEOWo5zG7a9GEPPt360+a//G8/ybHI931LqOJ6Khl5rrnickB+W
8pm/KVi2bZ5vIVdcj/YPfWdeInu9Ovxs9f22kf9bHhury/RmX19tfoj/C9f1
fA1Tmkq0cdR1Ki1evee/9Ttvq1y5l33f4xosno1c972vZ7YvWnQUrRuUNw9w
xfUoHtlfWLF4FOXmzbF3k/xvub/yZl0bdvmzDdMnW7jKR7uufGhVJmHjRsWH
p7nigBQFyWlXvxIwUVD99p9V/41/2exhqau1aBTVp1Y4tnDFPennBFyqjR1D
11Z3TWeuflN9OrclS4WEF7a4iRVwxfUs+GbjMK1EQqLC7riq6P+Wvzrpn5jA
7v9BFlM6jCueiDzt7JX2hYADrXJlklzxREe19DomtpKweUrNpinyv/Xc4s3w
eTRFwEpbjy1BXHE9/a4Gn+o/E3ChR+7AW656vj6SvGnHbs/SBw3XtnLFPQ2t
OWg2y27/kOaHm3e42q/7gD6Tx67f7674w2tc9ZPWEvp7ogfwUFrb93yu92qp
rE62Kbs/JdIHZcS5ro+LdbjbMknAopdLokfW/rc8ouSnzfTvJkx+qKxkwhXv
o9X0js680oWEWOdFulzxNR7fbknnPRvApxder57z6r/3NUoci/nyfADFLjjt
/szVHiGt665Vc5pRR/ya4Vyu+gPO66cUFiBOmVKDuOMUvr1qqnW/2YVXL9no
J3LFWbgsbBAxKEYs1So+yv174vKLT59eZdVREmf7v3EQjisNZ76y+2eZhVJG
Bld7bhWedPN27kJXgUcWdlzxHd9PbntDZZc/NbI7xx3n9dNdFm4VIu6V2f+w
i+u+vwZ/Vb+MHMCHgS/6HnDFT00ydeaP8jSjw+cCaxGu5yWm+MSTBZvRpc78
3h3u+A79mra66124+NO27eu57lvqPrjtGbs/oWaBhSBX/evnJ8b8uNyFZaH0
KUeucbGQELxqPUnXTm783/gmecLw0Il5zfhz1ulrDXdcTEvGz6xcRHqrXSJ3
nFGcy+41z9jfezM5OZnA9b0fcA9J2Mwex7nbd3ct5HquDyENPQp8zXjW9KLZ
AFf9eptZH9+wx+t1yiI69+/CuxTh/MeuXQghc3VucI2vruHk10qnLjxc9XQJ
jasfeBq/2+mzrzfWK/C/y3V9y5bt6xLY7ZEqHtbh42rPL1fR6k0liE/Oa9VX
c93XQXf8rX0oU9v7zKf/6R+GbJZ8fxGiabCeKPfvy8OX39vfstt/KM6Ayt3+
fljpmrhuUtsonfW/cV6HeFaNFSLcTBIid3BdX1vJv7c5FyH9yFkt7n7OtpD5
4zbL0L41+b/tMbN37z2h+X/q+vJoqr/obclQGStjpFTmRJGhacsQiYgKEcmU
JIkolFSSoRIpVAiJDCGR8Rgyz7PL5c6DO4gGouR337Xe9S7f31rvv8866/ns
z9777PM8f5x1+uv2jf63n+cfKBA/1CAI0FMbWB1nbbjZ6OFqBCvKwZGDq/AX
w9F91sEjMGr4WKl4Vd6Ku3uiLnLwWnW/4YJV+B6D3+tX1vaCTW1599SqOqrN
8M4kB43AnaPtaQOr1gt73Pob4D8COq9VrNtX1ctg3XeGF3cv3OuO0Fv93npE
4ajQlw290KvkahGwCv/03TL707URmGqMs2Gv4pFj/fbx2Tt05Mil/+Zh60/n
9eEVCByfKd4mrvrfaj9cgFo9gubMmb7V960uXnrbc3Ss90gI93/vnS3dDFXe
+BlBAfflvaxV6/eokq9uqkPQYp6o3bYK58q4aiw9/beO3Nj5Hx7BW1V7cbUI
HnbeWLO6T65ZLOsZ8fZC+LNbTztW/e+55UGZGf5eeLDVlp6+Cic7DfJNcfpt
z9J2vtU8Px8xO/yujsBbssOYw6r9fva8nj6Dw8/9I1q+fhWPlWLOtryAEVg5
tDvUZVU+pT8bRaneGIEAyQlTydX7y8H/wf11vcBP7k54sYonbZvu67DAESAd
tpvUXbW+JExyo+tKD+q7U/pcedW+G61JHizmxPOpTauiaRWPC868wpPz3QXD
KS7BVTzP5LRz/nH6Sqhz35PV9w3jhWzipDj11fmWJkFelYeux3z15Zw+109R
yOxffd/5o45zK6dvP75+bEpc9d1Jm5UfHzg8mAcfuwmr1j89rt/syqmX9viv
+Y5V+GyQ9rqFprG6/NTl/9T3sMKzk+pGA3Vhpf/tQzHYv3YN51zwDOsNXn0/
991D0d11nP53Etk48n1VPJUz0uV9nDxfO6FU/2wVfs9uC/24/I8j+dun/8Mf
pX0pOrQCoW+mO2JX93my4RJ2z4ZetKyghAtdxWM6dnb7EKfuCXZbfe1W5fnb
5mWMI18vKD5vXle5+r5nm9jVazy9YG6vVTm6Ch81LWoMXd8LWg/2ikatwoOm
JA3vceZGYgKDmLOqXlxGMtm8HHxOrPxI3Sr8JV23VoODq5h/PFfOwUP3arxq
SGMhPxaZy6ljOzIVyzhZnoEFE65rE9TvLCQxZSXGZTQIxJ+888pWg9DaP7tg
uJeNRL89CT4sPgjDmba6Bxf7QVUdY1nuwUaqDTEt7eQBiJV78+ZdVx/Inn63
2dWcjQg3Am5nhQ+B2NZd/XVHemFX8TtxlS1s1LkUKHq/ZQh+P8nLHn/bB2IS
7nZPw9hoDlvw6Mi/PqgNOnDfWHEACkS0r7/Bs9CJSMWIgs3DcPfzXNdgaz8g
EKNoPmKjz3zcEmoqbWDWJvkiKXQYLuCacjdns5Bgv3d6SPggLKZ4/5kfG4K8
tlLzL8fYaODQ/MHbut0gI4LxmrQahnmFV79lfNmo3sw94WdyA5zr7fMcfDIK
Aspzck33WGjArlZ5wbcLBspOT+LtMWAvbxD38g8LObbKebts6AdR8ZcOQrLD
MOHqsVUtho2aEqSLpMK6ob9HOel62SDs4wrsiE9nIR8qvzeXQj+k3C12l5ge
gQEfRkDXfjaKz07FpJq3gsxv7JkWj1GI6JG4kHOUjWxLcqs1xPrhF+nJ05WI
QWiUMfKsW8NGVcfTkj2k66Eq37mhogsD80zHxbVzLPQ42eWFzVwXLH687pOl
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
mrWjmAQROzeZeLiS4X8A7YAhrg==
      "]], Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {382.5495922992895, 194.47243631500442`}, ImageSizeRaw -> 
    Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotLabel -> 
    FormBox["\"Basis functions of \\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)(\
\[CapitalDelta]), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\))=(0,0), \
(\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(2\\)]\\))=(1,0), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(3\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(3\\)]\\))=(\\!\\(\\*FractionBox[\\(3\\), \\(4\\)]\\),2)\"", 
      TraditionalForm], PlotRange -> {{0., 1.}, {0., 2.}, {-0.125, 1.}}, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {-2.242675153418575, -2.468037648424055, 0.5737580693989739},
     ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(5\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(6\\)]\\)\""}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30756835, 0.18676585, 0.147065275]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2306315, 0.0964065, 0.05229475]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2306315, 0.0964065, 0.05229475]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2742634666666667, 0.25883306666666667`, 
                    0.32036026666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.41139519999999996, 0.3882496, 0.4805404]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.264244, 0.235312, 0.3506755]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.7, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.6999999999999998, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "Hue[0.7, 1, 1]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.7, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.7, 1, 1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.264244, 0.235312, 0.3506755]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.23627719999999997`, 0.19087386666666667`, 
                    0.14698493333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.35441579999999995, 0.2863108, 0.2204774]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19301974999999993, 0.1078885, 0.02559675]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19301974999999993, 0.1078885, 0.02559675]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6730957579765387`*^9, {3.6731048050495543`*^9, 3.6731048487029963`*^9}, {
   3.6731048863189106`*^9, 3.673104898187741*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "6"], 
    RowBox[{
     SubscriptBox["a", "k"], 
     RowBox[{
      SubscriptBox["\[Psi]", "k"], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"u", ",", "v"}], "]"}], 
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "1"], "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ".", 
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "1"], "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"stiffnessMatrixTest", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"u", ",", "v"}], "]"}], 
          RowBox[{
           RowBox[{"Grad", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Phi]", "i"], "[", 
              RowBox[{"u", ",", "v"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ".", 
           RowBox[{"Grad", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Phi]", "j"], "[", 
              RowBox[{"u", ",", "v"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.673096536179226*^9, 3.6730965481061106`*^9}, {
  3.673104941299889*^9, 3.673104966178507*^9}, {3.6731059838023195`*^9, 
  3.673105989115465*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.673101181780343*^9, 3.673105352653555*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local load vector", "Subsubsection",
 CellChangeTimes->{{3.672902382846168*^9, 3.6729024233021145`*^9}, {
  3.6729071294706197`*^9, 3.6729071307699413`*^9}, {3.6730228708791847`*^9, 
  3.673022873971901*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"loadVector", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Area", "@", "element"}], "12"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["f", "1"]}], "+", 
       SubscriptBox["f", "2"], "+", 
       SubscriptBox["f", "3"]}], ",", 
      RowBox[{
       SubscriptBox["f", "1"], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["f", "2"]}], "+", 
       SubscriptBox["f", "3"]}], ",", 
      RowBox[{
       SubscriptBox["f", "1"], "+", 
       SubscriptBox["f", "2"], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["f", "3"]}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730229983037715`*^9, 3.6730230780631847`*^9}, 
   3.673023138582294*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "3"], 
   RowBox[{
    SubscriptBox["f", "k"], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadVectorTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "i"], "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6730228767125096`*^9, 3.673022946431862*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"loadVector", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["f", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["f", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"loadVectorTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["f", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["f", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6730229601334524`*^9, 3.6730229840182767`*^9}, {
  3.6730230921307087`*^9, 3.6730231264392667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["7", "6"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6730229642206492`*^9, 3.673022984393436*^9}, {
   3.6730231283276014`*^9, 3.673023144840283*^9}, 3.673090977914595*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["7", "6"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6730229642206492`*^9, 3.673022984393436*^9}, {
   3.6730231283276014`*^9, 3.673023144840283*^9}, 3.673090977914595*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals over edges", "Section",
 CellChangeTimes->{{3.672750198580048*^9, 3.67275020805842*^9}}],

Cell[CellGroupData[{

Cell["Integrals", "Subsection",
 CellChangeTimes->{{3.6730921395866146`*^9, 3.6730921698887897`*^9}, 
   3.6730944183856883`*^9}],

Cell[CellGroupData[{

Cell["Local Robin matrix", "Subsubsection",
 CellChangeTimes->{{3.6730944324083104`*^9, 3.6730944486953983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "2"], 
   RowBox[{
    SubscriptBox["\[Kappa]", "k"], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"robinMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"\[Kappa]", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "i"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "j"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "1"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "1"]}], ")"}], "2"]}], "]"}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "robinMatrix"}]}], "Input",
 CellChangeTimes->{{3.6730930195334473`*^9, 3.673093020378626*^9}, {
   3.6730936949183908`*^9, 3.6730939093012276`*^9}, 3.673093979555176*^9, {
   3.673094475832699*^9, 3.6730944952213984`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SubscriptBox["\[Kappa]", "1"]}], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         RowBox[{"3", " ", 
          SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.673094498526696*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local Robin vector", "Subsubsection",
 CellChangeTimes->{{3.6730944324083104`*^9, 3.6730944628494644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["g", "D"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "2"], 
   RowBox[{
    SubscriptBox["g", 
     SubscriptBox["D", "k"]], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["g", "N"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "2"], 
   RowBox[{
    SubscriptBox["g", 
     SubscriptBox["N", "k"]], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"robinVector", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Kappa]", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["x", "2"], "-", 
                SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
            RowBox[{
             SubscriptBox["y", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "2"], "-", 
                SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
          RowBox[{
           SubscriptBox["g", "D"], "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["x", "2"], "-", 
                SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
            RowBox[{
             SubscriptBox["y", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "2"], "-", 
                SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}]}], "+", 
         RowBox[{
          SubscriptBox["g", "N"], "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["x", "2"], "-", 
               SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
           RowBox[{
            SubscriptBox["y", "1"], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "2"], "-", 
               SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}]}], ")"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "i"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "1"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "1"]}], ")"}], "2"]}], "]"}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "robinVector"}]}], "Input",
 CellChangeTimes->{{3.673094197363437*^9, 3.6730943517830105`*^9}, 
   3.6730944664542027`*^9, {3.6730945047237654`*^9, 3.673094521424313*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "12"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "1"]]}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "2"]]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "1"]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SubscriptBox["\[Kappa]", "1"]}], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "12"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "1"]]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "2"]]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "1"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             RowBox[{"3", " ", 
              SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.673094360070163*^9, 3.6730945295409527`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 141, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[724, 26, 152, 2, 90, "Title"],
Cell[CellGroupData[{
Cell[901, 32, 175, 2, 63, "Section"],
Cell[CellGroupData[{
Cell[1101, 38, 92, 1, 42, "Subsection"],
Cell[1196, 41, 1040, 32, 29, "Text"],
Cell[2239, 75, 2454, 72, 126, "Input"],
Cell[CellGroupData[{
Cell[4718, 151, 2767, 73, 132, "Input"],
Cell[7488, 226, 164196, 2848, 251, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171733, 3080, 153, 2, 42, "Subsection"],
Cell[171889, 3084, 1448, 40, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173374, 3129, 101, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[173500, 3134, 109, 1, 33, "Subsubsection"],
Cell[173612, 3137, 2785, 79, 123, "Input"],
Cell[176400, 3218, 1282, 38, 78, "Input"],
Cell[CellGroupData[{
Cell[177707, 3260, 1649, 50, 82, "Input"],
Cell[179359, 3312, 929, 23, 46, "Output"],
Cell[180291, 3337, 931, 23, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181271, 3366, 168, 2, 34, "Subsubsection"],
Cell[181442, 3370, 5654, 173, 134, "Input"],
Cell[187099, 3545, 1888, 53, 100, "Input"],
Cell[CellGroupData[{
Cell[189012, 3602, 1600, 49, 82, "Input"],
Cell[190615, 3653, 907, 28, 46, "Output"],
Cell[191525, 3683, 905, 28, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192479, 3717, 304, 8, 34, "Subsubsection"],
Cell[192786, 3727, 1239, 37, 36, "Text"],
Cell[194028, 3766, 7047, 212, 440, "Input"],
Cell[CellGroupData[{
Cell[201100, 3982, 2609, 66, 102, "Input"],
Cell[203712, 4050, 581246, 9805, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[784995, 13860, 2418, 74, 100, "Input"],
Cell[787416, 13936, 99, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[787564, 13943, 214, 3, 34, "Subsubsection"],
Cell[787781, 13948, 752, 24, 46, "Input"],
Cell[788536, 13974, 936, 30, 80, "Input"],
Cell[CellGroupData[{
Cell[789497, 14008, 1596, 49, 82, "Input"],
Cell[791096, 14059, 269, 6, 46, "Output"],
Cell[791368, 14067, 269, 6, 46, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[791710, 14081, 104, 1, 63, "Section"],
Cell[CellGroupData[{
Cell[791839, 14086, 129, 2, 43, "Subsection"],
Cell[CellGroupData[{
Cell[791993, 14092, 113, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[792131, 14097, 2932, 89, 147, "Input"],
Cell[795066, 14188, 2909, 92, 88, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[798024, 14286, 113, 1, 33, "Subsubsection"],
Cell[CellGroupData[{
Cell[798162, 14291, 3944, 121, 212, "Input"],
Cell[802109, 14414, 3133, 94, 87, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

