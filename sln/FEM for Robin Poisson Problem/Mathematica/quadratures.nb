(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    227265,       4650]
NotebookOptionsPosition[    224739,       4564]
NotebookOutlinePosition[    225116,       4580]
CellTagsIndexPosition[    225073,       4577]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.669535759933158*^9, 3.6695357703706627`*^9}}],

Cell[CellGroupData[{

Cell["Quadratures for FEM", "Title",
 CellChangeTimes->{{3.67274913464913*^9, 3.6727491400116396`*^9}, {
  3.672749178747164*^9, 3.672749181511141*^9}}],

Cell[CellGroupData[{

Cell["Integrals over elements (triangles)", "Section",
 CellChangeTimes->{{3.672749195568788*^9, 3.6727492091998425`*^9}, {
  3.6727501704611273`*^9, 3.6727501749239335`*^9}}],

Cell[CellGroupData[{

Cell["Basis", "Subsection",
 CellChangeTimes->{{3.67275518652402*^9, 3.672755187973054*^9}}],

Cell[TextData[{
 "Basis functions for linear space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "1"], "(", "\[CapitalDelta]", ")"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"v", ":", 
         RowBox[{"v", "(", 
          RowBox[{"x", ",", "y"}], ")"}]}], "=", 
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", 
         RowBox[{"b", " ", "y"}], "+", "c"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "\[Element]", "\[CapitalDelta]"}]}], 
      "}"}]}], ",", " ", 
    RowBox[{"\[CapitalDelta]", ":=", 
     RowBox[{"triangle", " ", 
      RowBox[{"w", "/", " ", "nodes"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}]}]}], ",", " ", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.672752379555704*^9, 3.672752581281209*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["y", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["y", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "3"], ",", 
       SubscriptBox["y", "3"]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"element", "=", 
   RowBox[{"Triangle", "@", "nodes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basisCoef", "=", 
   RowBox[{"Inverse", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["x", "3"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["y", "2"], ",", 
        SubscriptBox["y", "3"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "1"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"basisCoef", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "2"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"basisCoef", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "3"], "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"basisCoef", "[", 
    RowBox[{"[", "3", "]"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "1"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6727526806962247`*^9, 3.6727527860463743`*^9}, {
  3.6727529249166718`*^9, 3.6727529556756525`*^9}, {3.6727532559615955`*^9, 
  3.67275349349656*^9}, {3.672753562381133*^9, 3.6727536175676937`*^9}, {
  3.6727536495390716`*^9, 3.6727537076852503`*^9}, {3.6727537668418427`*^9, 
  3.672753900022877*^9}, {3.672754008225913*^9, 3.672754108422325*^9}, {
  3.672754211354912*^9, 3.6727542117026143`*^9}, {3.6729042615496807`*^9, 
  3.6729043232475414`*^9}, {3.6730170609516764`*^9, 3.6730170856143513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Triangle", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["3", "4"], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Phi]", "3"], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "3"], "\[Rule]", 
        FractionBox["3", "4"]}], ",", 
       RowBox[{
        SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "K"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(3\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Basis functions of \!\(\*SubscriptBox[\(P\), \
\(1\)]\)(\[CapitalDelta]), (\!\(\*SubscriptBox[\(x\), \
\(1\)]\),\!\(\*SubscriptBox[\(y\), \(1\)]\))=(0,0), \
(\!\(\*SubscriptBox[\(x\), \(2\)]\),\!\(\*SubscriptBox[\(y\), \
\(2\)]\))=(1,0), (\!\(\*SubscriptBox[\(x\), \
\(3\)]\),\!\(\*SubscriptBox[\(y\), \(3\)]\))=(\!\(\*FractionBox[\(3\), \(4\)]\
\),2)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.672754109644085*^9, 3.672754129164958*^9}, {
  3.672754274711578*^9, 3.672754360859954*^9}, {3.6727544978119197`*^9, 
  3.672754497944442*^9}, {3.6727545419532824`*^9, 3.672754712065358*^9}, {
  3.6727547716724033`*^9, 3.6727548433633184`*^9}, {3.6727550011061563`*^9, 
  3.6727550161617146`*^9}, {3.6727550482013216`*^9, 3.672755059900308*^9}, {
  3.6729022161559315`*^9, 3.6729022536902018`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJy0vHk8Vd/b8K9IJRWlOUKDIVOaJZeEBo0yRIOEUmlAGZIhKXNFA6lEpSTz
lCHzPM/zdDgc8zyLPL5te+/7Puvx3L/7j9/553p1fS7r7LP2Wmuv/d7v/eG5
eldRZz4DA0MwKwMDI8Ncnz7475H+04bnpfGMzW5Nxx22VXA+Xzo0h6kfzmhZ
vNcdqZuto9C1Q4EDXBwha8Y6YaVt0AHvTfj3WElqnqy8mqvZBELXuat0rMdm
28kDzuUOlUsm28EhpeJj4fKx2fqXksHb9HbQxFrg7c6XXeKHJkHpX30cvFgo
17XgbxukNXaeals4SXz/+ZWRaw3daZCz7qjRO+6/s/UBkPmEd2S+ZRs09T3g
G2L8S9QvkuA9rpZFBey4JsAy2/N+vkk6eP9m1p9/pBVS1opsMOqZhObiGmuG
8u+g4ni9aZF5O/gWaxrVLpkg2jE8pnLd9mA77Kn+drVp8R8iPxYo8F1iYSv0
jnvu8Wr4A1df31frYA4Gc6a9BVX+NGCvFLCt1JiAke1DxlZVEeB1g40ic7AF
Ep7Ks5sK/wHr7721IzEJMHmSWdVybwuo+Tal/V4yDr82MdXLrU6G8MPm5a6r
qCCvPsm5zmAcOt4us3u/NxuCqqV5l6xugydxBw8vEBkF6yDz6x8Gg2Fzmx2/
ztYGSPYITnNPGQKzf7+3HLpubMzSCGiGa09+fdjlOQodpeVSJ/zTIPrKczOY
oMCole7p6c8jsOKviOa8mGLwX12Qyj7RAad8Urqi1gwR52vfFHUsVosKRT+e
v+h3H4HTmo1OXJU5IBB6+ZrIwSaYVOyaqjYehSvN7rq3XhXA+slgr+l1TeDI
25r3+cIwPDPyUxXlKoIfS0J3VjdSIUkh8mpfUT+8f/o4/9u3fBC5tahW7mQT
eGm8E39hNQilpp8DhXyK4Jhoqd8fg0ZoyNorS9MdAovfB+zetBTDGmn9R8xl
LZBqyDJ4zmEEKI5iG1x5kuHjIj6WD9It8LV++Xed3iFo+3tOTHBZOjS7+ucv
M+sAvfCTaakrR2Z/l5fkg5yCBjXrVpBwETHV1R+D5sdbll9hCQOJPJNLDr/b
YV3ORofypePEeRfeppDKumRmfGrszjDXHoJlyyVPe9ZHQuibqUqXuFYIHh/f
5PhwHLjjpfoiJAOB+e05R/3XLUDJWcd28/ggLKp1Sy7QSodLfVc9WjY0Q+ye
DBZgHYKihQGOgjY58PHahXaBHCooZgvz3y0ZAIn32uLt03lQumxYTUGlFpzD
xw6INw8A7d94qIb7Hv0xHKadIPZ2P0fAhgHiOBVH/hTZrmoHJ7eGfsOdg3Ce
S9OpqmtmnJy4NTXF2Ar3yim/Im8MANO4vuLZZ0lA2VV4dQ9HK1SrNjMMdvXC
K4aTQ/5RKfDF/tOxUT4aLL/8w95TpB90zCpP2+xIh22ewWUs+9qhv/BFiDNb
P/ToXeh15gqH64N3t+rktMK8y23z11Z1gDZjrm6DTgo85kj7YxTSBIzMNbtL
ymlgvmpa4lJrKRzb2vS6aVE9XGZQOK0m2QJe6xXWLPSthWCjh5sWbGmGeyst
924d6IDUk9sN9f4Ugmrt/D1vozrh8/Mhvu+c/cT4nO/bX7ZLqR2EqxwORfEO
wNull/La1obA6rssdx1rKdB0ceAz9+YB0BrULzy/uwx0VzZTeKQpcHOv2GTc
9kEwi9skXddeBs/1LY3sj9bBvOrEnpW/+8GAh9tVr6oKFN+JGg7kNwKv2GHD
wIM9oDSv8FFQcSlw/VvfumfXQ3K91Ds4/SkjgQJl9T0Wdi/6IH6Vg5X/vnLw
XNtmUhFGBVPTC3w95/pg0QrrCbU7hbPnsQs0hQz51fd2Ee0ob1LRYJ6ZR399
NmrcPdcPqnfSXA5sKYEghVxb9uhmYPra9qmToxtkLKvZZF3yAVvPs2bX80Yo
dW/Y5mHeCi3/xn83VOq+d7Dnaybax9aNktm/awcpndMS1yWpIBIkPXTyOQVu
rXGstTnQAVk1FyjWSpVwfoW4xr51HWBupUzZMdwGKV3rti05FDk7Psth/Y1+
Y+3MbjBUWJiat6ERfOc5BrUPzJyvlwP5L9d3gIldWfGzfe9g8MnZJ2GjDTA4
GWJitKsXCiYf14scqIS7J63SNbMowNITp/PxNBW82l+sU35XBVMyQZrfumiw
jWm00f5MN4zrH7Hj8UkDvwW6FSv5m0Gb+aw5HG8ASslTzZfpJRDwbx3rgg/H
bav0RYnrHoMEjzpv/K5OoCy4f7JkfQ94UR6AsYUXLDJc0NvH2AF9YHmwuLcT
CvmUj3/rCwPnnMGsB4ItoPRTrkBUuhd4J5372CJzwD/Ege+LVwOcGf+ruNxv
5ny9jGCs2lUFRgyfxLbOrwY7BQOxkw87wFdP9skRjQaw90m/e9C5HVaGWaw5
7dcLPtwnbqZ1hsHLie+Vx3RqwIgtbPE4Rw8oHupsNl5VB28DfrJ7r6sFg45b
WtrcfbDjkudvofIaePRH6lBlXCmcPv1jXs73Tjh/frvleqEmaLHe3zPVVgA9
84o8/8q1wGJLt2CGSy3Aw6RifEC7Dhw2fSlxKm2FvzuTznl/q4U1v1ctHvKu
hE0D+q0vhdogmPqs3vAHBRaKMOsvvtAKl9fsujPgOgysmtfeF8yLgbLbustr
S9vhjorWG62Fw9DnUnFdU+AjPJSbXr3Duw0s75WLMsuPgDYtpLCs1B8YYiYt
djtRwPKa+r6N8TS4MtA7uHRfFUgu4OakFsyMp0/mrPz1LaC6x5ol4XMY3FZS
7Fb0psGJS/dYL8ysQ98sLVKf9WVBVmncsZcS3RCjxh5qvp1GnMfPmse+ZTJ0
wGIJszxJ/0ZojdrPYHEyHgSbcpYI/2mFNPeRIx3RbTAiWOavEpkC8/Ir5NnC
W+Bem/1m373tkFpSU9zxKhc+rywZHZLqhPX8Dgn576lQLlH32F4vFPZFF96R
ONwFTKwlSRlvG8FE6dSLLE9feF7J5fBgZRMIvBBtWjs883e39oTl15TC9oCs
GKeBNpByibpkENoNNxdM5PBFx0DphACfmXcT7B6KO623vR0UnH9/FDEohbIk
Q56W+ma4rW5jK2NPhVidvRtaNIrg2tdK+xOxzTPX14PDZwpnrhuXpwMVVxXB
ubKG5p+pTbCvcm/xiE0znNAIfXxTuQwOCz72rmtvgr0vHsldbmoEf1vP7QFh
ZZBb61OimlkH+p6F7j81auHacuno0J/10FLslrVJrRF2hoTx969rALbm6CPW
N6vALyH0ROqJahj+w62oHj/TjtXVF8XeFJD6amwbPNAE1aM2y7c5lYD9Wm7R
9T8qYJnsfQ23q/WwdMlq6z/2FBDdz5zY/rAOrN5x+xho1cGJ+PbwFAEqdI98
vb2xuA7ONRo9FKtsgsD19dXZEVXA9DAyqGVtBUguHlJKWkMBmzNhQwn3ysHk
yWNVnfl1wBW0im3X2w5wZX9rohlcClsSnmiuMUuEhbeTfuxIpQBH1uUHD+5V
Q+GJoilngZrZ9evH7LqXBLtpv+yvNXRDqsHhNwzr6sF5ysdP3DQdQlcv5o4E
ClAsRhjTOWjQm7rjmc+KavicdeLIpteF8MLBNvTFm0oQb47O8SsshwcfGB4K
H22C5k8t7we1KPBufO8qE7tCWJDknLaYrw46RNpernJuhlY/rvN348qhIHf7
4LZlpUC33579FML5a1E/hve0wBErR/U7O4vhSMrBxm8KJRDhk/eKkUYF3zyz
zQs0kuH3qNCzRcsqZvfDPbPXl0Kiva/3i7aYuVAhdyTsTll5PihU6Gt86C0H
1X/72J7Zda+SqNcpnopfOTP/ky6l/frFXgqTl9esPvwzB0qEQ0Rj8tpAtnlM
NOFWHXxZfvAB352ZdfVXaMhBm04IXt7Y4tZbB5UxppbytHAw3WEY4aneAX8l
KqRL3Krg4q0ptZeiiXDn9lnauHE33FH6wbKHuRa0f1hyqw65w9nT9XtPn+yC
/om16lzmFcCwaB7HaHkIfN6d0phR1QXCoxksZl+LISyQqYo5IQjOueV8rxFs
hdpKhp+BLAXgbqvveMCwAAbi1YXkNNuBuuJRlOHpIrCcfnBlGV86LHbmVUs1
qYXTL7jMYrQqwbbw9/arBylwcK/ZaePdtSAUsDNSdVkJvBBoqL0cTpkdJ9Gz
46QIbubeXZkX3wn+r7uss3Y2wnqjWoG2lEyQX25vLMJaCytyw8OXd9OA8eb6
QRHPNJBM0v4+lVMIiw9HxJTPXI+ejouIde+Y+TvjleaBYTnA+yfvxs5XVTA4
NLphdVUKZMjs9/jo1gS3f/ALWb+e2a+JdNuFseZB+aGvJ9XyGmfPTyXdOMGv
z4V0+TZIZrxhLE+lwPbzvbxtZ6Mg1nx1IdWoDmgHpbUbF7WBgc1klNzOZhBN
t3KtSE6DwooH+926m2Gg6g1r1JNGaK7qsaemFIHuHu3p9IM0SO45veKBSj0E
C9bEyc/0s5C+mNS1j/FQnHNWNeRKBphpWQac1O8Exk1ctvUyOdD8XOY+ZSAJ
MrXeqod8aoO4k/eN89oLoPvHtRh9vjBoP7u/pieqFRanH06NY2sBVvNQEb3t
WcB5wjk8TwGfF810v6sSfPe5PVj3sw1cj1SmfT1OA7fxyPQjIskQuFHKzP5w
CbyiHj+16HYOOHn0TBdbt8CKaMnv/Ey1IKC23SG9KgRWjOxztYnE+7MUfmdP
LJfI9IZbLBTHu7UtUPOSRyjLuhwEH1O0xNdGg3OEhpeEOn4ciXTH0wW1v/0F
Y9fRYNPoghx/wzB4oXJKtkusBNYqpjVNLqyAqOGfEVIz6527m8yXS1+boOjL
MrN1IjPrv5a+5XnLSuha0z6YwpcFbjIiVH2TYjg+LWvzgJIEMZHyV1N20eD7
3aK6Ysty+BBW5fe4uwgG/G8YSXlTZ+/jUgC/L/8Uyvdxp2c7KLJkjpo/LwHX
nqvnT6woh56cN1IfKprhzbkVzKdri+Ed18UNzzqq4QTHoQ1i1Ga41fe+sXBb
Pmy8L/1VfkkxfJlUuuSmPHNd9HyfoypTDCNM0vP4jlFgWpRFIqisGa5Q9zGJ
b8uDm+VijuMlFZAULUXbub8VhDcrTNbtyIXD5mve751ZlzUTDizU2dwKOw4f
Z29SzoM3bgnflnZmg7GB8TLRklb4muojdjYnDZZyvr4zsr4QmE92n3jk2A6s
NyhDW4aT4bGipGVDRCm84S7NPj/aDt8SZK9raJfD/bWvFzLN7NO5OG/lnA5t
Atvue0F2qyrh6cWPuepfmuFnXdipwiuNkDpYNtk2UQwam6+vGfzbBKE8vlwB
vM2w62Le7zVRubP9R4Vex9hbJ2/TQEm8mL17ZjyISkQzVfXR4GWCpcodHio4
MhZl+FlVwzfHfTv9FWngUHVlu19HAwQ/S6hoXTdzXzKxvDdjZt5oHJRafU6Z
Ojs+MiGF9+7dgLrPEMPD4yNb3Q73ZZTdNvLHQ75OsZjHjQjYsEyRSaVlZn/p
Vi15WNoXUuuKjCtiAiA9VIbzmXQPjCtXlz7ySIGgc1x+yiOJ0GJswhno0jHb
fhNIavnmPWH1BsPLWX15sTWzeRrd+CwF3VjlB3zVVNik2cdZHR8KfMw6sjER
FZDxj4f0zl4v8HHtIJmrYG5XmNMFAdq/44M35sADu2tOp6tDoaRqxCf5eAdc
Mdg4dUQxC3RZHuv6+6XAz7Sd+jZSvbPXkczZdu5JvqLJd9EutgOnOB/NljEa
XAceF26fzITcG2oRTJVt0KB0vmHbslTYdSroFD9XNtx9smJVi1Mr+E+a7TzE
Egem4hbuGX8KAJ9n//13JQJ3xJPL2jdmrgu2sr4b3sXB+vSqt9HzokFV8feD
6qAOWLJHXz+9IwmoLyjqBxlTgF/+iloqfydoy0Zt4DYKgoNbvd8d1EyG+Wbc
UoZCPaBpZT61dV0AlH46evn7mx/QfIjd7DG0gf5YzMqJedPE9/svvuC0/0Qr
0Fi3xJ5gm57lVx+x+gS8P4OJemx+vpu9joTAhsEa2bDentn/Hkz3u/B8D10+
GMpthNM3fmsFQ2bXS9vs8O91hgEvu7jEBvx7vej+jv7fvVj9pjbY96hu8ZTV
NN1x2s8epzc4j9/+XGXcC/jf0bc7Vz8w/D8/9LwR//f/zBv/+9/9z7yxuv9f
xwA9b8T/gp43lv6rLwB63ojX0/PGyn/1CUDPG/F6et5I+VcfBPS8Ea+n5419
XjLZH2V+ILzxSoTJtueFGUDPG4XctB8YVaYAPW/k//Cqf+UkyhutVsadiuX7
hfBGbr97WvN13iO8MdO8ieP5gzCEN+LHT88bd4kfT9iYn43wRryenjcyHHj7
ITniF8Ib8Xp63qj1rx8qgJ43VvZk3NhjF4bwRivzwCnZG68R3viSnVNcyC8Y
4Y1XFHy+ubFnI7wxeMPP4JJrcQhvZEtQjDPmDUF4I5uPz1quiBSEN9o909sJ
u1DeuO3feSwBet645WHYSpGIVIQ3fihxqvDJzAF63hgqmV530bII4Y1RNxYx
fXuWjPBGkyGGKVuDXIQ3ynLuOVZ1PBXhjRYHmoXUQ9MR3oifL3re6PXvOGuA
njcq2vNHN14qQ3ijp8qC1hs3ihHeWMs3bBO5pxzhjWLMSakMDsUIb2yyXsxz
qKIS4Y0nvUKOjhnWILzRqnnri4JDKG9ckF0iDntzEd6Y66msfGdFKcIbY5tW
B4ek1gE9b5RmeXVM+X4Fwhu1/423GIQ32n38e2DPcADCG68o9VtfNPRBeCPH
x6pNsg1ZCG80luS/KtrXCvS8UUxNjPHpmSSEN7KOON9+VZKH8MbCG+mdis2N
QM8b1R3nX8m5kYrwxgsb/VQNPpcgvBEfJ/S88bVCqMSBrhag5414PT1vdF8n
/qyvIRvhjQLzV/yUi6MgvBFvh5433lrSpznI34Twxoes7mcjuJMQ3qjCH2q1
dE0JwhvrZVrUWmorEN7Y41vUcPp1LcIbQ9UlVx5powI9b2SV+ph9qawB4Y0b
jTpFmTgaEN74XsUwKqO5GOGNV7rfKorKpCK8UXrT1h0B76IQ3pgq2+OcoF6D
8EZK1DM5SZUwhDeev3uq+dzRIIQ3Yr38UpKeN+L9T88bB87vDfmyOAPhjQzr
593hnB+D8EYmg0emp8JyEd64oDo2/jNXKcIb9VJNc0NCCxDeyPM9oqRscSHC
G8+031v7+kMTwhsbr55x0RysQXjj5nOj2w51NAM9b6zffqBqxxUqwhsTizw1
O27WIbwxUHiR4VWLSoQ3ustO37VtpiK8MfI1z7MgvxaENz5csqtM7HI+wht1
u48GHf5Ug/BGK4unK3SuFiO8sRJkL1WurkF4YxGkXLi4vgrhjY8yV/l7bi1H
eCNne/PzoRuVCG+86q360HhLCcIbVQ93bX66qALhjdoLdnHNm8xCeKPDLc6s
4pf1CG9MjaXGrf9ThPDG52+aYmBRPsIbfUyqm3ax1iK8Ub50S6BEWgXCG0sc
TbN4ImgIb/x2yvLIXs8KhDfi45+eN0qck111pKkK4Y2DAnkT8jsaEd44Wcrz
7fTCQoQ3isiUi8a8rkZ4Y8Odq8Evj1Ho99sM+L/peaOCVPzYmbxGhDfeZnm4
doNwE8IbJWf33/S88fGbe7yqARSEN6oLe9pvHmoHet5YVGh3IomtGeGNzE9C
VZ4doyK8MdrGfc/Z1haEN94sP76O73kLwhs9As6mFuxpQ3ijrNf4s6qWVoQ3
Hv8VV9Cn3o7wxr/WKUdqDjUjvFHXLMVUg5eG8MYTa0ZvXj5XgvDGE+V8t1az
lSG8kdj30vHGnSXT5hXJdQhv5FXsOHmA1ozwRmOfL5mcDykIb9xl/kLWsroM
4Y2/xB5Zc/OWzcEb8X/T88ZChDdKuzlub7BoQHjjAadGqe8PKAhvFDxhdkM7
qhbhjV/3Dy9xcaYgvPGD2DXTZAE/hDfeEXh6Ids2FeGNlKWPt+gq5iK88QwL
9dPP8KY5eGMzwhuLOK/93HCagvDGBVu4q0SlchHeGOl7lCVetRrhjZZS0kc+
CpYgvDHBJtXAhh/nn/S8MRHhjUce8LOfnrlfpeeNtJ/H4o4PZSC8cY+mAHXf
WyrCGw18ksN/SeYjvPGdu6WZjXMBwhvxI6LnjZGNcgEyL9IR3rj35SfjaLsk
hDeqvLtFu+CZiPBGcb1AwQ7hKIQ3cj/1/XX7eSTCG7s4aJuKEn8gvFHtZvLA
74MpCG8Mv3Q7VuxOGMIbz6u9+9kxc/9Lzxs91benRFmkILxRvnB4++I9SQhv
HNLmDcjuCUV4I95v9LzRbreEgeLVbwhv9NydJ3PuaQrCG5u357sc8QxBeGP8
a+e4vQfSEd545CJzmvV/nmjR8cbbWRUN2rs8EN4o2s15c/+jGIQ3BiwVaQ9/
h+/f6XkjDeGNNUY9B3aPNyG8kXP2/oSeN178/H5k06EOhDeuF5WkLelsRXij
/+x+mp43SrCZO/8Wa0N4YwXPDbaQERrCG93CfJlviuG/h543diG8MdvCa8Ve
5k6EN8pHrKupmNeO8MbnQ9Hu07c6EN7I4CCqXmvejfBGjBd9QjgbsTLR8Ub8
ekzPG//776Dnjfi/6XljD8Ib8f9CzxszZ88r9l9R/ojwxn+JF0DPG//739Hz
xt45++H//fn/6jf2AT1v/O/3qfS8kYGBnjfi99n0vBGLbYjfiMU2hDdisQvx
G7HYhfBGLPYgfiMWexDeiMUOxG/EYhfCG7HYgfBGLHYivBGLnQhvxGIHwhux
2InwRiy2I7wRi+2I34jFVoQ3YrEZ8Rux2IrwRizSEL8Ri80Ib8QiDeGNWGxF
eCMWWxDeiMVGhDdikYrwRiw2I7wRizSEN2KxGeGNWKQhvBGLbQhvxGI7whux
2IzwRiy2I7wRi1SEN2KxGeGNWGxCeCMWmxC/EYtNCG/EIhXhjVhsQngjFhsQ
3ojFRoQ3YrER4Y1YrEZ4IxbLEd6IxTKEN2KxGuGNWGxEeCMWmxDeiMUmhDdi
kYrwRiw2IrwRi/UIb8TvC+l5IxYpCG/EIgXhjVisRXgjFhsR3ojFOoQ34vdV
9LwRi6UIb8SvB/S8EYvVCG/EYiXCG7FYh/iNWKxGeCMWGxDeiEWUN2KxDuGN
WCxAeCN+/03PG7FYj/BGLNYgvBGLDQhvxGItwhuxWI3wRiw2ILwRi/UIb8Qi
BeGNWKxB/EYsliF+IxYrEN6IxUqEN2KxBeGNWGxBeCMWaQhvxGI5whuxWIbw
RixWILwRi+UIb8RiEcIbsViJ8EYsViG8EYslCG/EYhHCG7FYg/BGLNYhvBGL
VQhvxGIJwhuxWIbwRiyWIrwRi0UIb8RiLsIbsViA8EYsFiG8EYspCG/EYiHC
G7FYgvBGLGYhvBGL6QhvxGIqwhuxmI3wRvw+gJ43YjES4Y1YzEZ4IxbTEd6I
xUSEN2IxfQ7eyMCA+I3/YjLCG7EYivBG/D6SnjdiMR7hjfj9Ij1vxGIqwhux
mIfwRizmIbwRi1kIb8RiLsIbsZiB8EYsJiO8EYsJCG/EYhLCG7GYifBGLKYg
vBEfL/S8EYtRCG/EYgTCG7FYhPBGLIYhvBGLcXPwRvxDzxsZGOh5IxZ9Ed6I
xVKEN2IR9RuxmI/wRiz+QngjFkMQ3ojFLwhvxGL0HLyRgYGeN2KxHOGNWIxF
eCMW8ftpkjdi0QXhjVj8MQdvZGCg541Y/ILwRizmIbwRi5kIb8RiCMIbsZiE
8EZ8P0fPG7GI8kYsZiO8EYvJCG/EYiHCG7GYgfBGLOYhvBGLMQhvxGIiwhux
mIrwRiwWIrwRi6UIb8RiMcIb8X0tPW/EYjnCG7FYjvBGLJYivBGLrghvxKIP
whux+BHhjVgMRngjFl3m4I0MDPS8EYufEd6IczJ63ojFWIQ3YjEa4Y1YjEJ4
IxZ/ILwRi+EIb8RiwBy8kYGBnjdiMQDhjVgMQXgjFj8hvBGLHxHeiEWUs2Gx
F/Ebcf5Hzxv/O8+j5434h543MjDQ80Ys9iJ+IxZfzsEbZ/nkf+GNWOxFeCMW
8XFFzxtRzxPvh7neOzaY4/3fjDneO56rnbneU57r/eK53j+tcbZ4FlHUDq8z
F9AEosf+x3qco3+kew/Of4734zTTv/9adaoLxnKTZBRfkF7NXO8n/m/zc72X
N9d7XnO9XzlXXmV2f+hB9/6LyhzvxeDtrJijHS+6+rnex/EyXSgZtaUXmHPZ
LMd0c/7H+krLqxryX3uBjeUKn25P5H/n//8XP3kuDxmfRxx0njDLLB++Suej
Lp7NX5kjT++vzuUVz3Wcc82Lucb/XPPlfzsf55pHc73XP1d+rnn0v52P/3/P
o//tvP7fzru53heeK/+/naf/23k31/yda77PNe/+t/MX+6DPm+aad//Pef1/
mb9zeen/0/yln6dz+dtzzfe5/Hbsg3r7cz2n+6drt7YCZWqk8rZWH7yTqq/9
NJEAeP66zpGr/uW9YHJT5u31B4nwT4PupMLuwUmNS+2jcPehcLr09Uwif34v
d9ZY7hic2MNyyedJBpEXWqu9LuXNCJgop7PWxGQRef/HOa/MNo3AWOdlV94d
2UT+x53Ge5y/m4C/pjbyiGkJke9Q6H7UNUGFSmrV4CuBEkidP/0ut6UdbrxI
F5m60g8b3w5/PbTJn8jPO3vh8gaOfvj94jMtUzGAaIf72YejOS8mwKbVua44
MY3Ie99jDQu+PwGMU5yG3TVp8K3npHVpewukXf6qX7Z+EuTzjrCEmEUR+cgG
QWsx80nQypFon4j8RfSbtWzyZI3DH/hy9YWgreoXot7u1QrG9L1TkKB1q7Xg
UCRRj70WMQ2K/8bXPSLPWLltoJr1L0gJTPxY/cmVOM64uzqirocmoHUqdWTJ
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
Vl1YuO/Ezz2uKLNuK38dOStRx18Y664P37Pf3OV8gh7Pb271q20xzk+tT2u/
6ZvD8Tp+rO1Eh7IBAert4+Zx239M0MdlirXZ86fJvurDgjvjx82N0+2vGuvb
h+bGmS9YiDx+rqq5r9ToB2uvqaDjyYNSwhL0OFccmNKg58gAdXh/bKsblvE6
vnrci1/szwer3F5jxk6KTdTxv4vlVN2521e5zx7s2cwpVW/PpGP1j4d/rmfe
5HbOl2ufruNnFkeWalt4o0r8Ml7RenvwOx25P7e3WZoWr+N+ewe51mwXqKYf
nV9x76VEHXet7trSe7CPOhTgH9FvYbKOvx7au8abbu4Kv6uAv+tVYUmBFd12
dByobJ5sWZ+uxx+P12nnhYXDfk7S/fj8eXOu9xkv5fM4KW3V+RS9vz1e+D2v
OtpFLWzROWZjeWp/MGBH2YLu3up+sruz+4B03b5E9e0Vyl24rKrkK9jm49s4
3d6m//0RlcyDVcSpCQnFCmXqePm3az6s6ri1Y1LjOF+z0Ex9Pd5bMe7mlneL
VWKQxZw55ek6fT/uXtpkZxf1uufFwTfHZuvrK/xOYSe/lPnqgc/ViDPrs3Q8
8volv9XLjqpWpT/7pDHJup9bi8s86H3QS1lNWnPdzyJab/+vTZpU7Jb+RAUn
bTt4YHasjqed/67pbwfD1IFz07Y5hsfp+MZOced3/hSippTumbl+TZZ47yfL
Ya6rzQPi7Ar0XzOy6MYnKqjCg127RxJXkr//rT6/OUSrtZkbZkxNpeeT9Tu8
/mHI9jj1yuZA17Qt9J5K6riuIztkhavuVy8M7bOV+MeN0yNXuS2NUeOWJk5t
1Tpe72+R5NB8pw+HqAbbqlTY/Yh4Ultbyzvx88NURrMOOYUKZAvfs9rH43S9
c8ST+runbHlwOVgtb225PdWcOMeAy01vdX4SrHZXtHzZtUuc/t2DDt3TNm8I
U8VDetScmEnvM0V75R9Rw+maGmEblNGrIL3PNK/mlgL53l1VdsOL//rqKPFB
bQeNmFt+crQ6s7TNVLuy1P6Z/cKa1fZeVaWTW90e3Jbecxpj38UzuJmTajj9
wMe/mtJ7Et8Oubn7t71XlHsRyx7TVhEPOCzq5bi2+SOV2ZgfZ1fvQNyN/7Zv
lmV4Ris1yWvVudH0HtjBMxn28w96qmbeVncTJ9N6FTPXvxrXq4O/OlBne8Nl
Z/+zrr9T+igPyzi1OdvyL5+cFD0+o9+u+TF9qKsaeTN0YV2bFP27E951+7C0
iK9KDhy0rclQej+j3JKzK8fc9VVB39pnvC9O7xk0bta4iNmzADXPrv7bcheJ
T2k+7vTzPxolqjZ2/YekHKXvJwwYV8HNrGW8sg/o2e9wP+JSm/7ZbMecO1Fq
xNUH9oNn0/t5bWdVNg8Z4aqOfslHwTqO31G67HPoze6PxKfbDKr4OrpwsKr7
+GnurJ/ovZPa9UYFeoy+rn5v0XDENydo/bym7au5rWker4avnRVruy5Dz+dx
uSeXx58/0vHVzMZtzMdTvHGzkseGtl+gaq9NnNrmXZqOdyzw55Le188o9/fe
60/3pPcktvrfO7z0Hy+1+Uzuqt/bEA++rFaNy5YtXJRXuZ7Lb2+k93I+vrm0
YWLgXWV7cGzwli30/lBVx79SHl50VP+eODAsLpzye/Ivlm2trAPUmpLLn1/w
o/ddogKHFjo3yV/NGfhxWnYv+k5mkf5DzC0XBymLwjNOxkyi72B7Nwywqn8k
Vs2o0yUqZzjxVuZpd1o3GBalemR3KZb7n+91Txh+O9Kie5jqZLO1yKi+xJlO
z2z5ZPDcJ6qReZ3xs99m6Hizj1X2XetxS7lu7O51fli4jm+7XKiMZVi8KtCt
VOuy5vSdnASHmmuTQwNVtSYretvF03pCV4I7j3P87BMvVavQ1K8Xfc+tmu2u
cVVj4pRTZAGzLjfou1j+L6bsLmHpp2bULd+h8XL8LoGjqvf3iHYXNmYr2x8X
Z8X+9lTHbZJr1a/VbbCaZTFl1HMXLx0/PqzZqbV+aWpAn6YfO0Tj9eKnhiZ7
vt7c21/tXNbi+tb6yTruu8J5U9qVIGVfKdfxzALidE6UrLO3SZ84Vczzu/U/
dorT7WOT41NnbIhWE0a0cny8iuKN3R4smvExSlVsWebMruWJOu5eptjJqMJh
qmbpkSWTYil+aeSiyA7dQtWjD90L2mZk6t8dHfJ4j8fNa8ra89lGi7kZOr6h
y9VbW60eqtQWF2otqJSg+6ld1vuSRdATZX3Efe7amul6HOzfl2z9YuUj9dTy
TbPsStE6vs596yTbl3Fqe41fb0W3idPxyOWWm3rtilG3+m1r8HNglu4/3++N
tnRedFmdbnlsSdWNKbr939ZBRb0/zyeVXde0c5qWpbcz5oRvVin3S6rL341K
ROr3KsJU4DWPi0d9PRR+74Xfd1y0r/rr1atydHuMfyy2octP7VP19qS5tEg5
V8VPBakbPXZfoPierEUhN6x8VPU6g5f0n3BWb2d777V1R2dkK598Vg9WdaH3
L1f2Pe5dsqibWvCy2M9T/qVxqBD4qWfr4tEq/PajYW8XROj4n/nqDinYO0G5
zX5T6k1CuP5d87WVctdtT1Bvzju0PvgmWMffT+w07traJNVv2tJqH3PCdD8/
fe+Tk39TorplPqBI8YQAHa8ZOOHtsu0pKjnZXKU/C9LxTTNWjCm5MVldezal
t29Coo7vfNJz5uQOYSrKavrmolvc9O+umtYu7NPhdBVs/eHF79vv6PiKstcO
ml3MVGc2Oz92n08cTfVm7ltrWiWr26V/8h46jLiMv3KWbRsZlqQ2D7s61PY7
WmfFzOXZ+LgfUtXZ3Zmji/Wj+0k1fU/3+Rj5Od+sv/emTkUXHfdYnHOr3b10
daHKyd0JDvRdi15zPw7wHp6qrn1pd1NvJ35vaEKhjMq2fxP/rn5tkdrZAety
WkczyKhrlw7Linvs7qP7OWAf7jRgO753FqDnbfzuXsS5Zb90e0icUb4VuQ8n
nkhSbUOOLbz5xkWPc9Mz8RbWq/E6PK3jeB5/u9q3ZsdT6fp3VydWmFxpppsa
1OTNbN8yNF+98Zrpatd4i5r+3mrt+1mpOl7PeeXzovX9VWSBDPMBTlk6XtTn
Y7O9b6+r8Nk3CyxfQPEay3d5Wcy7pW7HOpU4G0/9lH5t4TZuma8qMeD5Nw4e
GTru0mlCmnWis+I+t7btHNv2dSKFz7U8ands8Ofzivvcj5s8rY9G3BA+9y9f
J/XggqvwuW+21Uv+6Wyo8LnXjr9c0bf+E+Fz8XuF3OcO21HTak7vSOFzcX7g
PreGtaf52+2rhc9dsWfhpVcZl4TPxe95cZ+bNG9bKY97a4XPxd/lPhe/n1X0
kVfdXSMonrx8ZtF3uRcU97/NF83d2mXrA+F/sX/uf72qvD1VPfey9L8jiixp
EXFC+N+JhzpOjnbYIPwv9s/9r5d/uT8sigQJ/3vttWOBgnvchP+9c35g/Q0R
94X/bbXlSLv3Vx8J//v2x8DFg/t7CP/rOHnj8J/jfIX/xe3k/rf0H2Ydbt+7
Kfxv3MApLwI/Ogv/e/7bxCKnSnkJ/7vb+B4l97/43Tfuf8OjFtwIPO0m/K/v
4Jjm7RYHCv9b/NC+igdsXYX/Pb/mRLLzrTDhf/vaj0uP6XNJ+N8A4z4A97/l
4/eXGeYaq+dLjOP3SbkvLtu08oCSKlT4YtWle91eKcnCFxfy7H2hbelk4Yuv
2s2deDAwUPjitMSHDg3CjwtfXHPhthxV+4rwxUda78sNaHFX+OK9hl/o7Fu/
+MhJFJ/79pV3dk684n55yoAizSy2BAq/vHdhtyHzwlyFX37e3eFTo5S7wi8/
GtCsedpPvsIv767XarzHphvCL5d92WVNs0Juwi/Hlh3j1/NEsPDLmHdsamc2
+P4mrRPQ8cah3PYPExX30csevkiaNyVI+Ojbq593f77OV/jotElTr01p7iR8
9OJ8DVyfZsYIH11uZs+RN6vHCh89ac+kVg3G+ggffdmqxJB5bWKFj15Rs+ir
x2sihY+eP7FJYJ2bicJHtwjq1TWtdIjw0bdqtqvXuneg8NFxNVpuWOEbJny0
c1bzd8/igoSPHtxijl3z+R7CR/8yofUhr39ChI9uXLn/4Obr44SP7uZd8IrN
nXDhoy1+Oj+jeoNQ4aPXbXNIG1H+kPDRd75zOVLf84bw0e1zBjutuusufLTZ
/ap+j58+ET56UkzBbQeWbunIfXTRcfXOdS0WJXx0/NjjD1b8Ei98tNmAkx/V
BBfho68Y90W5j859nnhmdmKQ8NH9vxtS8kLFAOGjC1n8e2LB4Qjho7ct7rv/
25UxwkevP/mqt/eOOOGjA/56cbpqhQTho9e2HzMk5mGE8NHno1IOLvo7Vvho
mwnpti/2RwkfHbWv6txns4OFj94e2XzN0xthwkf3mN0y+rVnlPDRFq5FPH2O
hQof/fG3A52WfkoSPjpo3y+FN7t4Ch89ocSUKvsPxAkf/TLn/MgRj2OEj559
0e1t3MBA4aMt7Ee/9myfIHx06JUrV+cM2yZ89MekXYkT3mYLH61WRbX98MhV
+Oi2S2dkdY1LFD56mcNsu10NE4SPnnDupO2dZUHCRyc/v5t20iZC+Oi9ZrE/
2xeLFD7608S+e/bbxAkfXVztfpeeECd8dAOPQ+lmc1OFj768w2rOmdxk4aOP
ewRaPGsVI3y0Z5ukKUVOpAof/WRsS4vcKhHCRxedU2uc07xo4aNP/PHI/JeQ
dOGjqz2+P/dIsWTho3/bGlWjb3aq8NFHF659NtEsSfho/D4y99HBRt3z9k75
d/nzP9Xbk2jUDS861JtgGZKj41Gzxg9qGZ6puO9Obe/cZMz/vD/EfPe9ec9b
HLicJHy3zY1zJ3xPTxW+u+K/UTvKesYJ3+1beeCJwLcxwnc7ZRTs8WlRmPDd
e/3mZBRIDxS+e49FrzoDPvgI391y/7XiBV8EC9/dbbtZpoWXj/DdfuZDLJ/m
+gvf3WDT2s6DJyUI3/1NVYeNXZpdFb77ffiNetad1gnf3bbTffPfX18XvnuZ
VZlyV9bdFr670KvGwaOm3xC+22tA+4FtzrgK3x3u/C5+48LVwnd7lMlu+WeD
PcJ3Y73NfXfZneftu891E74b23PfXaPyk/1JgU7Cd2N77rut/q3WKd+yU8J3
V5jT5MT6D8glku/Gfrjv/uZqsTLdzqYI3+3mXnHy4B3ZwnfH7J66bGVOsvDd
gw4VKR3QLVP47v6FQ959ys0QvttySew3jSemCN9tk1L6XROrdPVHdLEPNja0
Pc+M65b7cRxv7sf1cWN+HMeV+3HkXbgfR16H+3GMcz+OvB334xjnfhzrFO7H
Mc79OMa5H8c49+P4vJ/7cYxzP45x7scxzv048ijcj2Oc+3EcZ+7HMc79OB4v
7sexPffjeHy4H8fx534c49yP6/WJmB/X7ykxP45x7sf1+/nMj2Oc+3GMcz+O
ce7H8Xe5H8fx534c++F+HPeX+3HNnTA/ju25H8f23I9jnPtxvE65H8c49+MY
534cr0fuxzHO/Tj2w/047hf34xgXz6mNOPfjyB1yP45x7sdxO7kfx7zB/TjG
uR/HOPfj+Lvcj+M4cD+O28P9OPbP/TjGuR/HOPfjuD3cj+P2cD+O7bkfxzj3
47j93I9rHpT5cYxzP479cD+O+ZP7cYxzP479cz+Oce7H8Xe5H8ff4X5c+wPm
x/X9fubHMc79OMa5H8c49+MY534c94v7cYxzP47bz/049s/9OI4P9+N6PSPm
xzHO/TjGuR/H3+V+XNePzI9jnPtx3E7uxzHO/TiOA/fjGOd+HNRD+HGMcz+O
ce7HsX/uxzHO/TjGuR/H/rkfxzj34xjnflzvF/PjoBeFH39mxLkfR66U+3H9
PJD5cYxzP47bw/04tud+HOPcj2Oc+3GMcz+Ov8v9OMa5H8d+uB/HceN+HOPc
j2Oc+3H8O/fj2J77cdxO7scxzv04/g7349ie+3F9nJkf1/dpmB/HOPfjGOd+
HPeL+3G8frkfx/bcj+N5yP04/p37cYxzP66PC/PjGOd+HOPcj2Oc+3H8O/fj
GOd+HP/O/TjGuR/H48j9OMa5H8c49+PYP/fj+npkfhz/zv049s/9OPbD/Tj+
f9yP4/nA/TiOs3gObsS5H9d+mvlxbM/9OMa5H9fnIfPjGOd+HOPcj2Oc+3GM
c5+YdHRfUujy30Q936/vuZ1Xty3ryOvhBg26VI+3nCvqybE/Fxja/PVqcb3j
fQx+vQ9a4/iqX8YisZ0z0seZL/hnY0fvPDjtvLjrvPjevHjUvDjP2dbNn69d
TT4F43nxPAvz4HnyGoe8nu+Xz+P5eF77m9f4/F+Nw//V/ua1X637WncKfYr1
xmu1ZOyWP0JHeKop+W90eFM/Sdd7ziUitvVd/EhtLljYo2luit7fws41/3h2
5JKqvSlgfoUBScTbh985Eh/vqnL+3RceWy9FxwtVbV9k2oc76kRssekhRWh8
GmfurR51frtKtmk4vUxgiv7dzVXLXok8eF8Vn/a0du+3qTr+S0JaZPUJ19S9
Kz2rDv+Qov3y7/6/VvOr8VAt7JzumhAVq+NdykR9amYZqgrUfe1S4lyy3t/O
ue/H55vnpEoU8Z0/0TdV+9PdZsMPNbp8X41eHVFk1qIkHS9e7e2iXzs+VkPy
u5Z8eihD9190wtmp1wvbqvGjWq5oWZD8WvEptSNOfQxWkdvsCwSXpPVBzT91
9pucHa4WN5nSyWpmhr7eb4RuvpCx+aza1LVNYi8L8u+Tz06oUHCXi3Lwbr2j
+9okHQ+3mTS63Ccf9bh35lGvpAi9nci3WLUpG+zajvyyVftu7W12RKg3P8wq
Um41+ZGoBsVD3q2JUsnXKnesbEfrvKZMnXfg5cRI9SRp54c480T9u2all4T0
jwhQ3j90XHhnM61b3PHZh9w9OaFqx6FrMx+3oXE4m1jz08L9wepF/h6/1H0X
qfsJDBk5L6NUlJodf/hUt7YUH/Hq0/c+/lEq+mCDJX9do+8SdIn5Lul+W2+1
z2roitU59N2D4fUXehcb5K7M3txoZR1H64j/8drpg/N6T7U+dNexsyujdf+d
8xdvNmVjhMq3a1/WgXnhtL+ubxa26xenvitc8eiSg1TnH4mtc87cJ1z5HJ46
a7QLrSe3bu2HO6HH4lW/njn2vgNofeilF1rWivZ3V3nNY/WqNFs9xTpeX7+H
3kek/zA6QllOHjcv+kdaz75c95plDgQ7q/3b2/U1y6b1I+tcKO73e4k49cq1
/x9NI+k72y/mFW+ZvTtBxdheCFw+NFz3X8javVSPnxLUgX9/e1f2O6onZ/66
54XH8keqhXtMYfsoZ8pTjYbc/elRhhofbvO25PjHOj7p9NkHnaalqeSK0fl9
WlK+G1PjapZfCzfVI3T68CbHM/T8E7jz9LYBK51U6lSX53f1eeuoGmVuMbd9
HaJ21B+/J8IrU+/XxwUtcvrevqzWLds2t8yebB1/f6BzvVofbFXbTiXPD+xC
dXLWE9tBB4pdUXXWVYiKmfqf+XBQ+WJVT05XPilJkb88o34ca2/v9q3deHV7
Rpkxi8wj9XYeKrSln8eieLXRtVmy07MYHZ92+VXpbuVi1aPk8Ttf3UzQ2z/1
6cCQCjueqF2rGvpW6eWu2++usqnXsrnpatMfLWcvukzrBg257X+w7rDP52v2
4VuvytD6f2eP+x7Y8Dbhs988dvF9tQDdz/Ae3U+sWZCidpexntdjDNWB24OL
RjZvmKos75yod29YkN6viG9D4+r+lKTsVuxYNmBtkD4fqu2ednXMw0TyDUZ7
F+P5HeQzWt/xen831/LFU1T/Mmc+dfbM1Pu7eH7pzDLO9xXPFzOXX/3Lt8wl
kS/6/Brl5+56X+SLSWHfDfPqdkmVen8oqWYHuj+/cFdEV+vVV0S+CPX1adAy
+LrIF50XNwx9Ottd5Au7tg+rP7R9JPJFh+Cgokfr+4p88deAyLWp3/qLfFFr
6c6W8ZePinwRax3o9Xv8fZEv+rpf6v7+ZrDIF6FLd8VWKSnzhXNm2NTKI8JE
vuhdpXi+Wh18Rb5okhZY0W6Mu8gXPyTZZznlRIl8Mbp4rx/uDw8V+cKuRs/d
N2oGiHyB8xLPFzXH9xl4enWAyBdx9460m97AQ+SLbebzVq77nE95vnh3/OOT
hM2PRb4oszdy+b7vA0S+KGpR5sbaQn4iX/xTZ3Efa6tLIl+49rzr8ueycyJf
9Gm8dG+fJTEiX8R2TxtcbnGcyBfJIy3LjUuJF/mi52/XrSaNuyHyRZl+N1fV
buIg8kWGn/nrot3DRL64Vcei/suTTiJffL6E4h9ejBL54ppxPfJ8UcyjnF/M
xSciX3xyD/kxfUiiyBfLT/1YeOgLP5EvyqaEbm119q7IF606PGxvcddX5Is3
rv6x+08linxRfNA59/Fut0W+aNX+dci3U91Fvvj5wrs3A6+niXzRpIh9j1Yn
U0W+GJUvPq1z4USRLyZtCluQ4p8s8sWI6II/Vj2UKvLFnsKTd4a7pqq6LF+s
GTDbaWpWugrZnG7V6lA2jcOwbk3v10wXeeRYn1G3Zr1KFXlk8+N17VZVCxF5
ZFS9004+r8JFHum0YuWmpe3iRR6Zb9uk9OST10Qe+aaHZaEWG66LPHI639HC
5Vo8Fnmk8ZEm35b73C/PI9/OmFXCP+aGyCM/vu60YuCG+yKPeDxOtr3U/4rI
Izhv8DyCcZ5HnE+7vXKyyhB5BK8Dnkf0+n0sj+D1x/MIxrkfwed6PL9gnOcX
jPP8gtvD8wvGeX7B8eD5Rb9/yfILjgPPL/i8jOcXjPP8gv3z/ILPEXh+wTjP
L3iceX7BOM8vGOf5Ra/DzvIL3v/h+QXPU55fcDt5fsHf5fkF++H5Bfvh+QX7
4fkF4zy/4Pbz/IJxnl/wuuT5RV9PLL/gdvL8gv3w/IK/y/MLjgPPL9ie5xe8
znl+wd/l+QXjPL9g/zy/YP88v2Bc+BHjvhnPL/r+LcsvGOf5Bf/O8wu25/kF
/z+eXzDO8wtuP88vGOf5BeM8v2D/PL/o+6ssv2Cc5xfcL55f8O88v+D28PxC
z8VM8wv2w/OLPn9YfsH/j+cXPE94fsH2PL9ge55fcH95XsgsEVjD74GDGP+U
XatOhZw9JPLFm/g+XuPaHsrTv+d1/xCvN7yurxrv+5hud6I6H/3bPyMsaT1/
/N3e63bedk6+p69bvN/4Y4tL5z3/s74Q/m7D+fHHvdJv6fbYz7Hph667Zp7V
v4fxuBmNtgTMcNftMX+VHNPMNjD7mp6nMX7Y+mj66Ka0Lre+Hzj894VP5tD6
pZi/nhrvs2D/mI8aGduJ/WNecDDGAfvB/j+uiLJ7NMWLzV+vVY7x3pPpd6Fz
1cl9m5/+3CRQb6d+nyVuiE3ILFrnE/sZtOF/XlyZp9tjHI+X/i6ksZ04bqbH
MVeVKnb9otukxzqO7avt2nrXaYKv3n6M4/HF8xv7cXHoWMS6Ia1Xj/HJXduv
D849rvcX88K9qYPyD2tE69Vj/3jcMY7n4VNj3PB3sb338walBn9P3/HBeEah
iDpWdek7O7gf+UOOtOn+HXEb+jx9mF2jXz36noVej3b7lWY9a9N3eXB7rhn8
P44bxvcY70mZfu8vVY+P6bglsu2k79kON64X/v3bUsZ5rt//Mfo5boyb6bzz
WY37qLhfOl8bcdPrMVOft/j/YzxiWf7K/evT94zwd4tU2dyxa61Ydr0kqnjj
fMP+8XfxfTHT+TJVHVmR72rlUjS/4O8eMa5f0/16qtd7wXkQ25cIbH7yyPY4
drxidXvT4xWrjyP+/7g9k4zzFvvX74NUqnHu0Db6bhde74PZ/Ib9lDauL9N5
IFUFsuta399m86d+f+er81WqsmfzBu4Xnoem80miqm5c1/y79F7GdWR6XYSp
t+z8x/gT43wwvU5j9fuhpudbrNpgvGdnuv1h6q4xD/A6D89DfH6O+XGOkc9e
mORLRzXO4HFNx8FPz6umxzdMlWb5AtvHG/OA6X456vPZ9Dx0VEWN8x/7177V
yBem2+Oo86Zp+1j9PqzpPB+mjztyuBgfYJxvpvk6Vl9f2F77/a/mizCdH03n
yTB9HZkeRz+1/WX909XLyDo+nzGvmrZ3VOWN6wX7xfaHjevddPwdVboxH5pe
p356/sR5A9s3a+TntNs2mbV31HnBdDxTdR43PX/8NLeK6zdiP12un/b5c2Mq
235HVev4q+v7tvC6L0x9n5Jwd8/mJL1OI8Z7G89fTbffTzkUffKgYgnOUYWp
KqOLXzqwNUFvD8Z/mHfXY+emFLadsfq+t2n/screeI8S4zhOuP24ndge76ub
9u+n7u287FWuWCpr76fw+bHp+MTqdWywH/zd5sbxMt3fVLXNOK9M+3fUfLPp
+eynphvzs+l16qfnVdPrwk/Pw6b9OCo7I2+atnfU9Y/pdeqo+rL5GfMRzxOa
n75vtts3JZzN5/8a/74p6mTkRXidXPD4//zOUVEnI9fC6+SML9u1XdTJyYYP
4XXyQ/a7pveF3Ni8/Vq9N+ZlXicjN8Pr5A1sO7H/gC/7d5fN/3gfyUPUyXeM
cRN18pd+vEWdnGMcf14n/2McT14n2/x1aVJMjj87jng/ykXUyS5ffu+RqJMP
G/wrr5PhuBwVdTJsR4iok5OM48Xr5HvGeWV6ftJ9GF4/83yM/ez58vtXRf2c
YJw/vH7eY4wDr58DjfHn9XOQcXx5/YzXOa+fcb7g9TOeV7x+XmkcL14/F7x1
auqYOfGifs4Ydeimc1yMqJ+rbJi59H++J87r5z3I57P6Odc4/3n9fKFl+42B
aVTnY9zeuI54/czPH4ybvvdC9bPpPE718yvjvOL1858Wm+ZFZHE+76nOf7x+
xvmH1898fsN4MDveuD3bv/xugvj/cB7g9fN2Yzt5/ez2pd0TNj/gfBkt6ucS
H3bOHjU7gc23mcrbuJ/L62e87nj9nGsor58jAlz+dk+IEvXzUXa9436fN84H
Xj/j/WVeP+8xOX7y/iSvnzON85nXzxUMXorXz6+N65rXz/uMeYDXz3gcef3c
YnizzYOnpYr6mR8X7L/dwWo7Bk5NY/vjqCKN8eT1M8xvaaJ+rmpcp7x+Nr0P
RfVI7cc/rRw2I1nUz13iiu7tP4XqQu1T8DtwrH42PV+ofsF5htfPeN3x+tne
ON/4cXU1znNeP98zqR+ofuZ5Ftu/N+YNXj+v+jJPxul5A9vzfIdxvI54/Wxj
9MPr55fG/MPrZzeT+Y3q5yPG9cLrZ6w3eP18y5iXeP0cZOQdXj/j/VZePwcb
+YjXz6+N64TXzy+N7eX1M+ZNXj/DXdQlHXn9jPUDr59vmdSB3H97iPr5jUld
R/XzTaMfXj9vMuZbXj/DfJgh6mfIXynsuvDT76/y+nn4RZ8zvSdmsfaOqqHx
3imvn3vX/edQv8kZrD3/vmci0yA2n9NzUn7/mZ+v/D1WXlfzvMX74XU1758/
P+V1tWk9Ld875nU1z3P8eSivq3ke4v1/va5OFXW16f8v3z/ldfXX50MZz2s7
ef+8rv56/fdc1CV5bWde48afS/K6mrf73+pqXi9+vZ/IPOM8b/N8Y1qf8bo6
UtTV/DricT6u/Hf5dcfraj5uPM7raj6f8rwn7kuzfM7753W16e9G5jlv8Div
q033X74Xyevqr9dnT9nxC/tfjpes674+Pplie75+vyFI1NV8/vl6P/I5O5//
vj4PZ4px5/3wuhr3i89/2P/X54kgMa78/gCP87r66+db3nU19vP18fIQdfVz
49+8rsY4r6vx77yu5vvF2/O6+rnJdsSKOK+r8e+8rn7x1fa8Pk0X28nraj5u
vB9eV/PzgffD62oe5/vF+zUd50gxPryuxr/zuhrb87oa/87r6q+3pzivI3A7
eF1tenz4fvLt578r37PjdTXGeV2N/fH5htelecW/fn1JjoLX1fhvXldje15X
43byuppvf179fH1+k++/87oax5nX1V+/Tvn2yPdPeV1tenzl+3q8rubtsb6d
aNwn5/XMJPY8COvb3Yav+X/ZdiBd
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNmWXAFtUWhcd3RhzeIQzsxMbuQq9xVRQQxCQkBCVUUhpBurtBkVSQVlBE
MFEssPXade0Cu/U+i7V/3B/722vOe+acM/vs/qq37HhZh1KSJCfwJ4XfnCfJ
u+ALiyRZVU6SrlmS3AP+m/EV/L6asZVQY8bvZfy/vHQf4314XsHzRzzP4fcb
ee7L+E3wpGKSLIZl8DE8rwOPhS9g3i/Mv4v3evPcg/Fe8PbQSnAH7cGcLvAl
zDkTfjfj/4LPZfzz1OOX87ws8VnPgBaBL4PvCw0Fb2Rezt4Pg+fz3tGMPwRu
B78L2gy+M/OzxpfAW0KTwa3gzbUf+AL4Yugt8LLM36Zv/Jb1u4GXgjtLXuzR
UWflbNfGOlqvGbQ9+MLM+2nfafCJ0KPg8fDW0B3gNvAdOfNzOhvrzeP5WfBc
eD1oJrgJfAt7DwIfDD4HmgM+TTzONivzWlpzQpxN96j7lGx13kWcczLrXKbv
gl8KnSAZwldAo6FJzH2YdxoyPgZ8D2OrwSvhj2kteG/WORV+tO4IPp15y+E9
GR8Kv5jxpfAx0JXgHvABzNkf3pQ5g3Q34GvA08qeMxF+X+7zPAKfwHNf5nRn
zjHwIxg/KfbS+e9izq58UzfwIZKJzgLtB53PvArwuvDBoYfSx+E8twd/klp/
74/vGspvV4NHwftBY8HXZX53AXhgZr2X/o+A/5hax3Qv13OOKpoPPy/21f5r
cs/fAL+Y5+vAteEjOP+x4JmMr4fOB1fg/qfy20ngIdpH8gT/xe87VPQ572fs
bOZcCD4Hvit0uHQAfjPvrAIPgJ8HTQVflfl9rfMnvFNm25S+Hg49Ba4Bf4n3
b0p8r5m+H/wb+EjwKPCh8GOgMeCzMstaMt8Pvj80AnwY/HjodvkX+LHQJPCJ
8BtChm0z2+N68Hes/xw0QXKA/8D5TpXuctdvp7ad63m+LeYcAP6KOQvB85DD
+TzPD5u9FJoCbgH/Nbc/mMc6V4QPScKuZZtN4ZfINhL7Nfm3e8G/894I6DTw
HPg12htcH94g/Eyt2GtefONjnK05+GLwH/Jt4C/hDWXz4N0z34Hu4p3QsQfA
i8Fnh/3Kjj/LPed7fR/n2U3fxvmvDF8nnzcF2gDeGX4S1DNk+yzvTJM8c/ss
+S7JUfKcCP4ZfhNrPo+fbwmvmXn8dOlwbv86m73+Si0r+d2+of+yg8qxpvzY
P7L7xD76Td59HFygm4NC/m9JBuyxk76TNRuF76oLr8S8p8FV4dN5Hhm6V6Wi
fV1leP/4XunwRXFHkvnzqb9Rcq4D1ZV/YOzb3Otsgb8dWGOynZ7MW84Zbi+s
i8vLlpHWmQKuzti14FPgpZBnFfhxsnPJjfXfyB2ntuaWlfR5Wdn+X3etPXaR
j5BOpj7bDPAm+ZaSbUq2pXtcAu4OrwiNA58M75E5jij2/ZFb5iXkUJN3GsjW
4PWg43TX8CsCa2x1xGLF5CdTn0Gx7ykRe3dkvQ9DJ9+Dfwr1Aj8sewqfPx6+
inkddE74LTy3BT8OXxhn0FnWQE3kB+CzUst/tmK/4gd4bozfDH4IvgA6EXwn
fB3UDLxevhY6CHw4fFisr30mQq3AD2gN6Cxw69S2pPMr9g/P7ddHwpdArcFD
uYsD+a0G+ODU9ruHYht3PhiaDp4s3Wf8ZdkfYzNCl6RTdzLeVHJgzj7KG+TT
4C8AuoJnMf41z53Ar6XOQ6T/r/P7PKg2eBH8jdQ+9j/wM1OfrWdqndC9zI/Y
tzt4jHQKagd+LrfcJf8ZZccC+YZunHN+xF/FYd3RCMY7MD5EeqBYo7sLv/1C
xO1a4LFxv5LnNrmmjpWK+a/GHb2uuJv626+Ft4QukF3A30wdK2XL3UMfnoE/
C90ofUO32qWOWYvgL6aWQ/+Yc0Pcu3z4I+H3NuW2iUGcv21ufejKcwuoDXgg
/Iw4g/a6CzoXPE57QjXBveElqDH415K/U9+rnGNFYMmgDFUH/1NyXqEcpEfo
QruINYqhF8nPpI7R0+BdmNMk3RYqtuUqD6aOs/V17rCXfrKhOFuf1PZycuIc
ZVTci+6nX8xXbrUwtz4vhe+SOl4rbiuPkh1thneLu+icOv/Rd3fiPE/Ar0+c
M9yRWk9uT50XScdkByPDXhrBd4b2B1eXPvJbffmr3LKrGTq5J7Qv+DB9Y249
WSffJj1InAcO5jmD1yucoyhXeQC+PWN7gz9AtlPLjstrc99XnfADx6W20xPg
V6eOpw2ln8xvKv1gzU94/3jG6/D8RG6f8GRu2z8nsQ1LN+qBz03ts3qFz1e8
2wDvzzpP5Y6/t7H2o3H+SaHbyqO030bFcvCtzHkaPFs6lrv20XcpF5MvUr6q
vLUDNB7cUbIPuUkH24bOS/eHle2bO8cZ5Lf6gZfAGzHnbvgO0KHg30qW2x7g
ivCVcS+6n3dTxyDFoo94Hg5ezNp7ZL533X8N6GDw96xTVfcH3hFeJbU/+YPx
neLedf/yV4pfZdY4KrWclWcrr1A+MplzHsLzXuHPFeOUi41W3cdaBzB+UOpz
6Dxf5q7dlAu9Bd4x8r1q8AE87wy+hd+n8P6eyrdUw4WvkD7LVhuHHD6DKoO3
lvy9OygW8l6FyDlT5Yy5/fmU3N+mb/wL3pN134NfyvyCdXdjvHJqO5e9byed
r4Q+8965hWukQYlzV+UkypsmRZ4jH65cZjVzOyuW8fv7ueX2XuQSyn/HMv9X
2Tnjn8F/Yq9dwL/A34eqgX+G/5Q6XijG/A7NCv05kD2HSZ7w3sqLJCvWHqJv
T3yfO8adpmF3wkPhe4Xt7C7d590P2edyzlMt9Er6pZio3xXv6kC/M6dv2fFF
frpWYd3QOlqvcshtb/hVhf1Rf+Y3iHWFR+X+/QrGjocfw/yTZcuFY+To3LG2
RviQ02POKfJR/HaG5Jnb3hUXFCdHgi+XDUVcawa+Djw2t75NE2fsyPAVlxT2
9bLZxsrfUuuD5su3XVl4/umJ68m+hXMU+RCdRzXpbvCGhe1nIOt8HD5HvqdJ
YT81uGxfJp8m+TaLmnYI4y0Kv9OLNdsXrt9uB88A7xV63qtwDFbsnla4FloC
bl44nik/aVnYD0oma8A35M7DWxeOzWPBbQr7mnHgBYVjj3xUK3Bj8CjGZxbO
4V5VnlY4/5vJ+JzC9d4K9SEKxyHV0cpjlM8cKd3M7X8kh9bQ2tATyVU1tWpr
2ZfmaO6nYaey1xtS5w9tUufxyufVk1D9rnufrPqCfW9NHWu6Fs5TZ8nHFq7f
lG/PKpxbKw+/CLylZL+xJezoB3gedaV8i+p21dFXwS+AjkrcZ/iuZJ8jG9Sa
22W22T6s9S1jdRnrV7Y/qK98qbA/Up42oHAsvye3X5N/Oy/8nmLin/AxPH+f
unf0VWlbOyv5omTfNkS2Ax9e2HffodhROK9SrpjL5plTQXdWuF+jWlU6I1+w
NPSkXe59J8iXZe75bA2Z6xv65N63N7wfVCh+5T6Hxj8vWV7VIi5cXLgH0VR1
T25ZSW+laxvAR6iWZc4XqXNX+WrFmEXMX1Jyb2pp+DT5JfnZVmXXd6rz5H/0
Xd3Ay1Uzl9wTG8E676f2n6vBI1X3ge+M2k819SWpezKyf+VSyqkaKO4x59/y
YYotzNtYsn1dlDonrKUYVLhO/im3D5K+qdchf6K6Qzo2PXcsk81qvcsjZ3gn
7F0xcKH2ylwL/xl3rfymI++sKllucyMOfSi95XkD4y3UE4WeKfnuukGbSrbx
ddLtzPWseqG3ZO7PrCpcd73COucX/i59n+pQ9VBUP95aOF9R3tI6YuiPJccG
xQjFL+UJyk9vLJwrK2ceDH+Q56mZ6+42uXODfVP7/sN016ljjXSkduH8XDFO
9cN9kaM8lDuudfq/mKu8dHxue1ItrJp4RSX3s2bkrqFGM/5u7h6RYuv28Ndy
1xQv5o6D6hGpdta4YubIwj5cddo4xhpFXJHvlT5qza+kl4n7sdslrkHUR1K/
+JvUfQP1XVXHqh7c1mth72fAC5UrFa5h1KssI5fJ0X9YlLnvpP5TJ8UTcPvU
/WH1pO9nzqTMfbBKmfvRqvd/ULxTfwc8TnYLvZy4VyzfoP7V6My/aY56re0K
10uqJX/LvZd88tKwL/XdpSMPJu4xqgaT3JTPf6C7Tqx7faJGku4NY96axHXl
8Ogdqff4cczXe+3ju9Qz+lg6rfHUvle1rurftanrss2p5aD8pHbmXp7u66jM
Ndr0xPWIbGV+4h6b/LnqfOX/e4cP3Af+CmPdE/dR1YNVn7Bq5l6W+igTC9cI
qn2ng9+I+31J95tYJq8kjlnqEavnrO9S3jq+sJ+R37s7cw/+hcTP6skzPfm6
5N6L6oKtDHRRDcBY87L7hOpNTuWFgYX7EapxXs59fvm9qnFm9aqa8/vaxH3X
v1P3alQI6o511+pbLiv8vwr1USXnLonrRunPE+AZmf2BdEm91bVl9/PV15e9
qsel/r/6YKovvmCdpYV7QPo/y0z4k+Gr1c/fBJ6fOT5sDCz5vRE2siDmzM78
/4JNMXZH2IXGZ8TZZA+bQ+7SQ/kQ7aeem+Qq+b4qXcwcL9RrvDvk/w0vrC3c
C1afbaVivfSy7L6Y7KViRX+v/l+xnt//By0yZCM=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmQncV1Max6//uem+91/2YUKEGcoyI3sMo4xKEVqUZCvapF2LpFJJe0l7
6q1Xi/Z4622jiJhiLBHD2Blk38XM8Pu+v+Mzn0+n//O7z73nnnvOc37P7znv
Me17NO9eSJJk9T5Jkur3SP03Ur93q1WVvSZLkk6yG4ckGVZMkkeFV8i+Tq1M
9lpdu0f3bdA9DwhXCJ8gPFr4I+H1wgcKjxXOS5JkvPC3evYbtXGyZ+qeZvI1
FF5VLUnG6Nojsvvo2svyLciTZLHsL3VtrHzL1fqpv2W69ov8s+W/XvZj8g+R
7z1du0040z0ThRfKv1O4mvBk4Yfkv054k+4fKtxEvzcJ36j2hOzbdW2efi+l
T907SPhC4YbCjwvPU3+9ZL+ta6PlW63WU32v1rV99H3rhNsJP8oYhAcIr9S9
jYS36vmHhNsyr8JV5D8r9bsZwzbdt4K+tCAyk6Wy++v+MQKthKfr3WuE++r6
ivh8P+HB8p8pvE79XyL8mZ7XT3KncH3mX/YeXVtZzWNm7D10bZf8jdTXEtml
rLHszvJ3k/8K4TF6X0NdqyJ7mlp12dPkr5l6TT7R812Eb9P9pzNe4VnCVeQf
LvyK8H3ChwkvFP5YeIvuHSh7plpTXb9Z/ht17VrhhfK/IrtCdgO1V2Xvr298
WvZnsjfp3rka0wjhJ4XvEX5Oz/TjW4TvFl4Q3DfvOFj9f5157A1kl8o/Sa1E
9jBde1++e4vxu4Q/FH5Bz8+Q3UXtXc3ZTUXH+tUxvt/J/GwTPTNfvrvUHpe/
c/z+24SXCP9NeDN7ReOdIvvPun+OfF3VrpX/DF1bJf/Jsk/Fr/Yvve8W+Vvp
2uXsSfmfVDuOtdW1wfINV9sZx/iMfCOEnxXuKrxTeLfa7bJP1vtmyzdDrRax
zxpqLOekXmvW/FzZnwfPL+vTLfV+bMD4md/cc/qi7L6J53ogY5Z9sa7dIN8E
tb2y72T88m3MPJYNXCP21dbIXqlra9XfA8Kbg/cg+2mu8Bl6773C3wiPlb1R
9no4iHGrPSZ7i1qn1Huevf8/9bGk6BgmltcKP1x0zLH2/w6OxanCdYSPFW4r
PDJy1Vrmg3XVtdPjGtyne+9S+53s77UWlxLbwseyl1kT4UZFxwXx0V++K4gn
+X4vPCD3+JbjS81VPLOP/Mck7quZcBCuITwic8xfLLt98F6AQ4j9Iam5pWHR
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
DP5/p7OcqQ==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt0TtLXFEUhuHthaAjpLBJVBxUYmNAA4Jp1CbaORZqo+WABEQUEUFIykTB
zAjqTLyDF1DEK1aiECwU/0H+QBqjRYiKhabII8fiZa/17m/ts885lcnBjoHc
EMIrvEA2FsJiXggV+SFUogF/C0J4y30XPMFHfbk+jqR8n75G7tz8pv1+bgW/
7H/ij/nP1v2iEGb4FD+JLv6bdZDf4+tk6jHK51iX+V2+Vt2ERjTjzvMy/JzZ
BUyF6M7D8kfIyJw9vYu1GBuy92Y+qFvQive45bbslajLMG6myjrvjDX+jzPf
6KsRx7X8T/zmr3GFS6zKPvDdMm1IoAcHT98SpzIzmMYRLmTH8FL96Hv9Q776
y/N9Ss1e6Hvd57U66z7bRdGzNrgRbgiHsmkk+Swy2MUP56zzN+qUXBqTKCh0
h1j0zb9iDDuY5ZbNdKnbkUAnJmLRf3ln9l6fDtG/WHKX/8RkS7g=
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
2oKn0u5JHJd+nnVOIX93Mr9HID8F/LHgWHlO3rZFZ7F9zvuu/d+L/MhoNyqA
ZaOt0D3/lX7Xwg+DT0xt395Oba9lo9qBr4HTJde3zzu2bRHj0Emyk7ITqeMu
+e6+OfsFnXXZgetlrxUjo38dfHDweBp3LX3yOdtY2c8hUWefbErOeVMx57ul
db2R2L//gr0aCz7BuIeD5Yu+X08kjm+/Cua64+3jnsjWjY19Z8nP521LmtB3
NPJXoq8ZGM//xuD9HRF9imLxCdEnyr5Oizb25ugvpsT4X+NovCo5r71xznmi
7OaqvPdQ8f+78fw0TZwj9Iz71jeOLzv+emJ7ciY4MDiPeCXu+XW0p+DXgkcV
HYP2Z8wTgmPF/uDk1HaxSYzldcbkG8sh6w8vk3O8orhlRrQnr/H8b85UA/pc
yfMDyCsha5g4pq2aeg+r6V2p4xCdvf08a4NO6ZzzcZ03nbvSwXncZuVu6J8G
H5o6L9Z5rFD0PdR91LdcE8xlkyfHOEp588u6S/AaOcckW2Lc8lHeseR8+F+0
QegtRnZ91Fe/6vS5N/rHX3h2O7Lt6Nbk9w2J4+w+jFkrcYwhufhj2kvFPazx
mNTxZwd9C/DdrGNjxdFD47oUoz6W+r3Kuws6x4lztMnBebdsQk/asYnnMZCc
9C3287pDHbM3lz3XPWCckYm/ab/UecMe5jxaMYHOqu4u8pbwT/NeV+PENYEy
OruyXWAH+vRn7M/Bs1PLZX/+YP4hcR2jcupYcQDyidGHau1nBOdHlyo2SZ1/
9QYXoXcesm2M+VvBecj3yLZnXRvRtzkDvdqJY+N50XbNBTvzu1Vi/T7Bcz47
OI9QDvEj8uUFn+Pv4EtoDdA5LTUfL3/I8zkxPldN4C75tsQxyRDZ08Qx/3XB
fccF+1H5U8UlA+I30reqH1znOSrYd9yXuP6jvEwxhO7118jr8vzXgn2H7HNL
sHnRMYpy/1Piu04MzpcVV5zEs7Y8q5q4ftIh+jjZVdU7VPdoIH/D72HI6+h8
Fnzf5ut7Fu2PH04dZ6q+0Trn/FuxmWI0+SnVKFSbaRxtjvL0pvBb4duC81Ll
p7XBjXnHVlUY+9u889COjN+J1gL5soLj1NHRB2nt9RLXZJQv6Pu2S50DKQfs
DNaK90t+9wl+t473VDUmnfnnwe8LrkfMzjsOGZO4ntYlZ/8uf688UPmgcocJ
qfNQ1SJKx3tUlC0MPj967/3o9E6cQz2S2s8qd1ZsqbzgIPhg6lxja6xRaJwW
qfMl5U0Z7QUtl7jWdEscR+M9pBgl8f5/h34C/0f+l9/lEteUPo3nUOdR8ady
7ZHBdRL5MNUcxsd5boE3Sl1na5U61lBtRzUe1SfOT5yDjIq+eGLMubTnulul
cj7D8onVgvP9qsG1x38ynpt8omy76p8l477JDh2Me6L4r5fOd+L7JbunGsCu
guem+ujXBZ8TnZ1i0evRuhQHXxZcQ1AtQbWfk/Wu4HpkI3iP4JhQMdHWWCMp
lbhuoHqRYlnlv2NTr1e1TeXE+taqPWiPtFf6tmtjPeHn6DsUR69jzLmaH7LP
8raHVeQ3g+M35duNU9dtZMOHR7uiGsVVwXGi7qlsQ7N4lloFx6LysZsY4zjl
NRnXM1R3Ut1G9RvVZpUjN4n3RXuovWzHsyPhXYPfoXfJTt0YfHdkqxcU/D10
/mcVXGuQT+kSXD9VHv55cKz+JnhuXFc38MLUeYTqZjqfyhFz7GVTcEXG9lP1
DNnn83Xfi44dde8qFh2LKL8+P+qoRqsaWunEdlw5wgWJ85lFsX64EOwiHy0/
kjrelo0aHecseVtwOXp/ob8061qI/IX8Rpu4J9qbGdGnyLfI1sjmqH7SMTiP
U366ML5XdaKaRddkFbvqLihXzhZdc1a9WrXKk4LzDtX/esSz96/gXFpxjmrT
yuvlCxTTzMq7FjWbvf+k4LqPYh7VdRS3KH5R7CD/rhhVcYXWVS51PUp1bNWz
VWdSHKgarerwfaLP6hX3pHFw7UjnRzVE1eEViygm+axgO6J6r3zQU8j3IesO
vwi+Gl4htS1SXqDcU/Fwj9TxqmLSQtHxgGysaqeqobaF9wuu9ciPq5ZaH50d
4FcF+/qyiWuy+2M9SvXhFXn7Jvmop+NdVk1+Y6xbqn6p+65YRTGL6vM605em
PutHxhjjm1g/0n3smfq+qC7aVT4j8f8mFDMo9lAMMi/vWvXGgv8/o7qH8tPu
UV/92sQ917tkP1fwvCRrHxYca6kWoRqIagWqGajGKFtRC/yi4Dqv4iL9b6VG
4v3V/ZLNUc1iStG2W/+jWRXrutqvY4P/lyF/vz44R1Z9SfGPbMyGgvdae67/
cciHqia3Cvn/ALPEbD4=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmXn8VlMex58nz7269/dYWmlTUUikPUtZoiglWygUWYeUkEQzKSXbZN9l
MLaxpBRmEFlLCdmSlHZatZeyzPvj853X/HFez/dzv+ece+453+XzPU/DfgNP
GVCpUCi8WiwUSvzelBYKE5HnIw+qXCj8yMNq4Kq05ch1s0JhKbq3kN+pKBT2
AxfQrQBPBy/idwOPdtB+QG6K/nfk35E/Q185KRS2gfdkzD7INdB3Rn4V/dvo
Py15vja0WciN0W/h0QLkaegng59E9wFjW5ULhcUlv1PvWkjLEr9DczeizeTZ
HD5wEXO8glyb8WuQZyC/y3xVwBXM9zJ4CrghuAj+DPxehfdjHuPn0sYgT+H5
Ksavpn2M/GHi9QyndUJfj/E/ofsQ3VTG3w3uje4P+h3MegfkXo/W9T76ozPv
7UHov6vwd+p7N9O+Q/6k5Het+t+aGd+W/l8jf0D/qeDW4DmB9T0HgWsx31zw
pazpEfBDtKNSn9fOyLug/xr9Qsb3AT8KLrC+dvy2BO9Ka4l8Smb5cuSV9J9D
/0HgK8CrwFNyr21K2ENHnh9NO1ljab/xfF3Ba/67zoX5toLX8nwG/auDfwXP
B38E/rbkb9ceLEPuhX43xl7M2J/Qv8P7VqCbHuejd9RBf0DR73479369j34C
3/MV+GB0F6D7kf7Nma8S+Cf0s8AHZl6f1vkp+ELwIei70n8juAF4OfqpcZ4f
lWzPspFpJa9D61kZ9nAG/Y9D15fxy+l/Or89afvS9qN1Rn+P7Bv5e/SX4WMv
YQ8v095jfE/0R6Cvj34Z+pPATcC9wEvBx4Hrgw8BzwefAz4WfCd4C/gsfuuB
D6OdgDw7t6+1R/4B/QD6HwMeCP5V8/HbSfZA66Y+9D8R+UXkP9BfSf+TwM+D
fwd3B3cEdwcvAnfI/L6zYr3Sa67rwdvBXcGNwM/IFsCngY8G7wX+BXwMuBa4
KXhJhe2tG/gM8GLwDfJz8IGyX+TPWV9TfR/yggrvl87rbsUV8Hz0h4IfBG8F
H5HZNoaAV4OvTYxlM3+VT9KqF20j5yFfQv/fCrbVzfSvl3i98qkJnM885j8e
eTDP16P/HjwWfDt4k+wl8fkdTnsEuRvz7YdcM+zpfHBzcAfwOvAYfu8E36yG
fCT6BLk58jz0O0qOhYqJ2xUPeLaF3194dDB9r6F1ifc3xd77pLavO8Jnn0F/
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
u04+U3btK/6u/dU+qz7+V9ig7s7/Czo+aMQ=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtlndwVUUUh+8L7z657z0FDRAIAyEMKDV0EQIkFKmCoTtURXpC6EUCQapj
ZkBRFBUVkCYDjjQVBVEEpEpvCigwKDUgoQWI4Pebc//4Zvf89my5u3vO3sR+
wztlxjiOMx9c2BJ2nK1Bx9kJgYDjJHqOUw9cGoMQg1YHuxrcxOcW5MHeiOOU
DzlOA9rfxW8pLIMJaMvR3qAcB+PhOnP0Q3sd7uJTJOo4+xmjLvYZylNwGn7C
7wDlY8HaajNnEN9d9PkQ392ULvZT/rq0vjBEYA99S1HGQSXaGnimxWOXh0T4
nTUfpzwGJ2A6fkcprzLflaCNWxitCOUh7INwGB6wliOUo/iWkRCAxfhlUKbC
x9TX0acJ9RRwoYs/dnHqJeAT1lOSshTEQxzf0TRk3xWibAbN4T/6FMAjGEDb
NcoE9CzqL1A+D/WhLoxB60S5B5+9rvXXODNgNW1TKZ9Df1Z7Ao3QKlI2ZS1x
1NtQz+W7KmMPxHdAyNaUTVtvnR/6Rny+gW8hwJqHoA+GoTABv3TKX9jnS/4e
ai93sc/V8C9K+8ag7b3O4Dx+31O+BXNoO42dB6UZowYsQPucOStp3f43foRW
L2TnNZN6EvVqUF17p29DG0M5Dz6AZPRJaJV1N6EhrFWb/009oRdcRXvZ399/
4CLsY625nHV6Yb6J+jZIZj0V8StLexntM+utgXaPtvuQD/v43uqKGfzuYN9W
X9/vPuMFAxZPhyIWdLrbAdfiSPH0K74h3T3w4CB+taJ213TnhsHXjPUibeMZ
q6XOGlroG3TH0LIpn4ZndF6exWAW/SZCAeMfgmSdPTSDs8zRmLImfk0oUyAV
yuJfBhpBpn/nztJ3A233IV/nytrWRG1/tE8Z7FdzxnuJedvS3g4a0rcd9kro
xhjdYTbaMuzF0BK7FcxC+wK7NOPVxK6lfEH/y8y5Bv1T2hfCaPTa+KzzrF4I
PkNfj30R3/P0meTnHn3/BhiD7eiuoq3VmeGX5s+bg7bEszmGY4+AFWiTsNO0
ZtdipxxaR8/WqLV2wK8j5DNWAuspRj0Wqmo9nsXCZT+fKa/9FrHzfcLPU8pX
h9Hq4htmvBjsQrAjbOvRutowVmu4jZZNOTlkeXUJbVMod0csbuOx8/nESvQr
F7W8pvzWDp879M1An+tazCv207G3op/QuqAe2hC0VVCLel/6TcW3r/IBtEHb
hJ0JPXSX6dsVn/4h81+Ndgoth/blUEGxiHYD7QH2Q+iF9o5nb8A9X3sNbTba
ZM/icg3afsUhPrlheyMea069Lfi8BzH+mesuzMV+H3pTP6V4gWzseXovQpY7
1SafqXBSuR+GoE3TnDDfz7t6W7KwjzPvCP8N01tWwB4fgHPs03n4F6ridxi/
9rQvUl5mjFZo0ajFomIy17+7VTyL+xv0uxa0M9LeaI9W4PMqdMP+C99V1L+C
NNpGoY2HH/18prwWw/gj0EbR/iX229AfOxK1vKX8dUkw1i4o6q+vme4rfo0g
RbkVbSH8Gbb91znkYd+Ca2iZaC3QFivfs+YS2NvRHylHwXXuWqw09uUY9lE4
Dj/jM0z9C1vuVA6Nx681JDHeAOVu+AOfXopf/R9gT4STaD31zdQnuJZrlXM7
Ue/o57dUtDTtGfo0yjdhivY6YvuiN6CC4gNtOPZ05SG0bdjn9N7ofCOWG5Uj
Y2E38x6D/tQ7aE9Y8yzKPvhmKZe4the9PYt/5YHiaK9AZ+wu0IN6V9dyxQXG
7+e/FZOxB8rXs2/zAhbrVbTP+M1AO6P9cG2dWm9exM61ZcDi6abuXtje3SPQ
Cr277rxiSvkVqqL10X6gD6K+j/pKGIldwLnc8/9b8v23arS/Lwfw2aL9Vhx4
FheKj78hB7s+xKJdpM9dSPLs/yGKNlhxBENdu1u6Y52pd9E6We9BaEA9HTIU
C3xHOfx2MM52uMCaErBXQOeQ/b/oP2aRZ3dLd2wdfmvhB8YqH7W3Xm9+e7ir
/wX8LuG3ST6wGW0nPMl8xSCkdwufsrAlaH7yL6O4wm+zvxZpGisVqtMvybU3
PAX7Cn43sBdAMtpYtGLwkD7r6btB44bt3Vjqv7XK08rXJfH7Lmj/PvoHisMe
xzhjYTS09/9ZWmivqdemXkc5kPHaKm503q61yWcwzFHu1L8F8w/CbgwJep9c
i23F+P/PLILN
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlz70vXnEUB/DziBaPR0riYUEiXhqGRlhMuhsMwsZA00rfCJtNwqyLeInk
8Rf4ByzKIJEQJLQMXapNNQa0kZRU4nNzh0/Oud97fufeX+PoRP94UUTkecq3
bMTSk4h3vOVT0pdF9NCub6aJNvbMduQiPjpYyESMq7/lF/JjRvVDDDPLmeya
EnM15Kllxe7L5J2ZP4zYda9W2f1FPqGf5L18Sr0sj2h15rw44pAjzmiWTfPZ
zDZbbHJuR1Mu7Wfs6PPNXm7l39mQD3he8G5QfW72h3xH/p8Hbpm3+0T+Sv+a
F5n0jr/8z4G8W/8h+U/mknuYv5GX2bnveSyT3r06l973RlbgpfxKrZD/lO8m
+829YYx1e75m07v/445n8kX5Gp36Flrp4m82/W6pPke//afO5O1fNV8nq6eB
SpZlj7VXRro=
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.560181, 0.691569, 0.194885], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
31ojWExvCl6ls/T8Sr73/IzF6xKMa+BdkRit/dS+aj6Sr5K3XEO2/0CwPCfv
8Uj+5Azoz4P56gnQ7bPmE8d7fJ/Fs4aKKeDvwdal9fXXeiWD/gr67TGrMqMB
9POy4dj2WflAz6yd0aZgee9NGctnBrp8P3A+z1pDfwke5vyCbC2ye7sQ3p2J
naN8nfzua8Hikc6pYtbin/JY5XU74DXhvZ2+xtcVl/wu/Rgs1igWKDe/0m1f
PuBAsDz/l2C5q85d56986RvpQud94CfcvXJZi5dDPRYrzl4pH6jYFdt3ld92
4dnV0J2ytr/aZ8Vj6WsOvSxYnal6U+t8NZieolmzu0/4PYnvNwnmh+uDDyV2
NqfxfJvqXfg7Isv5ld+fDa5k/t8od0P2P+BKZN6O7JlkVEf862+hd+bMT/6C
zAqwR2J6Y55vd1+6W/VfZP7q68h+i79XORjj17T57qOR5cN/glvQuxx+XvVg
YudaJG92K/vdkTNfvU31QmS5snLmjGwhb3VtK/ef90I3gV4OvRi6Q2K5333Q
HXU+OcsV53otvwx6ac7WrLWrtp8VWa44E+wSW97SC5wXmfwHkdWDo+X3wBPK
OeB/gp7anhMq7n6mb8CfHRlf9lVXOU/e8oWnEtsj7ZXmOs37BpqraivVTmOz
5o/kl+QXVGdsQWYreHGwmuhWxSP3M/I3YxKLtYq/qpV6uu9SPO0H/bfim9uU
bFH1teqkprw3zGsq1dTbgtmL7Ka0xwj5sfJuy7Lpt11nZfAF+R3o7+W/vO5+
EKyC3LkZy5O1duVgysX2KxZBR/CXI/c58hsj20ftp/owa/i9Gfp7nQVzWwBG
ectb3uD9x+Et9D6P+j2/R5bbH4jMDw9G/27kvvLzlZ4U/N6Kv+AK+buM5dXZ
rO3z+8HOTGcn21AvZKP3E3J5u88bmGPH2Ob+MHMolLW1qA8ww+sF1Q2H+T0Q
/j6wYN56SG0Ty2l1F56Drh+bz2wNvurxO4J+yHsp6qks8pj7YrCelXo46uX0
CpZLrAZvdlo11BNey6im+YzfHeHvDebzurp/e4FvNZLPZS5b+d0W/vpg567a
QXn2M4nVOcqZ1b+a6nfy2cTOVTnnLuT6+j6/43FEuaRyeOWt9yTWx5novn1V
sNxgbbBe2b+2E1nd39L5n3rOID+/0n3+hmB3q5nPU3mUasR70f9gYrFHtU+F
2Hym6tZl7j+XB6uD5T/VM1FvYaf7/3rIN5FPBmd6LFMurrxT+adicwOvX1TH
LPa9+iJYbaEYpzz2v8F8gu7PBx5HlJtM9Zy+YmzfUiy9zXsdSz1e3CU/jfzj
HrPaezwa4fmb8ripvs+69yfUW2TfQrB6QPI/BMtJ2kHXAH/zu6c7WCm2HmO5
2GK8zkhnpZ6VelT3J7YerUv5n3oIOiflRapTqnt8V79E+p9xnapdJqoWU7z0
+auXUg36oWB3W3nZHcjcHiyfVK/nqsTqf+XDipVXeS6knpp6a8pla/u5KH5N
DjZ/1SAz/Q58DD4XLE9QLqH9UdxUvXye67kNvNvflY7CbvvyAaopVrKPnZnL
HO+1qud6IGc1whGwT2I9I/UA1Ufam7aaZyj80mAp+Dcl5vtUq34XWSxTb0Qx
WLE4HczX9PZ43Rv5PZHFu4Rns9JWEy2Ct8ljZZ1gPe16snd+74Te6b2mVbIV
5jYK+lhk8THt31Jtovpd9bVqEvWdMp4j/eZ35khksV711GrwPPmvYPFd/e91
3uvY5PQycAAy2WA11AKfp+a7yv2z/LT2QzWjejaH0xbrlXOs0ztp6ycP8Z51
SejqLreEdy9K7MyUP4+EbhCstlL9pjruIHhZYr0n1fjdE8s5lHtcmlhNWzlv
sU9957KuX+dYRvcuWJ6sfPlG+YtgdU25YHW6+mEhb3lNL55f6bnUMb57eWL5
n/JkyeierIb/ZmJ+UzXFJYl9Q3Xfv3uZtnNTz0u9L9V4R3z/ZbvKGdSvaqce
ZGK22i62vEQ5hnKNxTnrX6lnvtnj6RawX2JnuZXnNyRWC1VHpm9icVd9rfU5
Oxf1JHVu+7y2HZxY/1H1YymP6YrtTySWQ6h3XTxruav61cqjdIbfgucm1ptW
b1w1o3ra6nPr/qgfp56A+i3qZynnl73r7BoG+3+L4rvivPQobqmmuzaxelvn
295jueK74qzW2hPe9YnZsHpKA6Hzutd5y4GUC+3ynHM19PzI6mfV0epVyD7K
ZqzW057o3q4F9+Ssj7rX6+slnis+6Pt8HDwlWO9duc181y9/scdzUeUYtyTW
41M+r96j8tJD4P8AmbhAJg==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmXn81VMax++91ffc+/3e9lQzRb9UopClfV8kLdqjlRRlS2NvKMbeYmfs
O9kZM4ZWImQJEVlStpJS2SKkZT7v+Zw/zuv3fO5zzvme5Vk+z/k1njB16BmF
XC73bD6Xq6y/t4ZcroV+2Feto+QmWS63v+SrJE8r53JNhdsLny/8d+FlpVzu
JY29I8nlOgjfp98Plf4CtXuD52ssubvaFZIfVWtV8JyPSJ6ldprk7ZpjtuT9
Nf8Y4QckT9d8f2r+WsJThM8Urp96fcx1ftnrYi7mvEfyjWrNJO+ndovkZ7Wu
FZr7PbWXJB+g30rSfS9cllyh+doJ3x+/d6i+31Z4pfBM4Qrhk4UnC08Rvl9z
fKKxn6k9IHm71ldJ+tbSj5M+p/6vSXerdO2E2+r334TrsCbJE9ROlTxBbWLw
/upL3qH+x6n/e8Ir1f8r4f7Cb+nv58IfqL0seXXib7OGNZKraf0fSz5Zc52h
/p9p/FrhldL1E15X8vdZB/OX1D/V9+oLnyL8rfRbpC8KDxOuJP0+0p8mPLXs
8zlI+DbhOcLfqP8X6p8JDxc+WPvtIP1y4SuFv9PfvQre07mSd5V8/9jS8dxf
5vPvJjxeeAvzCI/lTrAdtUPU8moFtUz939X3Vmk/A9W/tXAf9V0n3TXCn+j3
t6SvUfAZNMt8/9jBBdJv0/e/lf4Y4bOFq2s/1aU/JZ7XR9J/lPeZfSp5YLDt
Y2MzJe/Qbw0k/6HvnKX+jTT+YOEvpbtauJ7+/qyxv6g1RVb/vPQ/qf/p9M88
32DuXfj3xPMFtVmSvw3ez5FqG/EV9a8t+WzJf1P/Ufre+Ywv5nJPCdeVvqZw
c+lHCxeEl+nb92iu9sLHBu+3kfpMxzc0vpfkRZIvkf5Ctds5Y/22t3RXS+7L
/GpzsFXNUyjYphPhH4S/0nyb1bZLrqTvvSL5QcmdNNcb2u+bwg8LdxY+LNj3
uINLJS8qeS1NJJ8nfU2Nnx99D/v5ouTv8d0hwn/RmpoLXxnjTVF4g/q3CT7/
eSWf3S/qP5T9Fh1riDnDJf9e8vdZxxjsPdi+txIDEscp4tWl6jNO/dcl9jfu
cLfkrRr/h+TaGneMxp+BX6hv/xiD1iceQ989aovUFqr9S+0Z5GhP8yV30/jh
GnN0wT70muRrsUN8Qy3V949ILWeSb1b/THiHxp+ufv8U3jf4/LhT7vxHzb9b
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtlnmUj1UYx9/5MfP+NmSbzFhnjJ0JkzGWOcgYw2AyMsZ2yKFNJ6pDR4so
OQoHkThKe0IRldRBdlL2dQzGXilro5Clz/c894/Puff53uc+9753ee6bNGxU
/jMBz/PehVgIRzzvVJznnYGz0C3qeV3DnpcU9LxkGIpzDvbBkOftj/G8E3AS
v+74/UF5DLuE8hych3nol33PuwRx9O9M31zK8cQpoCyE/jAHvwhlFH7Gtxnz
CFDGQBmI1yR981WfPvAK2gDKdsR8lvop2j+BpLDNUXNtRHtTaE+8H5nzQeY3
jXlNh7v4vMG4telTC7a7cWvDCOoT4S7+ifiloR3EPgTpxG2FVhdtMvYUaIxW
DW0S8TZib4BN0BSfePQetL+OPRzC6guj0KZiL1Z//Kqg1UJ7GXsG81vDfFui
73PjtqMtDZ9YtJW0fwEV0CqgncY3gfo4/F6E5IjNW/N/TX3hNj6V0J72bS21
phWxo/j+SayX0GqgleKXgjYD+wDshzf5rni0hr753STuRfxq0n8e9mgYpTb8
viTWUvgKDuC3jDKRvrm0T4BXYQx+LdD2Uj8KDzJuOrEy0ZqzXx0ggpaPtplx
5hHjHdhIvE3YP8Hb2LNhG9p6bI++c7E/cH4b0NbBTOxZcAFtLXY7/Jq48zyc
Mboxxlb0D13fdfhtwW6A/g1z+xY649dQa6W9oz4XrZvWETuOeJvotwW2Qqeo
7ZP2ayc+u6A5Pm3QWqOtwl4KKdi9w/adbZnLILRY7Pn0/5r6CqiP3oa+bdFL
sIt8i6FYixmrPPXVlKvge8hDb0GflvA4bbnYGXCcfidgHFpr7Ko6l9pvqKl7
xZiH6b/X7dd+7R3coa0yfUa6fdP+ladvKW3XIEBbCWtVQMyxAYvfi7GXEm8l
vkOwQ9g+BOEWWl+0ytQrQiWIhwK0spRVoCo0xu8yc+lP+RfjXISOjPE3dilc
h5mMcZPyBtxPnxwXd0/I8tIOnQ3YpVwFJWh7sHeDr3uF9qvaYSdkRS2v7XPf
rjXogjaAcfOIW8w4WYzRD3uRO3c6f+/DQigOWS4scXmwCLsJ46ylXz/6T6Dv
QPqWoR6ACvAc2n2UGVGLoVgLIIZ+P9B/O3GmYr+lvVBf9CXUj0IRbUfwCaC9
h/2x5oC2LWRnX3dAd2YO3Avb2dQZVZ4+TdsFysywnW2d8fU6p8qlOtdoee5O
624rD7VHywzYnZ0Stbx8njidtS7QBXrDw9ALGrgYzZQHfdvTRLQmlFWU7yiz
oSsMI14MY58h3lmIRRuBlqHzDlV1N3TuKX3f7rLu9G2tC9TR2LQnuVyunH6L
NWilb4IWMJh403zLuxmseTq01jsStXdjNPqnlOOxawTN1ptSk3otqMH8Zuvc
wSzlWfyy9KZBF8jHP9vtay/qzSg/w+9zOAmpaMspr8BVd791z3VPBru2I3DY
3fMOaNsoOxGnY9DmVOjm3hN6wDHlXLSu1OuzpnO0lvAEWh3s6ujPU5+OlkA9
0b2dOouPUPbWvGEr7Y3ceHq79Ibp3dI5uKc10R6EbR20HkNgMm2DKFMZZwft
Y+WDVh2/a6x9PeUv7TXa1ZC9K3pfUtEe0J2lX6ZyHfu3HFZAWbSH0LZTL2WP
98XY/f0NrlJP8a1tN/Z5CGKHfLvb57CPhuz8HMfnBISIdxztItpG5TfdbZev
ugftX2Qic0rGDuJbRPtHcXbvdP9ymMsa7LXwi/qj/Qu3aL+Cnaa3EPuS5kKc
jthDdQaJlQAdtK6wGv9HlTsZ50nKQ8o7aOWwA9BT+6HcqJxMv7JoBcobvv0T
lAnb/cjH7gP36HsqZG/PZpf79QZkM984/AbjMxAGwGNowbD1KdR5grv0HRm1
/5E6AfvfeQr7jL6NOP/F2f+E/isuQEXq5TR/qMSYeVHLycrNl6BcxN5Rvacp
rGld5bSI5bsJ7l+vr86x8lfUzq7OcI50fNLR/yF2GHsM/lloCZBCfQn6fK0D
diOnLcReo9yC3RhWU//Otzb51IdO1BehTdJZw64XsXu7DJJouxOy/93T7l9V
/6y5zK0nvqlBu7+6x9nYC6L2fukdawhtNd+Q5RX9p+o86FxcgbrYyb6tmdau
MGxvot7fF9D6682n/++MdxlO6j8av2KX04+590jvkt7a6y7HKdflR23ftZc3
sW/oHxCfalo7Yicox0J1+B81t3KT
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl0bsr7nEcB/AvuT8PqSfFkWRwK+UMhFwfucfCZkAyGagz8Q8YTh2bxaUo
AzmbM5/J5FIKMaMUCxYseP36Da8+n96/z/O9PVWzi+MLmSGEEnJoToRwnxvC
HmkfbtU/yRB+yEf0o/TLx9Q5eZm8S99DnrxTnZH3F4RQmGdBMiiixWwdO2au
ueGcJrNp3vTvfPBEl+w0P4T/DnbAX/5xLGtKxGd74ZlXus2n5Cn9IANMkyuv
ZEO/xSbr1EZ3tVa2/su6n2Tpi+WNnOjPaHevK/W3e9XI1/SN7hM93E91Oxm/
2538gQb5oboq30zGe03K6s1W02a2NBG/VQutTFEhK0/Eb3vBJY90OHu9fDd6
Z79P08tEQXzOU/kyZfY4Vlfsuc+QmSXZsHoUnctsFb+i/5A+5qP7Wucb0n48
PA==
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        GrayLevel[1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtj7sOAVEQhierYUloRUXiLSQKUWo8AToN0dCKF8Ai7vdL8AQKrdYlrm+g
9Aq+yW7x5/vO7OycOeFcMV0wRCREXKTFwQeb8E6u+A7OSQyfwbIpcoFZeIAB
6m3YJym8B08kg0/hxKnr9zGJ4yO4IDV8Cbekim9gxCPywyvMHzr9A8Pu0/41
PJIo3oWWW8SPl+hfOXvqvl2np2PY9+kcnfckX/yl79MzfoNJr8gDBj32e/Rd
DbgnZ/yte3NHAuZN+3+d84F1Qkks+AekKC65
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkDtqglEQhYeJha/CxsLSgLsQrCzTuIIoSjSiJo1WQnADml8EC5/BiLoD
d2AlBhHcQZq4B79hUhw438ww98xNl1qFpopIEoVQLSrSCIscHkQm+CL6oL5h
qI1/Rd/4HrU/5qrwHH6Gt3AqIrJn0Rs+HxOp01+r77iFvfeLv6jPvNMf4TPU
AriLKEmfWvk/ywKfFc+0hHP4KbUXywbH4SFcgT/V+Yh2+B90wZ/QWT3jE36m
nr2DruqZHiN+k721Ur/VdgbqmewtyzSAE+JZLcNYfadlsxvtb77Ub78D4HAv
Eg==
            "]]}], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0t8rnXEcwPHPOJgJV0t2J5d2vT9Ayr0LKzUN0Yoc2RYpKUohKzLtZq7U
Eaf8mB8bbY4zbH5swlr8A274I7xOqfM+7/fn+T7n+zx9O1WtyYbuRxExhv7H
ES+4MT+ikJufRHzPi/iBXWTQ69oeZ/ETb837fIi6koikPX7p3zjCO+vHfIJT
vDf/4b/o0ik+8Kws2swX5iWk4RPXuEQqYT+e488Y1J2c4Wme4w5uR0Hu3fkV
ZnQLv8ZHPcLDmNcLfMFp/s+5c7jCOYqLI/p4wFqe/qAHdUIv6i3vOmSuzTW+
msfNL3Whe+r4jXNs5Iwzqedls1tiwr1NukZPWqvgMvOortTluoifYti1Ur5x
GAPa1nGrh7TjjjP8w51rfhYrvIo1fEHSs9Z5Az16k7fwDR3mbd7BLGpsYNuY
8lXN+/yMP/Hzh//HPUrhSYk=
         "]], 
        Line3DBox[{2173, 16, 696, 660, 656, 2660, 655, 658, 2661, 659, 657, 
         682, 215, 206, 12, 2176, 10, 2173}], 
        Line3DBox[{2194, 37, 700, 663, 661, 2673, 15, 2194}], 
        Line3DBox[{666, 63, 2209, 77, 2217, 96, 709, 671, 2664, 670, 665, 664,
          2663, 669, 668, 667, 666}], 
        Line3DBox[{968, 60, 2284, 130, 2285, 128, 2657, 719, 2678, 680, 678, 
         2667, 674, 675, 677, 2666, 676, 673, 672, 2157, 2665, 67, 2716, 
         968}], 
        Line3DBox[{213, 720, 721, 723, 681, 208, 213}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrxXEYx/EvOSdMJlLHkYWFcgwuZzhKNhMKYWKgxMnisojCilXqDAb3
exn9B2bJ/ZJiExOJ18nw6f35PM/z/f6eb7+KgXTHWE4IYZpKCkIoEqojIdzL
SblUbsEqbMMkltFtYQgZc8X8kno/LmMvrmAG1+iU38YDunbnCe7RbDSEdZzE
CermW3EVR3AKmzFFd841YD1ll01iE6X5fuyjGX4Od3EBD/HKuWPcoX17tGOn
3gY/zHfxW/w8/+U9PXIsuz99y4NyInveTBxT3luLg3IFLsq3vnFutpaPqNXo
vas95YVQyX/wz/wDXuTa3+w+HtBeNueHMKr2pH9mLu7MpfoVjevdqB+5d5Ne
+HL9Z4zhG75SHf+LwQ6PkJB/cAg/sRGjOf//9w8TvEC1
         "]], 
        Line3DBox[{2329, 724, 2885, 2160, 725, 726, 728, 2679, 239, 2338, 231,
          1209, 2329}], 
        Line3DBox[{1215, 730, 1667, 436, 229, 425, 430, 1215}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0b0vZHEYhuF3FGbHRDFCQSO0EolgdCQKoRAx2WITskEroZHNkmhY3zQq
/hDs+hqsTVZ8NApEYpWispHsSjSuieLJfT/veX9zzplTMzSaG0lExFfZS0U8
KslkxDbe68/4gImiiL9Yjv/NatMRE/aeeHNJRNY8i03YguP4Rfr5N1yQTbsr
OCd9HyImMYe90sCrcQw7MIdVWCk/nCvDjHSaV2C5dBXuhVn5VLgXzuIALuKG
c8s4Ix89Rx3Wu9bN23kD7+Gfeav3adT/OTOst+mtepr32nkxr/S+JXpKf9UH
9e+YsZvmf/il/+gU94sjzvg5z/MdPJHfZoe4apbne3yNH/M8n/b787JutqUv
8Sk54L/s7OMRHuNPueY3eGt/F6/0Kyz1jBd4p98n3r/tG7jHQHE=
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{2168, 2169, 2912, 2198, 2908, 2691, 2196, 2905, 2692, 2907,
          2186, 2184, 2898, 2185, 2208, 2914, 2207, 2206, 2915, 2699}], 
        Line3DBox[{2170, 2171, 2890, 2682, 2172, 2881, 3246, 2672}], 
        Line3DBox[{2175, 2174, 2889, 2653, 2671}], 
        Line3DBox[{2178, 2892, 2683, 2888, 2684, 2177, 2891, 2685, 2662}], 
        Line3DBox[{2182, 2180, 2894, 2179, 2899, 2681, 2165, 2895, 2686, 2893,
          2687, 2246, 2941, 2245, 2244}], 
        Line3DBox[{783, 2181, 2896, 2680, 2164, 2690, 2904, 2187, 2900, 2188, 
         2903, 2193}], 
        Line3DBox[{2189, 2689, 2909, 2199, 2190, 2901, 2191, 2906, 2197, 2195,
          2192, 2902, 2688, 2897, 2183, 2910, 2693, 2200}], 
        Line3DBox[{943, 2707, 2927, 2706, 2711, 2935, 2220, 2215, 2919, 2703, 
         2920, 2698, 2205, 2932, 2232, 2202, 2697, 2163, 2886, 2162, 2913, 
         2696, 2201, 3247, 2654}], 
        Line3DBox[{2240, 2936, 2712, 2214, 2918, 2702, 2929, 2695, 2911, 2694,
          2219, 2705, 2934, 2230, 2928, 2229, 2239, 2945, 2225, 2924, 2221, 
         2222, 2224, 2923, 2655, 2674}], 
        Line3DBox[{2306, 2299, 2981, 2298, 2736, 2994, 2309, 2993, 2739, 2986,
          2293, 2975, 2292, 2733, 2972, 2734, 2973, 2270, 2271, 2960, 2276, 
         2272, 2273, 2977, 2268, 2958, 2267, 2286, 2287, 3001, 2314, 3000, 
         2726, 2963, 2280, 2999, 2658, 2668}], 
        Line3DBox[{2308, 2304, 2985, 2737, 2302, 2740, 2988, 2303, 2984, 2738,
          2987, 2721, 2262, 2971, 2269, 2254, 2950, 2255, 2717, 2951, 2256, 
         2261, 2954, 2260, 2970, 2263, 2955, 2722, 2283, 2966, 2275, 2959, 
         2274, 2730, 2282, 2882, 2967, 2731, 2677}], 
        Line3DBox[{2310, 2236, 2933, 2237, 2997, 2212, 2916, 2211, 2238, 2701,
          2917, 2213, 2704, 2921, 2218, 2946, 2235, 2234, 2942, 2247, 2715, 
         2943, 2248, 2249, 2980, 2242, 2939, 2656, 2675}], 
        Line3DBox[{2313, 2288, 2264, 2956, 2957, 2723, 2312, 2998, 2266, 2724,
          2982, 2295, 2978, 2296, 2983, 2294, 2291, 2974, 2278, 2962, 2279, 
         2290, 2976, 2735, 2297, 2979, 2727, 2964, 2281, 2316, 2319, 3003, 
         2277, 2961, 2725, 2320, 2745, 3004, 2318, 2317, 3002, 2315, 2265, 
         2659}], 
        Line3DBox[{2327, 2328, 3031, 2358, 3027, 2757, 2356, 3024, 2758, 3026,
          2346, 2344, 3017, 2345, 2369, 3034, 2368, 2367, 3035, 2765}], 
        Line3DBox[{2332, 3007, 2749, 2331, 2748, 3009, 2330, 2669}], 
        Line3DBox[{2334, 2333, 3008, 2336, 2335}], 
        Line3DBox[{2342, 2340, 3013, 2339, 3018, 2747, 2324, 3014, 2752, 3012,
          2753, 2409, 3061, 2408, 2407}], 
        Line3DBox[{1252, 2341, 3015, 2746, 2323, 2756, 3023, 2347, 3019, 2348,
          3022, 2353}], 
        Line3DBox[{2349, 2755, 3028, 2359, 2350, 3020, 2351, 3025, 2357, 2355,
          2352, 3021, 2754, 3016, 2343, 3029, 2759, 2360}], 
        Line3DBox[{2354, 2751, 3010, 2337, 2750, 3248, 2883, 3011, 2670}], 
        Line3DBox[{2362, 3032, 2361, 2762, 3033, 2321, 3005, 2322, 2763, 2363,
          2395, 3052, 2366, 2764, 3040, 2769, 3039, 2377, 2383, 3055, 2777, 
         2772, 3047, 2773, 1414}], 
        Line3DBox[{2370, 2371, 3043, 2387, 2385, 2384, 3044, 2388, 3065, 2402,
          2392, 3048, 2393, 3054, 2771, 2382, 2760, 3030, 2761, 3049, 2768, 
         3038, 2376, 2778, 3056, 2403}], 
        Line3DBox[{2379, 2380, 3059, 2405, 3100, 2412, 2411, 3063, 2781, 2410,
          3062, 2397, 2398, 3066, 2381, 3041, 2770, 2375, 3037, 2767, 2401, 
         2373, 3036, 2374, 3117, 2400, 3053, 2399, 2475}], 
        Line3DBox[{2447, 2799, 3089, 2795, 3085, 2794, 2421, 3072, 2784, 3088,
          2776, 2396, 3067, 2415, 2416, 2404, 3058, 3057, 2779, 2420, 2390, 
         3046, 2391, 2785, 3073, 2422, 3115, 2472, 3110, 2808, 2466, 2465, 
         3109, 2470, 3112, 2810}], 
        Line3DBox[{2448, 2797, 3087, 2798, 2445, 2796, 2437, 3079, 2438, 3086,
          2446, 2788, 3075, 2426, 3090, 2423, 3074, 2424, 2419, 3071, 2783, 
         2418, 3070, 2417, 2432, 3091, 2425, 2787, 3107, 2805, 3104, 2468, 
         3108, 2807, 2467, 2804, 3105, 2469, 2473}], 
        Line3DBox[{2449, 2450, 3119, 2443, 3083, 2792, 3120, 2479, 3121, 2452,
          2451, 2430, 3078, 2431, 3097, 2436, 2435, 2439, 3080, 2434, 2433, 
         3093, 2801, 3092, 2800, 2457, 3095, 2458, 3106, 2806, 3113, 2474, 
         3114, 2803, 2463, 3101, 2464, 2471}], 
        Line3DBox[{2478, 2453, 2427, 3076, 3077, 2789, 2477, 3118, 2429, 2790,
          3102, 2460, 3098, 2461, 3103, 2459, 2456, 3094, 2441, 3082, 2442, 
         2455, 3096, 2802, 2462, 3099, 2793, 3084, 2444, 2481, 2484, 3123, 
         2440, 3081, 2791, 2485, 2812, 3124, 2483, 2482, 3122, 2480, 2428, 
         2486}], 
        Line3DBox[{2493, 2494, 3152, 2524, 3148, 2825, 2522, 3145, 2826, 3147,
          2512, 2510, 3138, 2511, 2535, 3155, 2534, 2533, 3156, 2833}], 
        Line3DBox[{2495, 2496, 3130, 2815, 2497, 2816, 3127, 2498}], 
        Line3DBox[{2500, 2499, 3129, 2502, 2501}], 
        Line3DBox[{2504, 3132, 2817, 3128, 2818, 2503, 3131, 2819, 2520}], 
        Line3DBox[{2508, 2506, 3134, 2505, 3139, 2814, 2490, 3135, 2820, 3133,
          2821, 2575, 3182, 2574, 2573}], 
        Line3DBox[{1727, 2507, 3136, 2813, 2489, 2824, 3144, 2513, 3140, 2514,
          3143, 2519}], 
        Line3DBox[{2515, 2823, 3149, 2525, 2516, 3141, 2517, 3146, 2523, 2521,
          2518, 3142, 2822, 3137, 2509, 3150, 2827, 2526}], 
        Line3DBox[{2528, 3153, 2527, 2830, 3154, 2487, 3125, 2488, 2831, 2529,
          2561, 3173, 2532, 2832, 3161, 2837, 3160, 2543, 2549, 3176, 2845, 
         2840, 3168, 2841, 1889}], 
        Line3DBox[{2536, 2537, 3164, 2553, 2551, 2550, 3165, 2554, 3186, 2568,
          2558, 3169, 2559, 3175, 2839, 2548, 2828, 3151, 2829, 3170, 2836, 
         3159, 2542, 2846, 3177, 2569}], 
        Line3DBox[{2545, 2546, 3180, 2571, 3221, 2578, 2577, 3184, 2849, 2576,
          3183, 2563, 2564, 3187, 2547, 3162, 2838, 2541, 3158, 2835, 2567, 
         2539, 3157, 2540, 3238, 2566, 3174, 2565, 2641}], 
        Line3DBox[{2613, 2867, 3210, 2863, 3206, 2862, 2587, 3193, 2852, 3209,
          2844, 2562, 3188, 2581, 2582, 2570, 3179, 3178, 2847, 2586, 2556, 
         3167, 2557, 2853, 3194, 2588, 3236, 2638, 3231, 2876, 2632, 2631, 
         3230, 2636, 3233, 2878}], 
        Line3DBox[{2614, 2865, 3208, 2866, 2611, 2864, 2603, 3200, 2604, 3207,
          2612, 2856, 3196, 2592, 3211, 2589, 3195, 2590, 2585, 3192, 2851, 
         2584, 3191, 2583, 2598, 3212, 2591, 2855, 3228, 2873, 3225, 2634, 
         3229, 2875, 2633, 2872, 3226, 2635, 2639}], 
        Line3DBox[{2615, 2616, 3240, 2609, 3204, 2860, 3241, 2645, 3242, 2618,
          2617, 2596, 3199, 2597, 3218, 2602, 2601, 2605, 3201, 2600, 2599, 
         3214, 2869, 3213, 2868, 2623, 3216, 2624, 3227, 2874, 3234, 2640, 
         3235, 2871, 2629, 3222, 2630, 2637}], 
        Line3DBox[{2644, 2619, 2593, 3197, 3198, 2857, 2643, 3239, 2595, 2858,
          3223, 2626, 3219, 2627, 3224, 2625, 2622, 3215, 2607, 3203, 2608, 
         2621, 3217, 2870, 2628, 3220, 2861, 3205, 2610, 2647, 2650, 3244, 
         2606, 3202, 2859, 2651, 2880, 3245, 2649, 2648, 3243, 2646, 2594, 
         2652}], 
        Line3DBox[{2676, 2732, 2969, 2729, 2965, 2728, 2258, 2952, 2718, 2968,
          2710, 2233, 2947, 2252, 2253, 2241, 2938, 2937, 2713, 2257, 2227, 
         2926, 2228, 2719, 2953, 2259, 2995, 2307, 2990, 2741, 2301, 2300, 
         2989, 2305, 2992, 2743}], 
        Line3DBox[{2744, 2996, 2311, 2742, 2991, 2720, 2714, 2940, 2243, 2231,
          2930, 2223, 2922, 2700, 2210, 2216, 2949, 2166, 2887, 2167, 2251, 
         2948, 2708, 2931, 2709, 2289, 2250, 2944, 2226, 2925, 2204, 2203, 
         2884}], 
        Line3DBox[{2782, 2364, 2365, 3045, 2389, 3064, 2413, 2454, 2775, 3051,
          2774, 3068, 2414, 2326, 3006, 2325, 3069, 2378, 2372, 2766, 3042, 
         2386, 3050, 2394, 2406, 3060, 2780, 2786, 3111, 2809, 2476, 3116, 
         2811}], 
        Line3DBox[{2850, 2530, 2531, 3166, 2555, 3185, 2579, 2620, 2843, 3172,
          2842, 3189, 2580, 2492, 3126, 2491, 3190, 2544, 2538, 2834, 3163, 
         2552, 3171, 2560, 2572, 3181, 2848, 2854, 3232, 2877, 2642, 3237, 
         2879}]}, {
        GrayLevel[0.2], 
        Line3DBox[CompressedData["
1:eJwNzr9KgnEYBeBXDQy0qXCJoCCkv6vQDVQiQkpjU1YORg7tSTQ6uhhuORXk
Hi52A12B3kBkNThUU8/wcN5zvt/wrZ02q1eJiCjzkYx4mot4ZsAjU1sxE3E+
H3FGjUE24t1+4Z7Jku9/cisVUbetyGPbslwgQ1C2JeWPt7+k3UtU7Dm5R4ET
fVfuMPZuX5/IA/2QW/1O3nBElQ4jWr69yqJ/f5P3XNt6ctXWdffdDyzq37Jt
+5Lrep5tXmxduckGPYa2qXefXOoN/gEaWCdr
         "]], 
        Line3DBox[{783, 784, 771, 2894, 772, 764, 766, 803, 2901, 801, 786, 
         785, 794, 791, 2898, 792, 883, 870, 2919, 869, 875, 890, 888, 828, 
         2911, 826, 969, 886, 2921, 885, 881, 882, 2949, 975, 947, 2937, 926, 
         924, 982, 980, 2951, 981, 1004, 1034, 2960, 1033, 1077, 2976, 1090, 
         1110, 988, 987, 1125}], 
        Line3DBox[{811, 798, 796, 2903, 808, 950, 2941, 951, 806, 805, 2910, 
         823, 830, 837, 2912, 740, 741, 843, 2913, 835, 833, 864, 898, 2924, 
         895, 849, 847, 954, 2980, 956, 955, 2944, 963, 1078, 1057, 989, 2952,
          965, 966, 1053, 2966, 1054, 1061, 1045, 1039, 1041, 3000, 1172, 
         1177, 1171, 1036, 2961, 1035, 1187, 1184, 1181}], 
        Line3DBox[{854, 844, 836, 834, 3247, 838, 853, 2923, 897, 831, 832, 
         2939, 2152, 884, 900, 2925, 841, 842, 964, 1048, 2965, 1049, 1051, 
         1052, 1031, 2959, 1032, 1044, 1040, 2963, 1042, 1173, 1180, 3004, 
         1185, 1186, 1188, 1183, 1182}], 
        Line3DBox[{858, 2915, 859, 887, 909, 2927, 907, 901, 868, 2918, 867, 
         916, 941, 862, 2916, 863, 1157, 918, 2930, 919, 996, 992, 2953, 991, 
         1020, 1003, 1001, 2971, 1068, 1085, 1070, 2972, 1071, 1075, 1076, 
         2974, 1079, 1093, 1119, 1117}], 
        Line3DBox[{872, 873, 936, 2933, 938, 1158, 1163, 1148, 2991, 994, 944,
          945, 2990, 1144, 1141, 1137, 2984, 1022, 1024, 1108, 2986, 1087, 
         1088, 1080, 1082, 1106, 2978, 1073, 1074, 1104, 1120}], 
        Line3DBox[{943, 908, 910, 942, 2936, 871, 874, 937, 939, 2997, 1160, 
         1161, 1147, 995, 948, 2940, 949, 2995, 993, 990, 1019, 1002, 1000, 
         2987, 1138, 1023, 1021, 1084, 1086, 2975, 1089, 1081, 1083, 2983, 
         1091, 1092, 1123, 1122, 1121}], 
        Line3DBox[{1151, 2992, 1136, 1135, 2985, 1139, 1153, 1152, 2994, 1114,
          1101, 1103, 1116, 2998, 1166, 1165, 1156, 1154}], 
        Line3DBox[{1162, 2996, 1159, 983, 984, 2989, 1133, 1134, 1143, 2988, 
         1142, 1109, 1107, 1140, 2993, 1096, 1095, 1105, 2982, 1015, 985, 986,
          1155}], 
        Line3DBox[{1170, 1168, 1112, 1047, 2964, 878, 879, 1018, 2958, 1017, 
         1028, 1029, 2970, 998, 958, 959, 1099, 972, 2947, 971, 922, 920, 
         2948, 973, 953, 2942, 952, 914, 913, 912, 2928, 911, 934, 929, 928, 
         2932, 852, 846, 819, 2905, 817, 821, 824, 789, 787, 2902, 774, 776, 
         2895, 769, 767, 778, 780, 2904, 809, 754, 755, 751, 2888, 753, 759, 
         757, 2890, 744, 745, 747}], 
        Line3DBox[{1191, 1190, 1189, 1175, 1174, 3002, 1178, 1066, 2154, 2999,
          1063, 1055, 2967, 2153, 1059, 1058, 2969, 1050, 967, 2159}], 
        Line3DBox[{1192, 1130, 1128, 1164, 1010, 2957, 1012, 1115, 1102, 1100,
          1113, 2981, 1124, 1150, 1149}], 
        Line3DBox[{1196, 1195, 1129, 1069, 1009, 2956, 1011, 1145, 1146}], 
        Line3DBox[{1215, 1667}], 
        Line3DBox[{1252, 1253, 1240, 3013, 1241, 1233, 1235, 1272, 3020, 1270,
          1255, 1254, 1263, 1260, 3017, 1261, 1353, 1340, 3039, 1339, 1345, 
         1361, 1359, 1298, 3030, 1296, 1440, 1357, 3041, 1356, 1351, 1352, 
         3069, 1446, 1418, 3057, 1397, 1395, 1453, 1451, 3071, 1452, 1475, 
         1505, 3080, 1504, 1550, 3096, 1563, 1583, 1459, 1458, 1598}], 
        Line3DBox[{1280, 1267, 1265, 3022, 1277, 1421, 3061, 1422, 1275, 1274,
          3029, 1293, 1300, 1307, 3031, 1207, 1208, 1313, 3033, 1305, 1303, 
         1334, 1369, 3044, 1366, 1319, 1317, 1425, 3100, 1427, 1426, 3064, 
         1434, 1551, 1529, 1460, 3072, 1436, 1437, 1524, 3086, 1525, 1533, 
         1516, 1510, 1512, 3120, 1645, 1650, 1644, 1507, 3081, 1506, 1660, 
         1657, 1654}], 
        Line3DBox[{1324, 1314, 1306, 1304, 3032, 1308, 1323, 3043, 1368, 1301,
          1302, 3059, 1354, 1355, 1371, 3045, 1311, 1312, 1435, 1519, 3085, 
         1520, 1522, 1523, 1502, 3079, 1503, 1515, 1511, 3083, 1513, 1646, 
         1653, 3124, 1658, 1659, 1661, 1656, 1655}], 
        Line3DBox[{1328, 3035, 1329, 1358, 1380, 3047, 1378, 1372, 1338, 3038,
          1337, 1387, 1412, 1332, 3036, 1333, 1630, 1389, 3050, 1390, 1467, 
         1463, 3073, 1462, 1491, 1474, 1472, 3091, 1541, 1558, 1543, 3092, 
         1544, 1548, 1549, 3094, 1552, 1566, 1592, 1590}], 
        Line3DBox[{1342, 1343, 1407, 3053, 1409, 1631, 1636, 1621, 3111, 1465,
          1415, 1416, 3110, 1617, 1614, 1610, 3104, 1493, 1495, 1581, 3106, 
         1560, 1561, 1553, 1555, 1579, 3098, 1546, 1547, 1577, 1593}], 
        Line3DBox[{1414, 1379, 1381, 1413, 3056, 1341, 1344, 1408, 1410, 3117,
          1633, 1634, 1620, 1466, 1419, 3060, 1420, 3115, 1464, 1461, 1490, 
         1473, 1471, 3107, 1611, 1494, 1492, 1557, 1559, 3095, 1562, 1554, 
         1556, 3103, 1564, 1565, 1596, 1595, 1594}], 
        Line3DBox[{1439, 1438, 1521, 3089, 1530, 1531, 1527, 3087, 1526, 1535,
          3119, 1538, 1539, 1651, 3122, 1647, 1648, 1662, 1663, 1664}], 
        Line3DBox[CompressedData["
1:eJwV0LEuQ2EYgOHvcCoSTbgBkhrEKm6BzSSxdDQatJUu7diBS+AGzFwAcSKt
VgSDNBaDdMMiFiRNef7hyZvvO/nPf3Iqu7Xt/SwittiYidikV4rosl6OaJqD
jAZrdrlOPB9zw7RdX99p0WbB7kcP+JiLqOspy86e6Lfdse6xygo7VPn1bEkX
Oc8jLs1nOpXu4slc1vn0bvuB+U1feOCeZ7r2Q31lxCd3dl+aOfunj1zbDfQ2
3cWV+SKdp0dhLrTj2484TP9iNuIfDJAvWg==
         "]], 
        Line3DBox[{1624, 3112, 1609, 1608, 3105, 1612, 1626, 1625, 3114, 1587,
          1574, 1576, 1589, 3118, 1639, 1638, 1629, 1627}], 
        Line3DBox[{1635, 3116, 1632, 1454, 1455, 3109, 1606, 1607, 1616, 3108,
          1615, 1582, 1580, 1613, 3113, 1569, 1568, 1578, 3102, 1486, 1456, 
         1457, 1628}], 
        Line3DBox[{1643, 1641, 1585, 1518, 3084, 1348, 1349, 1489, 3078, 1488,
          1499, 1500, 3090, 1469, 1429, 1430, 1572, 1443, 3067, 1442, 1393, 
         1391, 3068, 1444, 1424, 3062, 1423, 1385, 1384, 1383, 3048, 1382, 
         1405, 1400, 1399, 3052, 1322, 1316, 1289, 3024, 1287, 1291, 1294, 
         1258, 1256, 3021, 1243, 1245, 3014, 1238, 1236, 1247, 1249, 3023, 
         1278, 1222, 1223, 1217, 3248, 1219, 1228, 1226, 3009, 1210, 1211, 
         1214}], 
        Line3DBox[{1665, 1603, 1601, 1637, 1481, 3077, 1483, 1588, 1575, 1573,
          1586, 3101, 1597, 1623, 1622}], 
        Line3DBox[{1669, 1668, 1602, 1542, 1480, 3076, 1482, 1618, 1619}], 
        Line3DBox[CompressedData["
1:eJwNz71KAmAYBeBXgmroHqw7aJGQaBBySglERwWl2URXh0a9gaIWrRxUGqLF
IdqqJZoapPJnDLqCGoKe4eG853zTt1U7LtQTEZHnfDWish5RpUaZC1t6I6Iv
e5yyo5/JAdfs6mP5wYxX9m0v8oF7btmz3ckhIyY8krE/y2++yOkLOadDSu/K
H35p6qm1iG0SrJClScNbS/5xwgFHtrx8o+suySJPXNG2Xcop7ywZ23L+P3N/
cui+sfXcfTb1JP/WxC7B
         "]], 
        Line3DBox[{1727, 1728, 1715, 3134, 1716, 1708, 1710, 1747, 3141, 1745,
          1730, 1729, 1738, 1735, 3138, 1736, 1828, 1815, 3160, 1814, 1820, 
         1836, 1834, 1773, 3151, 1771, 1915, 1832, 3162, 1831, 1826, 1827, 
         3190, 1921, 1893, 3178, 1872, 1870, 1928, 1926, 3192, 1927, 1950, 
         1980, 3201, 1979, 2025, 3217, 2038, 2058, 1934, 1933, 2073}], 
        Line3DBox[{1755, 1742, 1740, 3143, 1752, 1896, 3182, 1897, 1750, 1749,
          3150, 1768, 1775, 1782, 3152, 1680, 1681, 1788, 3154, 1780, 1778, 
         1809, 1844, 3165, 1841, 1794, 1792, 1900, 3221, 1902, 1901, 3185, 
         1909, 2026, 2004, 1935, 3193, 1911, 1912, 1999, 3207, 2000, 2008, 
         1991, 1985, 1987, 3241, 2120, 2125, 2119, 1982, 3202, 1981, 2135, 
         2132, 2129}], 
        Line3DBox[{1799, 1789, 1781, 1779, 3153, 1783, 1798, 3164, 1843, 1776,
          1777, 3180, 1829, 1830, 1846, 3166, 1786, 1787, 1910, 1994, 3206, 
         1995, 1997, 1998, 1977, 3200, 1978, 1990, 1986, 3204, 1988, 2121, 
         2128, 3245, 2133, 2134, 2136, 2131, 2130}], 
        Line3DBox[{1803, 3156, 1804, 1833, 1855, 3168, 1853, 1847, 1813, 3159,
          1812, 1862, 1887, 1807, 3157, 1808, 2105, 1864, 3171, 1865, 1942, 
         1938, 3194, 1937, 1966, 1949, 1947, 3212, 2016, 2033, 2018, 3213, 
         2019, 2023, 2024, 3215, 2027, 2041, 2067, 2065}], 
        Line3DBox[{1817, 1818, 1882, 3174, 1884, 2106, 2111, 2096, 3232, 1940,
          1890, 1891, 3231, 2092, 2089, 2085, 3225, 1968, 1970, 2056, 3227, 
         2035, 2036, 2028, 2030, 2054, 3219, 2021, 2022, 2052, 2068}], 
        Line3DBox[{1889, 1854, 1856, 1888, 3177, 1816, 1819, 1883, 1885, 3238,
          2108, 2109, 2095, 1941, 1894, 3181, 1895, 3236, 1939, 1936, 1965, 
         1948, 1946, 3228, 2086, 1969, 1967, 2032, 2034, 3216, 2037, 2029, 
         2031, 3224, 2039, 2040, 2071, 2070, 2069}], 
        Line3DBox[{1914, 1913, 1996, 3210, 2005, 2006, 2002, 3208, 2001, 2010,
          3240, 2013, 2014, 2126, 3243, 2122, 2123, 2137, 2138, 2139}], 
        Line3DBox[{2099, 3233, 2084, 2083, 3226, 2087, 2101, 2100, 3235, 2062,
          2049, 2051, 2064, 3239, 2114, 2113, 2104, 2102}], 
        Line3DBox[{2110, 3237, 2107, 1929, 1930, 3230, 2081, 2082, 2091, 3229,
          2090, 2057, 2055, 2088, 3234, 2044, 2043, 2053, 3223, 1961, 1931, 
         1932, 2103}], 
        Line3DBox[{2118, 2116, 2060, 1993, 3205, 1823, 1824, 1964, 3199, 1963,
          1974, 1975, 3211, 1944, 1904, 1905, 2047, 1918, 3188, 1917, 1868, 
         1866, 3189, 1919, 1899, 3183, 1898, 1860, 1859, 1858, 3169, 1857, 
         1880, 1875, 1874, 3173, 1797, 1791, 1764, 3145, 1762, 1766, 1769, 
         1733, 1731, 3142, 1718, 1720, 3135, 1713, 1711, 1722, 1724, 3144, 
         1753, 1697, 1698, 1692, 3128, 1694, 1703, 1701, 3130, 1684, 1685, 
         1688}], 
        Line3DBox[{2140, 2078, 2076, 2112, 1956, 3198, 1958, 2063, 2050, 2048,
          2061, 3222, 2072, 2098, 2097}], 
        Line3DBox[{2144, 2143, 2077, 2017, 1955, 3197, 1957, 2093, 2094}], 
        Line3DBox[{742, 743, 752, 750, 2892, 758, 735, 734, 2896, 777, 773, 
         736, 737, 2899, 793, 807, 804, 802, 2906, 815, 814, 820, 2907, 816, 
         818, 845, 851, 2920, 876, 891, 889, 2934, 893, 892, 962, 2946, 932, 
         933, 970, 739, 2887, 738, 977, 946, 2938, 927, 925, 957, 2954, 999, 
         1016, 1027, 1030, 2977, 1098, 880, 877, 1046, 2979, 1111, 1167, 1169,
          1127, 1126}], 
        Line3DBox[{782, 763, 765, 2909, 799, 800, 856, 855, 2914, 857, 906, 
         2935, 940, 902, 903, 935, 827, 829, 2929, 917, 866, 2917, 865, 860, 
         861, 2922, 896, 976, 905, 2926, 904, 997, 979, 2950, 978, 1013, 1014,
          1072, 2973, 1025, 1026, 1038, 2962, 1037, 1094, 1118}], 
        Line3DBox[{1251, 1232, 1234, 3028, 1268, 1269, 1326, 1325, 3034, 1327,
          1377, 3055, 1411, 1373, 1374, 1406, 1297, 1299, 3049, 1388, 1336, 
         3037, 1335, 1330, 1331, 3042, 1367, 1447, 1376, 3046, 1375, 1468, 
         1450, 3070, 1449, 1484, 1485, 1545, 3093, 1496, 1497, 1509, 3082, 
         1508, 1567, 1591}], 
        Line3DBox[{1599, 1600, 1642, 1640, 1584, 3099, 1517, 1347, 1350, 1571,
          3097, 1501, 1498, 1487, 1470, 3074, 1428, 1396, 1398, 3058, 1417, 
         1448, 1205, 3006, 1206, 1441, 1404, 1403, 3066, 1433, 1363, 1364, 
         3054, 1360, 1362, 1346, 3040, 1321, 1315, 1288, 1286, 3026, 1290, 
         1284, 1285, 3025, 1271, 1273, 1276, 1262, 3018, 1204, 1203, 1242, 
         1246, 3015, 1201, 1202, 1227, 3011, 2156, 1218, 2155, 2158}], 
        Line3DBox[{1682, 1683, 1693, 1691, 3132, 1702, 1675, 1674, 3136, 1721,
          1717, 1676, 1677, 3139, 1737, 1751, 1748, 1746, 3146, 1760, 1759, 
         1765, 3147, 1761, 1763, 1790, 1796, 3161, 1821, 1837, 1835, 3175, 
         1839, 1838, 1908, 3187, 1878, 1879, 1916, 1679, 3126, 1678, 1923, 
         1892, 3179, 1873, 1871, 1903, 3195, 1945, 1962, 1973, 1976, 3218, 
         2046, 1825, 1822, 1992, 3220, 2059, 2115, 2117, 2075, 2074}], 
        Line3DBox[{1726, 1707, 1709, 3149, 1743, 1744, 1801, 1800, 3155, 1802,
          1852, 3176, 1886, 1848, 1849, 1881, 1772, 1774, 3170, 1863, 1811, 
         3158, 1810, 1805, 1806, 3163, 1842, 1922, 1851, 3167, 1850, 1943, 
         1925, 3191, 1924, 1959, 1960, 2020, 3214, 1971, 1972, 1984, 3203, 
         1983, 2042, 2066}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJzt3E2ITVEcAPDXzFgZC/kaKR+N2RELlIUuS6woltRIsyE7xUqyQcokhITU
RBZmFiYL9RqhbMYo42MSBkPNjGZKigVR7myGm57um3vufb+7Ob1ft3P/93/e
e/fd8/73LGndt3V3XalU6mwslepLSdt41NT07NCiYx/itnvS6/C90vNKKw9J
/RQ1zzzd96E4a9Or/f0TWpx58Vo736K6ceS17JW+/31eOOec8z89L9fT0OI8
+3Fo88LXQ+WuvaO3t7f1TbxOPG7S/kX1vOch7/FzzjnnnHPOOeech+ZZzbfk
ZZ4nDuzQi0/l+y2XXpZ/t6P/8j/O6z/74ZxzzjnnnHPOOeecF88nbcnP/2bl
ldZ/8qnxao9LWvW6lXpo9dvVrqMOrf+i5i00r/bnNK3+kzyr//tCG8dK/fDR
q4tv9L+J286o48mXbe+XjAQXJ+ecc87z68ubL66vG30dtzejXYcv/Hh+Pbzf
Gw0dS9esujAYt13RgtkHWnZeGQ4uTs4555xzznk4Xuk8Oeecc84555xzzjnn
nPN0PbT1f2ptHaS1W+rbRucMlvu/HTn/9vLDqLHv1bwzG4eDyxvnnHPOOeec
c84555xzzjnnnHPOOeecc845L7ZPVNYOxOvtD0xab59n63ebZow83V8u1597
cP9dz1jm8XDOOeecc84555xzzjnnnHPOOeecc84555zzMH3Tzv49p1feLDd/
Prjs4Xj1605DW2+52uszl/66jSfun3TctPrJyk/MPDlwfFpP3LZH7c9a787v
HovufL+2oaG+J27bo3XNrY9X/PK0jpuUt6z64VPjoY3Xwq87TkXzhuL2VtS7
+tG+5yMfg8tb3vNca/FzzjnP1pOuI64vnFfPQ3vOutrzA3nxop4X55xzzjnn
nPPfPnGnF1qdA+ecc84555xzXmTPqu4lq/qZSvtJy9OqT8gq/1mNF+c8nO9h
zkPw0P7X4Jxzni+f+CUUyv0455zzYnha9zXu63nIPqtpee/MtsG47Yr2TO/Z
PvfecHBxcs4555yHNh/FOeecc855yB7afDvnnHPOOed59LTmsX8CaeVg4w==

      "]], Axes -> True, AxesLabel -> {
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm], 
      FormBox["\"z\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {356.0659534715889, 320.3171288773109}, ImageSizeRaw -> 
    Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotLabel -> 
    FormBox["\"Basis functions of \\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(\
\[CapitalDelta]), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\))=(0,0), \
(\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(2\\)]\\))=(1,0), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(3\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(3\\)]\\))=(\\!\\(\\*FractionBox[\\(3\\), \\(4\\)]\\),2)\"", 
      TraditionalForm], PlotRange -> {{0., 1.}, {0., 2.}, {0, 1}}, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], Automatic}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {0.6424141066291336, -2.797458732800735, 
     1.7920738695379697`}, ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(3\\)]\\)\""}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6727539156527395`*^9, 3.6727541358076534`*^9, 3.6727542172876606`*^9, 
   3.6727542941134014`*^9, 3.6727543626663427`*^9, 3.6727544998299694`*^9, 
   3.67275471483076*^9, 3.672754810601467*^9, 3.6727548448828135`*^9, 
   3.6727550172633944`*^9, 3.6727550610067573`*^9, {3.672902243081483*^9, 
   3.672902255832037*^9}, 3.672904327051036*^9, 3.672932552425459*^9, 
   3.672932660657647*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cool formula", "Subsection",
 CellChangeTimes->{{3.672755212565378*^9, 3.6727552165209374`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "1"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "m"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "3"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "p"]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"coolFormula", "[", 
    RowBox[{"m_Integer", ",", "n_Integer", ",", "p_Integer"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"2", 
     RowBox[{"m", "!"}], 
     RowBox[{"n", "!"}], 
     RowBox[{"p", "!"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "n", "+", "p", "+", "2"}], ")"}], "!"}]]}]}]], "Input",
 CellChangeTimes->{{3.672755219709717*^9, 3.672755270923072*^9}, {
  3.6727553672951326`*^9, 3.6727554844737763`*^9}, {3.6729047795701237`*^9, 
  3.672904796400358*^9}, {3.672904948700059*^9, 3.6729049548864665`*^9}, {
  3.672933114889988*^9, 3.6729331449111753`*^9}, {3.673017247387499*^9, 
  3.6730172556567464`*^9}, {3.673021287509201*^9, 3.673021290927805*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals", "Subsection",
 CellChangeTimes->{{3.6727555220708313`*^9, 3.6727555258345995`*^9}}],

Cell[CellGroupData[{

Cell["Local mass matrix", "Subsubsection",
 CellChangeTimes->{{3.6730145927109165`*^9, 3.67301460518617*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"massMatrix", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Area", "@", "element"}], "60"], 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"6", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         SubscriptBox["c", "3"]}], ",", 
        RowBox[{
         RowBox[{"3", " ", 
          SubscriptBox["c", "1"]}], "+", 
         SubscriptBox["c", "2"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         SubscriptBox["c", "3"]}], ",", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"6", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         SubscriptBox["c", "1"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"3", " ", 
          SubscriptBox["c", "1"]}], "+", 
         SubscriptBox["c", "2"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         SubscriptBox["c", "1"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         RowBox[{"2", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"6", 
          SubscriptBox["c", "3"]}]}]}], "}"}]}], "\[IndentingNewLine]", 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730159554964733`*^9, 3.6730159681470923`*^9}, {
  3.673016037109254*^9, 3.67301629863661*^9}, {3.673016398453666*^9, 
  3.6730164711759405`*^9}, {3.6730165057977805`*^9, 3.6730166532783756`*^9}, {
  3.67301674978185*^9, 3.6730167537233753`*^9}, {3.6730168705882792`*^9, 
  3.673016918457117*^9}, {3.6730169806609464`*^9, 3.6730169812339387`*^9}, {
  3.6730178111897583`*^9, 3.6730178123619156`*^9}, {3.6730186169116735`*^9, 
  3.67301864483562*^9}, {3.6730187275728264`*^9, 3.673018735900337*^9}, {
  3.6730188062673035`*^9, 3.673018951096002*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "3"], 
   RowBox[{
    SubscriptBox["c", "k"], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massMatrixTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "i"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "j"], "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673016985133007*^9, 3.673017051451242*^9}, {
   3.6730170947637253`*^9, 3.6730171890075855`*^9}, {3.673017278080374*^9, 
   3.6730174327251005`*^9}, {3.6730179367743206`*^9, 3.673017942162655*^9}, 
   3.6730196512386775`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"massMatrix", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["c", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"massMatrixTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["c", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6730175051661334`*^9, 3.6730175150196857`*^9}, {
  3.6730175598807683`*^9, 3.6730176451590014`*^9}, {3.6730176763244333`*^9, 
  3.6730177188848734`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["37", "30"], ",", 
     FractionBox["9", "20"], ",", 
     FractionBox["8", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "20"], ",", 
     FractionBox["17", "30"], ",", 
     FractionBox["3", "20"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["8", "15"], ",", 
     FractionBox["3", "20"], ",", 
     FractionBox["1", "30"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673017129819927*^9, 3.6730171620660725`*^9}, 
   3.673017209798956*^9, 3.6730174384862704`*^9, {3.6730174957882657`*^9, 
   3.6730175157474008`*^9}, {3.6730175616759515`*^9, 3.6730175783975935`*^9}, 
   3.673017646544443*^9, 3.673017677166813*^9, 3.673017719792588*^9, 
   3.6730178349187922`*^9, {3.6730178837692137`*^9, 3.6730178936213164`*^9}, 
   3.673018011855851*^9, 3.673018962352027*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["37", "30"], ",", 
     FractionBox["9", "20"], ",", 
     FractionBox["19", "60"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "20"], ",", 
     FractionBox["17", "30"], ",", 
     FractionBox["3", "20"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["19", "60"], ",", 
     FractionBox["3", "20"], ",", 
     FractionBox["1", "30"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673017129819927*^9, 3.6730171620660725`*^9}, 
   3.673017209798956*^9, 3.6730174384862704`*^9, {3.6730174957882657`*^9, 
   3.6730175157474008`*^9}, {3.6730175616759515`*^9, 3.6730175783975935`*^9}, 
   3.673017646544443*^9, 3.673017677166813*^9, 3.673017719792588*^9, 
   3.6730178349187922`*^9, {3.6730178837692137`*^9, 3.6730178936213164`*^9}, 
   3.673018011855851*^9, 3.673018962381832*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local stiffness matrix", "Subsubsection",
 CellChangeTimes->{{3.672902382846168*^9, 3.6729024233021145`*^9}, {
  3.6729071294706197`*^9, 3.6729071307699413`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stiffnessMatrix", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["a", "1"], "+", 
      SubscriptBox["a", "2"], "+", 
      SubscriptBox["a", "3"]}], 
     RowBox[{"12", 
      RowBox[{"Area", "@", "element"}]}]], 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "3"], "-", 
            SubscriptBox["y", "2"]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "3"], "-", 
            SubscriptBox["y", "2"]}], ")"}]}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673020215072007*^9, 3.6730202547387495`*^9}, {
  3.6730202847599125`*^9, 3.6730203194062357`*^9}, {3.673020364562554*^9, 
  3.6730206159632053`*^9}, {3.673020680534424*^9, 3.6730207157268734`*^9}, {
  3.6730207732598677`*^9, 3.6730207735993853`*^9}, {3.6730209319777613`*^9, 
  3.6730209635038395`*^9}, {3.6730210109735312`*^9, 3.673021081407264*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "3"], 
   RowBox[{
    SubscriptBox["a", "k"], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stiffnessMatrixTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         RowBox[{"Grad", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "i"], "[", 
            RowBox[{"u", ",", "v"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ".", 
         RowBox[{"Grad", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "j"], "[", 
            RowBox[{"u", ",", "v"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"useful", ":", " ", 
    RowBox[{"FullSimplify", "[", "]"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.672755527154593*^9, 3.672755527714449*^9}, {
   3.672755631259221*^9, 3.672755697806766*^9}, {3.6727557361142855`*^9, 
   3.672755743326645*^9}, {3.672755781740777*^9, 3.6727557995292535`*^9}, {
   3.672755905488509*^9, 3.6727559289954844`*^9}, {3.673019351498725*^9, 
   3.673019533776351*^9}, 3.673019647113946*^9, {3.6730212504831448`*^9, 
   3.6730212650387526`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"stiffnessMatrix", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["a", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["a", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"stiffnessMatrixTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["a", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["a", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.673020605758695*^9, 3.673020637370582*^9}, {
  3.6730207367587156`*^9, 3.673020749913376*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["715", "192"], ",", 
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "48"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     FractionBox["803", "192"], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "48"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}], ",", 
     FractionBox["11", "12"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6730206382248144`*^9, {3.6730206864320593`*^9, 3.673020720589514*^9}, {
   3.6730207506053033`*^9, 3.673020778059241*^9}, 3.6730209393396225`*^9, 
   3.6730209770409317`*^9, 3.673021042108672*^9, 3.6730212296800137`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["715", "192"], ",", 
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "48"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     FractionBox["803", "192"], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "48"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}], ",", 
     FractionBox["11", "12"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6730206382248144`*^9, {3.6730206864320593`*^9, 3.673020720589514*^9}, {
   3.6730207506053033`*^9, 3.673020778059241*^9}, 3.6730209393396225`*^9, 
   3.6730209770409317`*^9, 3.673021042108672*^9, 3.6730212297308464`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local load vector", "Subsubsection",
 CellChangeTimes->{{3.672902382846168*^9, 3.6729024233021145`*^9}, {
  3.6729071294706197`*^9, 3.6729071307699413`*^9}, {3.6730228708791847`*^9, 
  3.673022873971901*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"loadVector", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Area", "@", "element"}], "12"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["f", "1"]}], "+", 
       SubscriptBox["f", "2"], "+", 
       SubscriptBox["f", "3"]}], ",", 
      RowBox[{
       SubscriptBox["f", "1"], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["f", "2"]}], "+", 
       SubscriptBox["f", "3"]}], ",", 
      RowBox[{
       SubscriptBox["f", "1"], "+", 
       SubscriptBox["f", "2"], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["f", "3"]}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730229983037715`*^9, 3.6730230780631847`*^9}, 
   3.673023138582294*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "3"], 
   RowBox[{
    SubscriptBox["f", "k"], 
    RowBox[{
     SubscriptBox["\[Phi]", "k"], "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadVectorTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "i"], "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6730228767125096`*^9, 3.673022946431862*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"loadVector", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["f", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["f", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"loadVectorTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["f", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["f", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6730229601334524`*^9, 3.6730229840182767`*^9}, {
  3.6730230921307087`*^9, 3.6730231264392667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["7", "6"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6730229642206492`*^9, 3.673022984393436*^9}, {
  3.6730231283276014`*^9, 3.673023144840283*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["7", "6"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6730229642206492`*^9, 3.673022984393436*^9}, {
  3.6730231283276014`*^9, 3.6730231448657193`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals over edges", "Section",
 CellChangeTimes->{{3.672750198580048*^9, 3.67275020805842*^9}}],

Cell[TextData[{
 "Basis functions for linear space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "1"], "(", "Int", ")"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"v", ":", 
         RowBox[{"v", "(", "x", ")"}]}], "=", 
        RowBox[{
         RowBox[{
          SubscriptBox["c", "1"], "x"}], "+", 
         SubscriptBox["c", "0"]}]}], ",", 
       RowBox[{"x", "\[Element]", "Int"}]}], "}"}]}], ",", " ", 
    RowBox[{"Int", ":=", 
     RowBox[{"[", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["x", "2"]}], "]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6727497257965975`*^9, 3.672749740531123*^9}, {
  3.672749772252947*^9, 3.672749872488012*^9}, {3.6727505014205074`*^9, 
  3.6727505032053385`*^9}, {3.6727509319327574`*^9, 3.672750955363983*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "1"], "[", "r_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SubscriptBox["x", "2"], "-", "r"}], 
   RowBox[{
    SubscriptBox["x", "2"], "-", 
    SubscriptBox["x", "1"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "2"], "[", "r_", "]"}], ":=", 
  FractionBox[
   RowBox[{"r", "-", 
    SubscriptBox["x", "1"]}], 
   RowBox[{
    SubscriptBox["x", "2"], "-", 
    SubscriptBox["x", "1"]}]]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "[", "r", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "r", "]"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "\[Rule]", 
        RowBox[{"-", "3"}]}], ",", 
       RowBox[{
        SubscriptBox["x", "2"], "\[Rule]", "5"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"-", "3"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Basis functions of \!\(\*SubscriptBox[\(P\), \
\(1\)]\)([-3,5])\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.672749514599482*^9, 3.672749519976845*^9}, {
  3.6727496654492517`*^9, 3.6727497109753923`*^9}, {3.672749883802886*^9, 
  3.6727500245885115`*^9}, {3.6727500882040462`*^9, 3.6727501000215044`*^9}, {
  3.6727502794598045`*^9, 3.6727503843588085`*^9}, {3.6727504257064524`*^9, 
  3.6727504456364717`*^9}, {3.6727505194504757`*^9, 3.6727505809831996`*^9}, {
  3.6727506993066225`*^9, 3.672750800700061*^9}, {3.6727508704655437`*^9, 
  3.672750887399335*^9}, {3.6727509673694053`*^9, 3.672750980389028*^9}, {
  3.672751554296036*^9, 3.672751564040273*^9}, {3.672932257243923*^9, 
  3.672932273607669*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl1G1U0ncUB3BMHUbLUBamuTkfNsvNSaGGkd1fT+pMTExb+ZBmWflQsTWb
to2s1Kw0nYkP1WmVD1kasFUMPS7+rZrmwAIVyRTR1EQ0KsWUUPff2Yt77vmc
+7335XVOOBSeOI9AILDw+q9/BdSRuTkiVuq0wDA3p4eIZPfcaSMR87hLefjT
jB6O8hifjxuI2J/BjuenjXpo0kUlDOmI2ECa54pxgx7iy37tknYSMZp0y4Eh
nR5+ebPsn3IBEWtOLx6UduphooJZR48jYkb5x8pygR4arHYd3HfvAyw2i/YH
PU4Px2RK3f1dlhi2V2fQCF+BtsrebpWjBTahyDu71PoVePQGzV/UMw/jHarM
OnVwDCopFRPPTphhitNsY+r9UXgQ3ZIvAQLW7zn4d6/TKDDW+iHagxnJuS3W
ZClHB6U5orfVlPeS6qu3GrUPRwAmZYStRVOSwp/pWLHbCETFMM0GuwwSamco
qj+iBUy7PraOPS7hNITZpbQPQxvDNdCv47XEp7WZHeozDELT7wHbN41KSuKU
VrW5LyFUuVVUs+alpOVoC5X3cggUl66QHjX1SS5QIq5OMYYgXuZvUKlUEmX3
1oL8/EHINW06Zbwrkwx4rW4XjA2A3DXzwKCtUFJAEPE2owF4ukab0Z4ghoXR
S/jfX34BhTJT61lrObjTyRvs9P3A2OQYFCJ/DnVMLlO3vh+6C5JuXBzrB4tW
xZmQa33gS7YPfrRzGKZ7Gre5T2jAtK6YnnV4DLAf8jMK2BrwnuITYla9gaGT
NXPsPb3wTuVvWKQbhyzKLst0khq+LVp57hxnEppFQ2JxUzekR8q93b+cho2R
pYmjSc9Bvq2UZex6D2UR3s9O2HZBH+0BqSx6Fgr3XTbSFSqAM9IR99MEdD+N
vlh1pBP27092SZKZobJSXk/JSiU0DC49H7jAHAU4DKSKJ9qhbd81En2PBfIs
izVIL7ZBoDK63bzaEtUvr/zCtEMBx78eqeybR0THRIujP5l5CnY3apsqg6yQ
4lYNR3TwCSivZ7pa5s5HEcJZsUEvhehaj5zv+kko+MbNcQdmC6y5SGQ++uxD
lPv49em0O03woqB+0i1rIVqtybMVvXsId1yP6Zy7rVGZ2Gx5Y+Bf8FrOtD9h
TUaZHGdf/VkJJBe7YBmNZCSM0c2ucGwAG5kLeWCnDUov1XJ7re4Cq6PO5Dhr
g8oiyx2WLBLCaNzV1O6btgiZjfj4hVdBfbwg2zqEgjTDlGAvbgnceZK6WR1K
QZnz9xb5upWAcK2HDZ9NQQQPcZd/Cw+qHasusb6hIJQSkxJC5UGx6sLtvAQ8
P1aZl8Q/D5ywnD5SBp5/6/OkQl0Iy1CsP7Ea96SghsbNATeBg3lnDe5VEX7Q
kg1On6iaq2vxe+lTj1nUbKCawiMCfsPvGZEumX8SLMRBKdmNeH5O7lmlzgSN
l3e5eRtu8nAinXsEui+/2dnWgbuIdiqMmgadCwVuFSp8/6OMmgP8w9CqWy5c
r8bn9iTddTUHGq87NR3X4t64XcPg7gUxtSePPYo7SOtymL8bbmdfCHfW42Yd
TbyljoebuxersQncdYyODdxtUKVQVBS+wy2KihKrw+DKusKkeCPuzOl7O7gB
cEnI8qLN4P70x6Jsri/8/7dwEwgKTBu59l/FSl+u
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwlx3s01Gkcx/FxaV2K8GycaZ0splV22xymjePyfWpdt7TrVi2S6IIuq63d
k/YPFJZcInYjatW4dHGYynZoy++nUdO2JmYYZjXRCGWGnlyGksva8/zxOa/P
2zbmh+B9uhwOJ3Bx//slWKoXFgzYxStjh8O8QhMcMt/PLLZwe0wflw8nf3P9
bEK72Mvkebe53iDWhMcMaRbb7ePKi9xQiC7+o6e1e7HbXYTnuHuhYGzNPyV1
BixbKtqQyz0OkwL3GpfdBmxKavaJM9w0uGu458iBpo/Y6OOEm8UtgmRJl6Z5
zxLWsCjg8tuxChiu5FpttNZnG9qd/fxW1YFjn7/R8ue67M7Tyh5Rdj1UIMHk
v6d02MSbx9YVTzaCKOJJLgMcdjK/67GODgOuXm7YSTTHPG5+xLR5PIDzGXfG
q9AHJj4pwOT7kRaAKQkn5Nw7ptnIeaHmsBjCI911Bnu0TJWgZX7l6ifADm/e
VRM0wWDL+1dCaluhw9Xez03+llknVjY8cmwD4ewt350+I0wnDnlz7U07bOsK
uXPV4xVzyPigTO4kA1lZufFDsYppVey4b5rXAdEST61CoWBCfXeqBgY6IXPW
59eZPyWMa3n2jnJeF0jtUw4PWggZ1XxhZ1xyN7R7DCd1xjTAUECbwFKkgHzJ
7NNsUyncKulLktr2gKuPtf9W6TOoztTLWnvyGSjPxl8rHe2H6dhw9f6/lPCV
Gfebh1GvwdQ7I/imVS/MbipySTs2Cslmg8tUkX3Af1fLidw4BiZNn3O6A1/A
tMJTu1wzAV4/fzsnmnkBR8855+UlTkFZRY7AvkwFJ8KkfIcv3kNUGF9itKUf
pNvPB870fIB6+b7Cpql+UDmJjIsj5sG1Vag79PtLgDOtaocsDv7UZ7+20HsA
4uIS7OIlOpjP31BQPzQAdwc/KfRbqoefj+f+LUgfhI4DV4xd9upjtUtQOtd5
CPy6Ijr1qpZgnmadWqdjCFID1BUqXQPM8n6SJaa+AqtrN8QV/oY4p1MeG8x7
DV3VKfZLMo2wJoQt0G15DRE3HDN+7DfGtWErvnY7OgwepQbuD1cvw5ckpy/2
W6jh5dnGKV6aCR4XR/5i8UAN9fbJGlulKe4pYLRmRzTwVurOPWVqhqkjkFBk
xybdM8PUETCX2JkNRJlj6igEymtmrefNMXUURnZfPqS8boGpb6Axui7ddCvC
VAL1bYe29G5DmEpA6OVoXhuEMJVAlXVlWeAOhKkEihQXbufEIEwlkPhdhso4
CWEqgTV4l6dBFcJUAry6lXrdVxGmErBZpXhcdQNhKgHL2eBQ35sIUwnoN/gf
TL+HMJXAi/X8Er0OhKkElJfGojrkCFMJdJvU8QQKhKkEnmrWCjf3IkwlcK/a
Rpw6jDCVQIPl85ygEYSpBG6nXwi2JQhTCVyPXdHLTiJMJVApkwnypxGmEijf
lB8fPYMwlUCZMHC90xzCVALnbZZqFxYQphL4D2DPaPY=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Basis functions of \\!\\(\\*SubscriptBox[\\(P\\), \
\\(1\\)]\\)([-3,5])\"", TraditionalForm], 
     PlotRange -> {{-3, 5}, {0., 0.9999999795918367}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.67275002787962*^9, 3.6727501018140383`*^9, {3.6727502922167807`*^9, 
   3.672750327995065*^9}, {3.67275037149932*^9, 3.6727503856491237`*^9}, {
   3.6727504465904655`*^9, 3.6727504503556614`*^9}, {3.6727505051877747`*^9, 
   3.672750521169012*^9}, {3.672750558289155*^9, 3.6727505820570145`*^9}, {
   3.6727507196099143`*^9, 3.672750730040512*^9}, 3.6727508020406313`*^9, 
   3.672750982286456*^9, {3.672751565340839*^9, 3.672751570055523*^9}, 
   3.672931911487751*^9, {3.672932262136461*^9, 3.672932274917413*^9}, 
   3.672932556140272*^9, 3.672932663121711*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Kappa]", "1"], 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], "[", "x", "]"}]}], "+", 
   RowBox[{
    SubscriptBox["\[Kappa]", "2"], 
    RowBox[{
     SubscriptBox["\[Phi]", "2"], "[", "x", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["g", "D"], "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["g", 
     SubscriptBox["D", "1"]], 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], "[", "x", "]"}]}], "+", 
   RowBox[{
    SubscriptBox["g", 
     SubscriptBox["D", "2"]], 
    RowBox[{
     SubscriptBox["\[Phi]", "2"], "[", "x", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["g", "N"], "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["g", 
     SubscriptBox["N", "1"]], 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], "[", "x", "]"}]}], "+", 
   RowBox[{
    SubscriptBox["g", 
     SubscriptBox["N", "2"]], 
    RowBox[{
     SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.672750996812456*^9, 3.6727511437989635`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["R", "loc"], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       SubscriptBox["x", "1"], 
       SubscriptBox["x", "2"]], 
      RowBox[{
       RowBox[{"\[Kappa]", "[", "t", "]"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "i"], "[", "t", "]"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "j"], "[", "t", "]"}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6695270612323527`*^9, 3.669527077880655*^9}, {
   3.6695272202778773`*^9, 3.6695272489700394`*^9}, {3.669527659181425*^9, 
   3.6695276786589375`*^9}, {3.669533808868678*^9, 3.669533819629551*^9}, {
   3.669533886443161*^9, 3.669533913711669*^9}, {3.6695339817802887`*^9, 
   3.669534021264883*^9}, {3.6695340635094237`*^9, 3.6695341451214743`*^9}, {
   3.672751191457691*^9, 3.672751348764264*^9}, 3.672751397993082*^9, {
   3.672751752435815*^9, 3.672751804542651*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["r", "loc"], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       SubscriptBox["x", "1"], 
       SubscriptBox["x", "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Kappa]", "[", "t", "]"}], 
          RowBox[{
           SubscriptBox["g", "D"], "[", "t", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["g", "N"], "[", "t", "]"}]}], ")"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "i"], "[", "t", "]"}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6695341558323*^9, 3.669534175752903*^9}, {
  3.6695342110352044`*^9, 3.669534320907181*^9}, {3.672751340990221*^9, 
  3.672751395549325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "@", 
  SubscriptBox["R", "loc"]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", 
  SubscriptBox["r", "loc"]}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "12"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SubscriptBox["\[Kappa]", "1"]}], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "12"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "12"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "12"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "-", 
         SubscriptBox["x", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         RowBox[{"3", " ", 
          SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.672751431900011*^9, 3.6727516029594903`*^9, 
  3.6727516631847563`*^9, 3.6727517876766214`*^9, 3.6727518663546867`*^9, 
  3.6729325657467527`*^9, 3.672932677820071*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "12"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["x", "1"], "-", 
          SubscriptBox["x", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "1"]]}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "2"]]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "1"]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SubscriptBox["\[Kappa]", "1"]}], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "12"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["x", "1"], "-", 
          SubscriptBox["x", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "1"]]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "2"]]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "1"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             RowBox[{"3", " ", 
              SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.672751431900011*^9, 3.6727516029594903`*^9, 
  3.6727516631847563`*^9, 3.6727517876766214`*^9, 3.6727518663546867`*^9, 
  3.6729325657467527`*^9, 3.672932677847653*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "\[Element]", "Integers"}], "&&", 
    RowBox[{"m", "\[Element]", "Integers"}], "&&", 
    RowBox[{"n", ">", "0"}], "&&", 
    RowBox[{"m", ">", "0"}]}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     SubscriptBox["x", "1"], 
     SubscriptBox["x", "2"]], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "[", "r", "]"}], ")"}], "n"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "r", "]"}], ")"}], "m"], 
     RowBox[{"\[DifferentialD]", "r"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6729318524345293`*^9, 3.6729320541348743`*^9}, {
   3.6729320877142897`*^9, 3.6729321066018934`*^9}, {3.6729321910583057`*^9, 
   3.6729322204329615`*^9}, {3.6729323157701893`*^9, 3.672932324525851*^9}, 
   3.6729323725359144`*^9, {3.6729324971001787`*^9, 3.6729325360399523`*^9}, {
   3.672932686756424*^9, 3.672932688376973*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"m", "!"}], " ", 
     RowBox[{"n", "!"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["x", "1"]}], "+", 
       SubscriptBox["x", "2"]}], ")"}]}], 
    RowBox[{"Gamma", "[", 
     RowBox[{"2", "+", "m", "+", "n"}], "]"}]], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], ">", "0"}], "&&", 
    RowBox[{
     SubscriptBox["x", "2"], ">", 
     SubscriptBox["x", "1"]}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6729319018982363`*^9, 3.6729319493770356`*^9}, {
   3.6729320294742312`*^9, 3.6729320619429684`*^9}, 3.6729321136786747`*^9, {
   3.6729322048925495`*^9, 3.672932229074788*^9}, 3.6729323315165405`*^9, 
   3.672932380723007*^9, {3.672932497697156*^9, 3.6729325728162394`*^9}, {
   3.672932684190425*^9, 3.6729326943198414`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.2 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 141, 2, 36, "Input"],
Cell[CellGroupData[{
Cell[724, 26, 152, 2, 108, "Title"],
Cell[CellGroupData[{
Cell[901, 32, 175, 2, 76, "Section"],
Cell[CellGroupData[{
Cell[1101, 38, 92, 1, 51, "Subsection"],
Cell[1196, 41, 1073, 33, 35, "Text"],
Cell[2272, 76, 2454, 72, 152, "Input"],
Cell[CellGroupData[{
Cell[4751, 152, 2767, 73, 159, "Input"],
Cell[7521, 227, 164117, 2847, 404, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171687, 3080, 102, 1, 51, "Subsection"],
Cell[171792, 3083, 1448, 40, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173277, 3128, 101, 1, 51, "Subsection"],
Cell[CellGroupData[{
Cell[173403, 3133, 109, 1, 40, "Subsubsection"],
Cell[173515, 3136, 2785, 79, 148, "Input"],
Cell[176303, 3217, 1282, 38, 94, "Input"],
Cell[CellGroupData[{
Cell[177610, 3259, 1649, 50, 94, "Input"],
Cell[179262, 3311, 905, 23, 53, "Output"],
Cell[180170, 3336, 907, 23, 53, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181126, 3365, 168, 2, 40, "Subsubsection"],
Cell[181297, 3369, 5654, 173, 153, "Input"],
Cell[186954, 3544, 1888, 53, 140, "Input"],
Cell[CellGroupData[{
Cell[188867, 3601, 1600, 49, 94, "Input"],
Cell[190470, 3652, 879, 27, 53, "Output"],
Cell[191352, 3681, 879, 27, 53, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192280, 3714, 214, 3, 40, "Subsubsection"],
Cell[192497, 3719, 752, 24, 53, "Input"],
Cell[193252, 3745, 936, 30, 94, "Input"],
Cell[CellGroupData[{
Cell[194213, 3779, 1596, 49, 94, "Input"],
Cell[195812, 3830, 246, 6, 53, "Output"],
Cell[196061, 3838, 248, 6, 53, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196382, 3852, 104, 1, 76, "Section"],
Cell[196489, 3855, 911, 27, 35, "Text"],
Cell[CellGroupData[{
Cell[197425, 3886, 2180, 59, 143, "Input"],
Cell[199608, 3947, 14767, 293, 322, "Output"]
}, Open  ]],
Cell[214390, 4243, 1175, 42, 85, "Input"],
Cell[215568, 4287, 1123, 27, 59, "Input"],
Cell[216694, 4316, 876, 26, 59, "Input"],
Cell[CellGroupData[{
Cell[217595, 4346, 167, 4, 60, "Input"],
Cell[217765, 4352, 2165, 66, 89, "Output"],
Cell[219933, 4420, 2797, 82, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222767, 4507, 1031, 26, 59, "Input"],
Cell[223801, 4535, 898, 24, 56, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

