(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    834225,      15432]
NotebookOptionsPosition[    831060,      15324]
NotebookOutlinePosition[    831436,      15340]
CellTagsIndexPosition[    831393,      15337]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.669535759933158*^9, 3.6695357703706627`*^9}}],

Cell[CellGroupData[{

Cell["Quadratures for FEM", "Title",
 CellChangeTimes->{{3.67274913464913*^9, 3.6727491400116396`*^9}, {
  3.672749178747164*^9, 3.672749181511141*^9}}],

Cell[CellGroupData[{

Cell["Integrals over elements (triangles)", "Section",
 CellChangeTimes->{{3.672749195568788*^9, 3.6727492091998425`*^9}, {
  3.6727501704611273`*^9, 3.6727501749239335`*^9}}],

Cell[CellGroupData[{

Cell["Basis", "Subsection",
 CellChangeTimes->{{3.67275518652402*^9, 3.672755187973054*^9}}],

Cell[TextData[{
 "Basis functions for linear space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "1"], "(", "\[CapitalDelta]", ")"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"v", ":", 
         RowBox[{"v", "(", 
          RowBox[{"x", ",", "y"}], ")"}]}], "=", 
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", 
         RowBox[{"b", " ", "y"}], "+", "c"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "\[Element]", "\[CapitalDelta]"}]}], 
      "}"}]}], ",", " ", 
    RowBox[{"\[CapitalDelta]", ":=", 
     RowBox[{"triangle", " ", 
      RowBox[{"w", "/", " ", "nodes"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}]}]}], ",", " ", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.672752379555704*^9, 3.672752581281209*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["y", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["y", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "3"], ",", 
       SubscriptBox["y", "3"]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"element", "=", 
   RowBox[{"Triangle", "@", "nodes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basisCoef", "=", 
   RowBox[{"Inverse", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "1"], ",", 
        SubscriptBox["x", "2"], ",", 
        SubscriptBox["x", "3"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["y", "2"], ",", 
        SubscriptBox["y", "3"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Phi]", "1"], "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"basisCoef", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Phi]", "2"], "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"basisCoef", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Phi]", "3"], "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"basisCoef", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", "1"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6727526806962247`*^9, 3.6727527860463743`*^9}, {
  3.6727529249166718`*^9, 3.6727529556756525`*^9}, {3.6727532559615955`*^9, 
  3.67275349349656*^9}, {3.672753562381133*^9, 3.6727536175676937`*^9}, {
  3.6727536495390716`*^9, 3.6727537076852503`*^9}, {3.6727537668418427`*^9, 
  3.672753900022877*^9}, {3.672754008225913*^9, 3.672754108422325*^9}, {
  3.672754211354912*^9, 3.6727542117026143`*^9}, {3.6729042615496807`*^9, 
  3.6729043232475414`*^9}, {3.6730170609516764`*^9, 3.6730170856143513`*^9}, {
  3.6731940660615215`*^9, 3.673194093977135*^9}, {3.673195670728162*^9, 
  3.6731956737391896`*^9}, {3.6731966004620647`*^9, 3.673196602696574*^9}, {
  3.673196647205718*^9, 3.673196650705628*^9}, {3.6731968713859487`*^9, 
  3.6731968942308035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Triangle", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["3", "4"], ",", "2"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Phi]", "3"], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "3"], "\[Rule]", 
        FractionBox["3", "4"]}], ",", 
       RowBox[{
        SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "K"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(3\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Basis functions of \!\(\*SubscriptBox[\(P\), \
\(1\)]\)(\[CapitalDelta]), (\!\(\*SubscriptBox[\(x\), \
\(1\)]\),\!\(\*SubscriptBox[\(y\), \(1\)]\))=(0,0), \
(\!\(\*SubscriptBox[\(x\), \(2\)]\),\!\(\*SubscriptBox[\(y\), \
\(2\)]\))=(1,0), (\!\(\*SubscriptBox[\(x\), \
\(3\)]\),\!\(\*SubscriptBox[\(y\), \(3\)]\))=(\!\(\*FractionBox[\(3\), \(4\)]\
\),2)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.672754109644085*^9, 3.672754129164958*^9}, {
  3.672754274711578*^9, 3.672754360859954*^9}, {3.6727544978119197`*^9, 
  3.672754497944442*^9}, {3.6727545419532824`*^9, 3.672754712065358*^9}, {
  3.6727547716724033`*^9, 3.6727548433633184`*^9}, {3.6727550011061563`*^9, 
  3.6727550161617146`*^9}, {3.6727550482013216`*^9, 3.672755059900308*^9}, {
  3.6729022161559315`*^9, 3.6729022536902018`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
eCMW8ftpkjdi0QXhjVj8MQdvZGCg541Y/ILwRizmIbwRi5kIb8RiCMIbsZiE
8EZ8P0fPG7GI8kYsZiO8EYvJCG/EYiHCG7GYgfBGLOYhvBGLMQhvxGIiwhux
mIrwRiwWIrwRi6UIb8RiMcIb8X0tPW/EYjnCG7FYjvBGLJYivBGLrghvxKIP
whux+BHhjVgMRngjFl3m4I0MDPS8EYufEd6IczJ63ojFWIQ3YjEa4Y1YjEJ4
IxZ/ILwRi+EIb8RiwBy8kYGBnjdiMQDhjVgMQXgjFj8hvBGLHxHeiEWUs2Gx
F/Ebcf5Hzxv/O8+j5434h543MjDQ80Ys9iJ+IxZfzsEbZ/nkf+GNWOxFeCMW
8XFFzxtRzxPvh7neOzaY4/3fjDneO56rnbneU57r/eK53j+tcbZ4FlHUDq8z
F9AEosf+x3qco3+kew/Of4734zTTv/9adaoLxnKTZBRfkF7NXO8n/m/zc72X
N9d7XnO9XzlXXmV2f+hB9/6LyhzvxeDtrJijHS+6+rnex/EyXSgZtaUXmHPZ
LMd0c/7H+krLqxryX3uBjeUKn25P5H/n//8XP3kuDxmfRxx0njDLLB++Suej
Lp7NX5kjT++vzuUVz3Wcc82Lucb/XPPlfzsf55pHc73XP1d+rnn0v52P/3/P
o//tvP7fzru53heeK/+/naf/23k31/yda77PNe/+t/MX+6DPm+aad//Pef1/
mb9zeen/0/yln6dz+dtzzfe5/Hbsg3r7cz2n+6drt7YCZWqk8rZWH7yTqq/9
NJEAeP66zpGr/uW9YHJT5u31B4nwT4PupMLuwUmNS+2jcPehcLr09Uwif34v
d9ZY7hic2MNyyedJBpEXWqu9LuXNCJgop7PWxGQRef/HOa/MNo3AWOdlV94d
2UT+x53Ge5y/m4C/pjbyiGkJke9Q6H7UNUGFSmrV4CuBEkidP/0ut6UdbrxI
F5m60g8b3w5/PbTJn8jPO3vh8gaOfvj94jMtUzGAaIf72YejOS8mwKbVua44
MY3Ie99jDQu+PwGMU5yG3TVp8K3npHVpewukXf6qX7Z+EuTzjrCEmEUR+cgG
QWsx80nQypFon4j8RfSbtWzyZI3DH/hy9YWgreoXot7u1QrG9L1TkKB1q7Xg
UCRRj70WMQ2K/8bXPSLPWLltoJr1L0gJTPxY/cmVOM64uzqirocmoHUqdWTJ
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
Vl1YuO/Ezz2uKLNuK38dOStRx18Y664P37Pf3OV8gh7Pb271q20xzk+tT2u/
6ZvD8Tp+rO1Eh7IBAert4+Zx239M0MdlirXZ86fJvurDgjvjx82N0+2vGuvb
h+bGmS9YiDx+rqq5r9ToB2uvqaDjyYNSwhL0OFccmNKg58gAdXh/bKsblvE6
vnrci1/szwer3F5jxk6KTdTxv4vlVN2521e5zx7s2cwpVW/PpGP1j4d/rmfe
5HbOl2ufruNnFkeWalt4o0r8Ml7RenvwOx25P7e3WZoWr+N+ewe51mwXqKYf
nV9x76VEHXet7trSe7CPOhTgH9FvYbKOvx7au8abbu4Kv6uAv+tVYUmBFd12
dByobJ5sWZ+uxx+P12nnhYXDfk7S/fj8eXOu9xkv5fM4KW3V+RS9vz1e+D2v
OtpFLWzROWZjeWp/MGBH2YLu3up+sruz+4B03b5E9e0Vyl24rKrkK9jm49s4
3d6m//0RlcyDVcSpCQnFCmXqePm3az6s6ri1Y1LjOF+z0Ex9Pd5bMe7mlneL
VWKQxZw55ek6fT/uXtpkZxf1uufFwTfHZuvrK/xOYSe/lPnqgc/ViDPrs3Q8
8volv9XLjqpWpT/7pDHJup9bi8s86H3QS1lNWnPdzyJab/+vTZpU7Jb+RAUn
bTt4YHasjqed/67pbwfD1IFz07Y5hsfp+MZOced3/hSippTumbl+TZZ47yfL
Ya6rzQPi7Ar0XzOy6MYnKqjCg127RxJXkr//rT6/OUSrtZkbZkxNpeeT9Tu8
/mHI9jj1yuZA17Qt9J5K6riuIztkhavuVy8M7bOV+MeN0yNXuS2NUeOWJk5t
1Tpe72+R5NB8pw+HqAbbqlTY/Yh4Ultbyzvx88NURrMOOYUKZAvfs9rH43S9
c8ST+runbHlwOVgtb225PdWcOMeAy01vdX4SrHZXtHzZtUuc/t2DDt3TNm8I
U8VDetScmEnvM0V75R9Rw+maGmEblNGrIL3PNK/mlgL53l1VdsOL//rqKPFB
bQeNmFt+crQ6s7TNVLuy1P6Z/cKa1fZeVaWTW90e3Jbecxpj38UzuJmTajj9
wMe/mtJ7Et8Oubn7t71XlHsRyx7TVhEPOCzq5bi2+SOV2ZgfZ1fvQNyN/7Zv
lmV4Ris1yWvVudH0HtjBMxn28w96qmbeVncTJ9N6FTPXvxrXq4O/OlBne8Nl
Z/+zrr9T+igPyzi1OdvyL5+cFD0+o9+u+TF9qKsaeTN0YV2bFP27E951+7C0
iK9KDhy0rclQej+j3JKzK8fc9VVB39pnvC9O7xk0bta4iNmzADXPrv7bcheJ
T2k+7vTzPxolqjZ2/YekHKXvJwwYV8HNrGW8sg/o2e9wP+JSm/7ZbMecO1Fq
xNUH9oNn0/t5bWdVNg8Z4aqOfslHwTqO31G67HPoze6PxKfbDKr4OrpwsKr7
+GnurJ/ovZPa9UYFeoy+rn5v0XDENydo/bym7au5rWker4avnRVruy5Dz+dx
uSeXx58/0vHVzMZtzMdTvHGzkseGtl+gaq9NnNrmXZqOdyzw55Le188o9/fe
60/3pPcktvrfO7z0Hy+1+Uzuqt/bEA++rFaNy5YtXJRXuZ7Lb2+k93I+vrm0
YWLgXWV7cGzwli30/lBVx79SHl50VP+eODAsLpzye/Ivlm2trAPUmpLLn1/w
o/ddogKHFjo3yV/NGfhxWnYv+k5mkf5DzC0XBymLwjNOxkyi72B7Nwywqn8k
Vs2o0yUqZzjxVuZpd1o3GBalemR3KZb7n+91Txh+O9Kie5jqZLO1yKi+xJlO
z2z5ZPDcJ6qReZ3xs99m6Hizj1X2XetxS7lu7O51fli4jm+7XKiMZVi8KtCt
VOuy5vSdnASHmmuTQwNVtSYretvF03pCV4I7j3P87BMvVavQ1K8Xfc+tmu2u
cVVj4pRTZAGzLjfou1j+L6bsLmHpp2bULd+h8XL8LoGjqvf3iHYXNmYr2x8X
Z8X+9lTHbZJr1a/VbbCaZTFl1HMXLx0/PqzZqbV+aWpAn6YfO0Tj9eKnhiZ7
vt7c21/tXNbi+tb6yTruu8J5U9qVIGVfKdfxzALidE6UrLO3SZ84Vczzu/U/
dorT7WOT41NnbIhWE0a0cny8iuKN3R4smvExSlVsWebMruWJOu5eptjJqMJh
qmbpkSWTYil+aeSiyA7dQtWjD90L2mZk6t8dHfJ4j8fNa8ra89lGi7kZOr6h
y9VbW60eqtQWF2otqJSg+6ld1vuSRdATZX3Efe7amul6HOzfl2z9YuUj9dTy
TbPsStE6vs596yTbl3Fqe41fb0W3idPxyOWWm3rtilG3+m1r8HNglu4/3++N
tnRedFmdbnlsSdWNKbr939ZBRb0/zyeVXde0c5qWpbcz5oRvVin3S6rL341K
ROr3KsJU4DWPi0d9PRR+74Xfd1y0r/rr1atydHuMfyy2octP7VP19qS5tEg5
V8VPBakbPXZfoPierEUhN6x8VPU6g5f0n3BWb2d777V1R2dkK598Vg9WdaH3
L1f2Pe5dsqibWvCy2M9T/qVxqBD4qWfr4tEq/PajYW8XROj4n/nqDinYO0G5
zX5T6k1CuP5d87WVctdtT1Bvzju0PvgmWMffT+w07traJNVv2tJqH3PCdD8/
fe+Tk39TorplPqBI8YQAHa8ZOOHtsu0pKjnZXKU/C9LxTTNWjCm5MVldezal
t29Coo7vfNJz5uQOYSrKavrmolvc9O+umtYu7NPhdBVs/eHF79vv6PiKstcO
ml3MVGc2Oz92n08cTfVm7ltrWiWr26V/8h46jLiMv3KWbRsZlqQ2D7s61PY7
WmfFzOXZ+LgfUtXZ3Zmji/Wj+0k1fU/3+Rj5Od+sv/emTkUXHfdYnHOr3b10
daHKyd0JDvRdi15zPw7wHp6qrn1pd1NvJ35vaEKhjMq2fxP/rn5tkdrZAety
WkczyKhrlw7Linvs7qP7OWAf7jRgO753FqDnbfzuXsS5Zb90e0icUb4VuQ8n
nkhSbUOOLbz5xkWPc9Mz8RbWq/E6PK3jeB5/u9q3ZsdT6fp3VydWmFxpppsa
1OTNbN8yNF+98Zrpatd4i5r+3mrt+1mpOl7PeeXzovX9VWSBDPMBTlk6XtTn
Y7O9b6+r8Nk3CyxfQPEay3d5Wcy7pW7HOpU4G0/9lH5t4TZuma8qMeD5Nw4e
GTru0mlCmnWis+I+t7btHNv2dSKFz7U8ands8Ofzivvcj5s8rY9G3BA+9y9f
J/XggqvwuW+21Uv+6Wyo8LnXjr9c0bf+E+Fz8XuF3OcO21HTak7vSOFzcX7g
PreGtaf52+2rhc9dsWfhpVcZl4TPxe95cZ+bNG9bKY97a4XPxd/lPhe/n1X0
kVfdXSMonrx8ZtF3uRcU97/NF83d2mXrA+F/sX/uf72qvD1VPfey9L8jiixp
EXFC+N+JhzpOjnbYIPwv9s/9r5d/uT8sigQJ/3vttWOBgnvchP+9c35g/Q0R
94X/bbXlSLv3Vx8J//v2x8DFg/t7CP/rOHnj8J/jfIX/xe3k/rf0H2Ydbt+7
Kfxv3MApLwI/Ogv/e/7bxCKnSnkJ/7vb+B4l97/43Tfuf8OjFtwIPO0m/K/v
4Jjm7RYHCv9b/NC+igdsXYX/Pb/mRLLzrTDhf/vaj0uP6XNJ+N8A4z4A97/l
4/eXGeYaq+dLjOP3SbkvLtu08oCSKlT4YtWle91eKcnCFxfy7H2hbelk4Yuv
2s2deDAwUPjitMSHDg3CjwtfXHPhthxV+4rwxUda78sNaHFX+OK9hl/o7Fu/
+MhJFJ/79pV3dk684n55yoAizSy2BAq/vHdhtyHzwlyFX37e3eFTo5S7wi8/
GtCsedpPvsIv767XarzHphvCL5d92WVNs0Juwi/Hlh3j1/NEsPDLmHdsamc2
+P4mrRPQ8cah3PYPExX30csevkiaNyVI+Ojbq593f77OV/jotElTr01p7iR8
9OJ8DVyfZsYIH11uZs+RN6vHCh89ac+kVg3G+ggffdmqxJB5bWKFj15Rs+ir
x2sihY+eP7FJYJ2bicJHtwjq1TWtdIjw0bdqtqvXuneg8NFxNVpuWOEbJny0
c1bzd8/igoSPHtxijl3z+R7CR/8yofUhr39ChI9uXLn/4Obr44SP7uZd8IrN
nXDhoy1+Oj+jeoNQ4aPXbXNIG1H+kPDRd75zOVLf84bw0e1zBjutuusufLTZ
/ap+j58+ET56UkzBbQeWbunIfXTRcfXOdS0WJXx0/NjjD1b8Ei98tNmAkx/V
BBfho68Y90W5j859nnhmdmKQ8NH9vxtS8kLFAOGjC1n8e2LB4Qjho7ct7rv/
25UxwkevP/mqt/eOOOGjA/56cbpqhQTho9e2HzMk5mGE8NHno1IOLvo7Vvho
mwnpti/2RwkfHbWv6txns4OFj94e2XzN0xthwkf3mN0y+rVnlPDRFq5FPH2O
hQof/fG3A52WfkoSPjpo3y+FN7t4Ch89ocSUKvsPxAkf/TLn/MgRj2OEj559
0e1t3MBA4aMt7Ee/9myfIHx06JUrV+cM2yZ89MekXYkT3mYLH61WRbX98MhV
+Oi2S2dkdY1LFD56mcNsu10NE4SPnnDupO2dZUHCRyc/v5t20iZC+Oi9ZrE/
2xeLFD7608S+e/bbxAkfXVztfpeeECd8dAOPQ+lmc1OFj768w2rOmdxk4aOP
ewRaPGsVI3y0Z5ukKUVOpAof/WRsS4vcKhHCRxedU2uc07xo4aNP/PHI/JeQ
dOGjqz2+P/dIsWTho3/bGlWjb3aq8NFHF659NtEsSfho/D4y99HBRt3z9k75
d/nzP9Xbk2jUDS861JtgGZKj41Gzxg9qGZ6puO9Obe/cZMz/vD/EfPe9ec9b
HLicJHy3zY1zJ3xPTxW+u+K/UTvKesYJ3+1beeCJwLcxwnc7ZRTs8WlRmPDd
e/3mZBRIDxS+e49FrzoDPvgI391y/7XiBV8EC9/dbbtZpoWXj/DdfuZDLJ/m
+gvf3WDT2s6DJyUI3/1NVYeNXZpdFb77ffiNetad1gnf3bbTffPfX18XvnuZ
VZlyV9bdFr670KvGwaOm3xC+22tA+4FtzrgK3x3u/C5+48LVwnd7lMlu+WeD
PcJ3Y73NfXfZneftu891E74b23PfXaPyk/1JgU7Cd2N77rut/q3WKd+yU8J3
V5jT5MT6D8glku/Gfrjv/uZqsTLdzqYI3+3mXnHy4B3ZwnfH7J66bGVOsvDd
gw4VKR3QLVP47v6FQ959ys0QvttySew3jSemCN9tk1L6XROrdPVHdLEPNja0
Pc+M65b7cRxv7sf1cWN+HMeV+3HkXbgfR16H+3GMcz+OvB334xjnfhzrFO7H
Mc79OMa5H8c49+P4vJ/7cYxzP45x7scxzv048ijcj2Oc+3EcZ+7HMc79OB4v
7sexPffjeHy4H8fx534c49yP6/WJmB/X7ykxP45x7sf1+/nMj2Oc+3GMcz+O
ce7H8Xe5H8fx534c++F+HPeX+3HNnTA/ju25H8f23I9jnPtxvE65H8c49+MY
534cr0fuxzHO/Tj2w/047hf34xgXz6mNOPfjyB1yP45x7sdxO7kfx7zB/TjG
uR/HOPfj+Lvcj+M4cD+O28P9OPbP/TjGuR/HOPfjuD3cj+P2cD+O7bkfxzj3
47j93I9rHpT5cYxzP479cD+O+ZP7cYxzP479cz+Oce7H8Xe5H8ff4X5c+wPm
x/X9fubHMc79OMa5H8c49+MY534c94v7cYxzP47bz/049s/9OI4P9+N6PSPm
xzHO/TjGuR/H3+V+XNePzI9jnPtx3E7uxzHO/TiOA/fjGOd+HNRD+HGMcz+O
ce7HsX/uxzHO/TjGuR/H/rkfxzj34xjnflzvF/PjoBeFH39mxLkfR66U+3H9
PJD5cYxzP47bw/04tud+HOPcj2Oc+3GMcz+Ov8v9OMa5H8d+uB/HceN+HOPc
j2Oc+3H8O/fj2J77cdxO7scxzv04/g7349ie+3F9nJkf1/dpmB/HOPfjGOd+
HPeL+3G8frkfx/bcj+N5yP04/p37cYxzP66PC/PjGOd+HOPcj2Oc+3H8O/fj
GOd+HP/O/TjGuR/H48j9OMa5H8c49+PYP/fj+npkfhz/zv049s/9OPbD/Tj+
f9yP4/nA/TiOs3gObsS5H9d+mvlxbM/9OMa5H9fnIfPjGOd+HOPcj2Oc+3GM
c5+YdHRfUujy30Q936/vuZ1Xty3ryOvhBg26VI+3nCvqybE/Fxja/PVqcb3j
fQx+vQ9a4/iqX8YisZ0z0seZL/hnY0fvPDjtvLjrvPjevHjUvDjP2dbNn69d
TT4F43nxPAvz4HnyGoe8nu+Xz+P5eF77m9f4/F+Nw//V/ua1X637WncKfYr1
xmu1ZOyWP0JHeKop+W90eFM/Sdd7ziUitvVd/EhtLljYo2luit7fws41/3h2
5JKqvSlgfoUBScTbh985Eh/vqnL+3RceWy9FxwtVbV9k2oc76kRssekhRWh8
GmfurR51frtKtmk4vUxgiv7dzVXLXok8eF8Vn/a0du+3qTr+S0JaZPUJ19S9
Kz2rDv+Qov3y7/6/VvOr8VAt7JzumhAVq+NdykR9amYZqgrUfe1S4lyy3t/O
ue/H55vnpEoU8Z0/0TdV+9PdZsMPNbp8X41eHVFk1qIkHS9e7e2iXzs+VkPy
u5Z8eihD9190wtmp1wvbqvGjWq5oWZD8WvEptSNOfQxWkdvsCwSXpPVBzT91
9pucHa4WN5nSyWpmhr7eb4RuvpCx+aza1LVNYi8L8u+Tz06oUHCXi3Lwbr2j
+9okHQ+3mTS63Ccf9bh35lGvpAi9nci3WLUpG+zajvyyVftu7W12RKg3P8wq
Um41+ZGoBsVD3q2JUsnXKnesbEfrvKZMnXfg5cRI9SRp54c480T9u2all4T0
jwhQ3j90XHhnM61b3PHZh9w9OaFqx6FrMx+3oXE4m1jz08L9wepF/h6/1H0X
qfsJDBk5L6NUlJodf/hUt7YUH/Hq0/c+/lEq+mCDJX9do+8SdIn5Lul+W2+1
z2roitU59N2D4fUXehcb5K7M3txoZR1H64j/8drpg/N6T7U+dNexsyujdf+d
8xdvNmVjhMq3a1/WgXnhtL+ubxa26xenvitc8eiSg1TnH4mtc87cJ1z5HJ46
a7QLrSe3bu2HO6HH4lW/njn2vgNofeilF1rWivZ3V3nNY/WqNFs9xTpeX7+H
3kek/zA6QllOHjcv+kdaz75c95plDgQ7q/3b2/U1y6b1I+tcKO73e4k49cq1
/x9NI+k72y/mFW+ZvTtBxdheCFw+NFz3X8javVSPnxLUgX9/e1f2O6onZ/66
54XH8keqhXtMYfsoZ8pTjYbc/elRhhofbvO25PjHOj7p9NkHnaalqeSK0fl9
WlK+G1PjapZfCzfVI3T68CbHM/T8E7jz9LYBK51U6lSX53f1eeuoGmVuMbd9
HaJ21B+/J8IrU+/XxwUtcvrevqzWLds2t8yebB1/f6BzvVofbFXbTiXPD+xC
dXLWE9tBB4pdUXXWVYiKmfqf+XBQ+WJVT05XPilJkb88o34ca2/v9q3deHV7
Rpkxi8wj9XYeKrSln8eieLXRtVmy07MYHZ92+VXpbuVi1aPk8Ttf3UzQ2z/1
6cCQCjueqF2rGvpW6eWu2++usqnXsrnpatMfLWcvukzrBg257X+w7rDP52v2
4VuvytD6f2eP+x7Y8Dbhs988dvF9tQDdz/Ae3U+sWZCidpexntdjDNWB24OL
RjZvmKos75yod29YkN6viG9D4+r+lKTsVuxYNmBtkD4fqu2ednXMw0TyDUZ7
F+P5HeQzWt/xen831/LFU1T/Mmc+dfbM1Pu7eH7pzDLO9xXPFzOXX/3Lt8wl
kS/6/Brl5+56X+SLSWHfDfPqdkmVen8oqWYHuj+/cFdEV+vVV0S+CPX1adAy
+LrIF50XNwx9Ottd5Au7tg+rP7R9JPJFh+Cgokfr+4p88deAyLWp3/qLfFFr
6c6W8ZePinwRax3o9Xv8fZEv+rpf6v7+ZrDIF6FLd8VWKSnzhXNm2NTKI8JE
vuhdpXi+Wh18Rb5okhZY0W6Mu8gXPyTZZznlRIl8Mbp4rx/uDw8V+cKuRs/d
N2oGiHyB8xLPFzXH9xl4enWAyBdx9460m97AQ+SLbebzVq77nE95vnh3/OOT
hM2PRb4oszdy+b7vA0S+KGpR5sbaQn4iX/xTZ3Efa6tLIl+49rzr8ueycyJf
9Gm8dG+fJTEiX8R2TxtcbnGcyBfJIy3LjUuJF/mi52/XrSaNuyHyRZl+N1fV
buIg8kWGn/nrot3DRL64Vcei/suTTiJffL6E4h9ejBL54ppxPfJ8UcyjnF/M
xSciX3xyD/kxfUiiyBfLT/1YeOgLP5EvyqaEbm119q7IF606PGxvcddX5Is3
rv6x+08linxRfNA59/Fut0W+aNX+dci3U91Fvvj5wrs3A6+niXzRpIh9j1Yn
U0W+GJUvPq1z4USRLyZtCluQ4p8s8sWI6II/Vj2UKvLFnsKTd4a7pqq6LF+s
GTDbaWpWugrZnG7V6lA2jcOwbk3v10wXeeRYn1G3Zr1KFXlk8+N17VZVCxF5
ZFS9004+r8JFHum0YuWmpe3iRR6Zb9uk9OST10Qe+aaHZaEWG66LPHI639HC
5Vo8Fnmk8ZEm35b73C/PI9/OmFXCP+aGyCM/vu60YuCG+yKPeDxOtr3U/4rI
Izhv8DyCcZ5HnE+7vXKyyhB5BK8Dnkf0+n0sj+D1x/MIxrkfwed6PL9gnOcX
jPP8gtvD8wvGeX7B8eD5Rb9/yfILjgPPL/i8jOcXjPP8gv3z/ILPEXh+wTjP
L3iceX7BOM8vGOf5Ra/DzvIL3v/h+QXPU55fcDt5fsHf5fkF++H5Bfvh+QX7
4fkF4zy/4Pbz/IJxnl/wuuT5RV9PLL/gdvL8gv3w/IK/y/MLjgPPL9ie5xe8
znl+wd/l+QXjPL9g/zy/YP88v2Bc+BHjvhnPL/r+LcsvGOf5Bf/O8wu25/kF
/z+eXzDO8wtuP88vGOf5BeM8v2D/PL/o+6ssv2Cc5xfcL55f8O88v+D28PxC
z8VM8wv2w/OLPn9YfsH/j+cXPE94fsH2PL9ge55fcH95XsgsEVjD74GDGP+U
XatOhZw9JPLFm/g+XuPaHsrTv+d1/xCvN7yurxrv+5hud6I6H/3bPyMsaT1/
/N3e63bedk6+p69bvN/4Y4tL5z3/s74Q/m7D+fHHvdJv6fbYz7Hph667Zp7V
v4fxuBmNtgTMcNftMX+VHNPMNjD7mp6nMX7Y+mj66Ka0Lre+Hzj894VP5tD6
pZi/nhrvs2D/mI8aGduJ/WNecDDGAfvB/j+uiLJ7NMWLzV+vVY7x3pPpd6Fz
1cl9m5/+3CRQb6d+nyVuiE3ILFrnE/sZtOF/XlyZp9tjHI+X/i6ksZ04bqbH
MVeVKnb9otukxzqO7avt2nrXaYKv3n6M4/HF8xv7cXHoWMS6Ia1Xj/HJXduv
D849rvcX88K9qYPyD2tE69Vj/3jcMY7n4VNj3PB3sb338walBn9P3/HBeEah
iDpWdek7O7gf+UOOtOn+HXEb+jx9mF2jXz36noVej3b7lWY9a9N3eXB7rhn8
P44bxvcY70mZfu8vVY+P6bglsu2k79kON64X/v3bUsZ5rt//Mfo5boyb6bzz
WY37qLhfOl8bcdPrMVOft/j/YzxiWf7K/evT94zwd4tU2dyxa61Ydr0kqnjj
fMP+8XfxfTHT+TJVHVmR72rlUjS/4O8eMa5f0/16qtd7wXkQ25cIbH7yyPY4
drxidXvT4xWrjyP+/7g9k4zzFvvX74NUqnHu0Db6bhde74PZ/Ib9lDauL9N5
IFUFsuta399m86d+f+er81WqsmfzBu4Xnoem80miqm5c1/y79F7GdWR6XYSp
t+z8x/gT43wwvU5j9fuhpudbrNpgvGdnuv1h6q4xD/A6D89DfH6O+XGOkc9e
mORLRzXO4HFNx8FPz6umxzdMlWb5AtvHG/OA6X456vPZ9Dx0VEWN8x/7177V
yBem2+Oo86Zp+1j9PqzpPB+mjztyuBgfYJxvpvk6Vl9f2F77/a/mizCdH03n
yTB9HZkeRz+1/WX909XLyDo+nzGvmrZ3VOWN6wX7xfaHjevddPwdVboxH5pe
p356/sR5A9s3a+TntNs2mbV31HnBdDxTdR43PX/8NLeK6zdiP12un/b5c2Mq
235HVev4q+v7tvC6L0x9n5Jwd8/mJL1OI8Z7G89fTbffTzkUffKgYgnOUYWp
KqOLXzqwNUFvD8Z/mHfXY+emFLadsfq+t2n/screeI8S4zhOuP24ndge76ub
9u+n7u287FWuWCpr76fw+bHp+MTqdWywH/zd5sbxMt3fVLXNOK9M+3fUfLPp
+eynphvzs+l16qfnVdPrwk/Pw6b9OCo7I2+atnfU9Y/pdeqo+rL5GfMRzxOa
n75vtts3JZzN5/8a/74p6mTkRXidXPD4//zOUVEnI9fC6+SML9u1XdTJyYYP
4XXyQ/a7pveF3Ni8/Vq9N+ZlXicjN8Pr5A1sO7H/gC/7d5fN/3gfyUPUyXeM
cRN18pd+vEWdnGMcf14n/2McT14n2/x1aVJMjj87jng/ykXUyS5ffu+RqJMP
G/wrr5PhuBwVdTJsR4iok5OM48Xr5HvGeWV6ftJ9GF4/83yM/ez58vtXRf2c
YJw/vH7eY4wDr58DjfHn9XOQcXx5/YzXOa+fcb7g9TOeV7x+XmkcL14/F7x1
auqYOfGifs4Ydeimc1yMqJ+rbJi59H++J87r5z3I57P6Odc4/3n9fKFl+42B
aVTnY9zeuI54/czPH4ybvvdC9bPpPE718yvjvOL1858Wm+ZFZHE+76nOf7x+
xvmH1898fsN4MDveuD3bv/xugvj/cB7g9fN2Yzt5/ez2pd0TNj/gfBkt6ucS
H3bOHjU7gc23mcrbuJ/L62e87nj9nGsor58jAlz+dk+IEvXzUXa9436fN84H
Xj/j/WVeP+8xOX7y/iSvnzON85nXzxUMXorXz6+N65rXz/uMeYDXz3gcef3c
YnizzYOnpYr6mR8X7L/dwWo7Bk5NY/vjqCKN8eT1M8xvaaJ+rmpcp7x+Nr0P
RfVI7cc/rRw2I1nUz13iiu7tP4XqQu1T8DtwrH42PV+ofsF5htfPeN3x+tne
ON/4cXU1znNeP98zqR+ofuZ5Ftu/N+YNXj+v+jJPxul5A9vzfIdxvI54/Wxj
9MPr55fG/MPrZzeT+Y3q5yPG9cLrZ6w3eP18y5iXeP0cZOQdXj/j/VZePwcb
+YjXz6+N64TXzy+N7eX1M+ZNXj/DXdQlHXn9jPUDr59vmdSB3H97iPr5jUld
R/XzTaMfXj9vMuZbXj/DfJgh6mfIXynsuvDT76/y+nn4RZ8zvSdmsfaOqqHx
3imvn3vX/edQv8kZrD3/vmci0yA2n9NzUn7/mZ+v/D1WXlfzvMX74XU1758/
P+V1tWk9Ld875nU1z3P8eSivq3ke4v1/va5OFXW16f8v3z/ldfXX50MZz2s7
ef+8rv56/fdc1CV5bWde48afS/K6mrf73+pqXi9+vZ/IPOM8b/N8Y1qf8bo6
UtTV/DricT6u/Hf5dcfraj5uPM7raj6f8rwn7kuzfM7753W16e9G5jlv8Div
q033X74Xyevqr9dnT9nxC/tfjpes674+Pplie75+vyFI1NV8/vl6P/I5O5//
vj4PZ4px5/3wuhr3i89/2P/X54kgMa78/gCP87r66+db3nU19vP18fIQdfVz
49+8rsY4r6vx77yu5vvF2/O6+rnJdsSKOK+r8e+8rn7x1fa8Pk0X28nraj5u
vB9eV/PzgffD62oe5/vF+zUd50gxPryuxr/zuhrb87oa/87r6q+3pzivI3A7
eF1tenz4fvLt578r37PjdTXGeV2N/fH5htelecW/fn1JjoLX1fhvXldje15X
43byuppvf179fH1+k++/87oax5nX1V+/Tvn2yPdPeV1tenzl+3q8rubtsb6d
aNwn5/XMJPY8COvb3Yav+X/ZdiBd
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNmWXAFtUWhcd3RhzeIQzsxMbuQq9xVRQQxCQkBCVUUhpBurtBkVSQVlBE
MFEssPXade0Cu/U+i7V/3B/722vOe+acM/vs/qq37HhZh1KSJCfwJ4XfnCfJ
u+ALiyRZVU6SrlmS3AP+m/EV/L6asZVQY8bvZfy/vHQf4314XsHzRzzP4fcb
ee7L+E3wpGKSLIZl8DE8rwOPhS9g3i/Mv4v3evPcg/Fe8PbQSnAH7cGcLvAl
zDkTfjfj/4LPZfzz1OOX87ws8VnPgBaBL4PvCw0Fb2Rezt4Pg+fz3tGMPwRu
B78L2gy+M/OzxpfAW0KTwa3gzbUf+AL4Yugt8LLM36Zv/Jb1u4GXgjtLXuzR
UWflbNfGOlqvGbQ9+MLM+2nfafCJ0KPg8fDW0B3gNvAdOfNzOhvrzeP5WfBc
eD1oJrgJfAt7DwIfDD4HmgM+TTzONivzWlpzQpxN96j7lGx13kWcczLrXKbv
gl8KnSAZwldAo6FJzH2YdxoyPgZ8D2OrwSvhj2kteG/WORV+tO4IPp15y+E9
GR8Kv5jxpfAx0JXgHvABzNkf3pQ5g3Q34GvA08qeMxF+X+7zPAKfwHNf5nRn
zjHwIxg/KfbS+e9izq58UzfwIZKJzgLtB53PvArwuvDBoYfSx+E8twd/klp/
74/vGspvV4NHwftBY8HXZX53AXhgZr2X/o+A/5hax3Qv13OOKpoPPy/21f5r
cs/fAL+Y5+vAteEjOP+x4JmMr4fOB1fg/qfy20ngIdpH8gT/xe87VPQ572fs
bOZcCD4Hvit0uHQAfjPvrAIPgJ8HTQVflfl9rfMnvFNm25S+Hg49Ba4Bf4n3
b0p8r5m+H/wb+EjwKPCh8GOgMeCzMstaMt8Pvj80AnwY/HjodvkX+LHQJPCJ
8BtChm0z2+N68Hes/xw0QXKA/8D5TpXuctdvp7ad63m+LeYcAP6KOQvB85DD
+TzPD5u9FJoCbgH/Nbc/mMc6V4QPScKuZZtN4ZfINhL7Nfm3e8G/894I6DTw
HPg12htcH94g/Eyt2GtefONjnK05+GLwH/Jt4C/hDWXz4N0z34Hu4p3QsQfA
i8Fnh/3Kjj/LPed7fR/n2U3fxvmvDF8nnzcF2gDeGX4S1DNk+yzvTJM8c/ss
+S7JUfKcCP4ZfhNrPo+fbwmvmXn8dOlwbv86m73+Si0r+d2+of+yg8qxpvzY
P7L7xD76Td59HFygm4NC/m9JBuyxk76TNRuF76oLr8S8p8FV4dN5Hhm6V6Wi
fV1leP/4XunwRXFHkvnzqb9Rcq4D1ZV/YOzb3Otsgb8dWGOynZ7MW84Zbi+s
i8vLlpHWmQKuzti14FPgpZBnFfhxsnPJjfXfyB2ntuaWlfR5Wdn+X3etPXaR
j5BOpj7bDPAm+ZaSbUq2pXtcAu4OrwiNA58M75E5jij2/ZFb5iXkUJN3GsjW
4PWg43TX8CsCa2x1xGLF5CdTn0Gx7ykRe3dkvQ9DJ9+Dfwr1Aj8sewqfPx6+
inkddE74LTy3BT8OXxhn0FnWQE3kB+CzUst/tmK/4gd4bozfDH4IvgA6EXwn
fB3UDLxevhY6CHw4fFisr30mQq3AD2gN6Cxw69S2pPMr9g/P7ddHwpdArcFD
uYsD+a0G+ODU9ruHYht3PhiaDp4s3Wf8ZdkfYzNCl6RTdzLeVHJgzj7KG+TT
4C8AuoJnMf41z53Ar6XOQ6T/r/P7PKg2eBH8jdQ+9j/wM1OfrWdqndC9zI/Y
tzt4jHQKagd+LrfcJf8ZZccC+YZunHN+xF/FYd3RCMY7MD5EeqBYo7sLv/1C
xO1a4LFxv5LnNrmmjpWK+a/GHb2uuJv626+Ft4QukF3A30wdK2XL3UMfnoE/
C90ofUO32qWOWYvgL6aWQ/+Yc0Pcu3z4I+H3NuW2iUGcv21ufejKcwuoDXgg
/Iw4g/a6CzoXPE57QjXBveElqDH415K/U9+rnGNFYMmgDFUH/1NyXqEcpEfo
QruINYqhF8nPpI7R0+BdmNMk3RYqtuUqD6aOs/V17rCXfrKhOFuf1PZycuIc
ZVTci+6nX8xXbrUwtz4vhe+SOl4rbiuPkh1thneLu+icOv/Rd3fiPE/Ar0+c
M9yRWk9uT50XScdkByPDXhrBd4b2B1eXPvJbffmr3LKrGTq5J7Qv+DB9Y249
WSffJj1InAcO5jmD1yucoyhXeQC+PWN7gz9AtlPLjstrc99XnfADx6W20xPg
V6eOpw2ln8xvKv1gzU94/3jG6/D8RG6f8GRu2z8nsQ1LN+qBz03ts3qFz1e8
2wDvzzpP5Y6/t7H2o3H+SaHbyqO030bFcvCtzHkaPFs6lrv20XcpF5MvUr6q
vLUDNB7cUbIPuUkH24bOS/eHle2bO8cZ5Lf6gZfAGzHnbvgO0KHg30qW2x7g
ivCVcS+6n3dTxyDFoo94Hg5ezNp7ZL533X8N6GDw96xTVfcH3hFeJbU/+YPx
neLedf/yV4pfZdY4KrWclWcrr1A+MplzHsLzXuHPFeOUi41W3cdaBzB+UOpz
6Dxf5q7dlAu9Bd4x8r1q8AE87wy+hd+n8P6eyrdUw4WvkD7LVhuHHD6DKoO3
lvy9OygW8l6FyDlT5Yy5/fmU3N+mb/wL3pN134NfyvyCdXdjvHJqO5e9byed
r4Q+8965hWukQYlzV+UkypsmRZ4jH65cZjVzOyuW8fv7ueX2XuQSyn/HMv9X
2Tnjn8F/Yq9dwL/A34eqgX+G/5Q6XijG/A7NCv05kD2HSZ7w3sqLJCvWHqJv
T3yfO8adpmF3wkPhe4Xt7C7d590P2edyzlMt9Er6pZio3xXv6kC/M6dv2fFF
frpWYd3QOlqvcshtb/hVhf1Rf+Y3iHWFR+X+/QrGjocfw/yTZcuFY+To3LG2
RviQ02POKfJR/HaG5Jnb3hUXFCdHgi+XDUVcawa+Djw2t75NE2fsyPAVlxT2
9bLZxsrfUuuD5su3XVl4/umJ68m+hXMU+RCdRzXpbvCGhe1nIOt8HD5HvqdJ
YT81uGxfJp8m+TaLmnYI4y0Kv9OLNdsXrt9uB88A7xV63qtwDFbsnla4FloC
bl44nik/aVnYD0oma8A35M7DWxeOzWPBbQr7mnHgBYVjj3xUK3Bj8CjGZxbO
4V5VnlY4/5vJ+JzC9d4K9SEKxyHV0cpjlM8cKd3M7X8kh9bQ2tATyVU1tWpr
2ZfmaO6nYaey1xtS5w9tUufxyufVk1D9rnufrPqCfW9NHWu6Fs5TZ8nHFq7f
lG/PKpxbKw+/CLylZL+xJezoB3gedaV8i+p21dFXwS+AjkrcZ/iuZJ8jG9Sa
22W22T6s9S1jdRnrV7Y/qK98qbA/Up42oHAsvye3X5N/Oy/8nmLin/AxPH+f
unf0VWlbOyv5omTfNkS2Ax9e2HffodhROK9SrpjL5plTQXdWuF+jWlU6I1+w
NPSkXe59J8iXZe75bA2Z6xv65N63N7wfVCh+5T6Hxj8vWV7VIi5cXLgH0VR1
T25ZSW+laxvAR6iWZc4XqXNX+WrFmEXMX1Jyb2pp+DT5JfnZVmXXd6rz5H/0
Xd3Ay1Uzl9wTG8E676f2n6vBI1X3ge+M2k819SWpezKyf+VSyqkaKO4x59/y
YYotzNtYsn1dlDonrKUYVLhO/im3D5K+qdchf6K6Qzo2PXcsk81qvcsjZ3gn
7F0xcKH2ylwL/xl3rfymI++sKllucyMOfSi95XkD4y3UE4WeKfnuukGbSrbx
ddLtzPWseqG3ZO7PrCpcd73COucX/i59n+pQ9VBUP95aOF9R3tI6YuiPJccG
xQjFL+UJyk9vLJwrK2ceDH+Q56mZ6+42uXODfVP7/sN016ljjXSkduH8XDFO
9cN9kaM8lDuudfq/mKu8dHxue1ItrJp4RSX3s2bkrqFGM/5u7h6RYuv28Ndy
1xQv5o6D6hGpdta4YubIwj5cddo4xhpFXJHvlT5qza+kl4n7sdslrkHUR1K/
+JvUfQP1XVXHqh7c1mth72fAC5UrFa5h1KssI5fJ0X9YlLnvpP5TJ8UTcPvU
/WH1pO9nzqTMfbBKmfvRqvd/ULxTfwc8TnYLvZy4VyzfoP7V6My/aY56re0K
10uqJX/LvZd88tKwL/XdpSMPJu4xqgaT3JTPf6C7Tqx7faJGku4NY96axHXl
8Ogdqff4cczXe+3ju9Qz+lg6rfHUvle1rurftanrss2p5aD8pHbmXp7u66jM
Ndr0xPWIbGV+4h6b/LnqfOX/e4cP3Af+CmPdE/dR1YNVn7Bq5l6W+igTC9cI
qn2ng9+I+31J95tYJq8kjlnqEavnrO9S3jq+sJ+R37s7cw/+hcTP6skzPfm6
5N6L6oKtDHRRDcBY87L7hOpNTuWFgYX7EapxXs59fvm9qnFm9aqa8/vaxH3X
v1P3alQI6o511+pbLiv8vwr1USXnLonrRunPE+AZmf2BdEm91bVl9/PV15e9
qsel/r/6YKovvmCdpYV7QPo/y0z4k+Gr1c/fBJ6fOT5sDCz5vRE2siDmzM78
/4JNMXZH2IXGZ8TZZA+bQ+7SQ/kQ7aeem+Qq+b4qXcwcL9RrvDvk/w0vrC3c
C1afbaVivfSy7L6Y7KViRX+v/l+xnt//By0yZCM=
           "]], 
          Polygon3DBox[CompressedData["
1:eJxFmQncV1Max6//uem+91/2YUKEGcoyI3sMo4xKEVqUZCvapF2LpFJJe0l7
6q1Xi/Z4622jiJhiLBHD2Blk38XM8Pu+v+Mzn0+n//O7z73nnnvOc37P7znv
Me17NO9eSJJk9T5Jkur3SP03Ur93q1WVvSZLkk6yG4ckGVZMkkeFV8i+Tq1M
9lpdu0f3bdA9DwhXCJ8gPFr4I+H1wgcKjxXOS5JkvPC3evYbtXGyZ+qeZvI1
FF5VLUnG6Nojsvvo2svyLciTZLHsL3VtrHzL1fqpv2W69ov8s+W/XvZj8g+R
7z1du0040z0ThRfKv1O4mvBk4Yfkv054k+4fKtxEvzcJ36j2hOzbdW2efi+l
T907SPhC4YbCjwvPU3+9ZL+ta6PlW63WU32v1rV99H3rhNsJP8oYhAcIr9S9
jYS36vmHhNsyr8JV5D8r9bsZwzbdt4K+tCAyk6Wy++v+MQKthKfr3WuE++r6
ivh8P+HB8p8pvE79XyL8mZ7XT3KncH3mX/YeXVtZzWNm7D10bZf8jdTXEtml
rLHszvJ3k/8K4TF6X0NdqyJ7mlp12dPkr5l6TT7R812Eb9P9pzNe4VnCVeQf
LvyK8H3ChwkvFP5YeIvuHSh7plpTXb9Z/ht17VrhhfK/IrtCdgO1V2Xvr298
WvZnsjfp3rka0wjhJ4XvEX5Oz/TjW4TvFl4Q3DfvOFj9f5157A1kl8o/Sa1E
9jBde1++e4vxu4Q/FH5Bz8+Q3UXtXc3ZTUXH+tUxvt/J/GwTPTNfvrvUHpe/
c/z+24SXCP9NeDN7ReOdIvvPun+OfF3VrpX/DF1bJf/Jsk/Fr/Yvve8W+Vvp
2uXsSfmfVDuOtdW1wfINV9sZx/iMfCOEnxXuKrxTeLfa7bJP1vtmyzdDrRax
zxpqLOekXmvW/FzZnwfPL+vTLfV+bMD4md/cc/qi7L6J53ogY5Z9sa7dIN8E
tb2y72T88m3MPJYNXCP21dbIXqlra9XfA8Kbg/cg+2mu8Bl6773C3wiPlb1R
9no4iHGrPSZ7i1qn1Huevf8/9bGk6BgmltcKP1x0zLH2/w6OxanCdYSPFW4r
PDJy1Vrmg3XVtdPjGtyne+9S+53s77UWlxLbwseyl1kT4UZFxwXx0V++K4gn
+X4vPCD3+JbjS81VPLOP/Mck7quZcBCuITwic8xfLLt98F6AQ4j9Iam5pWHR
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
           "]], 
          Polygon3DBox[CompressedData["
1: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
DP5/p7OcqQ==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt0TtLXFEUhuHthaAjpLBJVBxUYmNAA4Jp1CbaORZqo+WABEQUEUFIykTB
zAjqTLyDF1DEK1aiECwU/0H+QBqjRYiKhabII8fiZa/17m/ts885lcnBjoHc
EMIrvEA2FsJiXggV+SFUogF/C0J4y30XPMFHfbk+jqR8n75G7tz8pv1+bgW/
7H/ij/nP1v2iEGb4FD+JLv6bdZDf4+tk6jHK51iX+V2+Vt2ERjTjzvMy/JzZ
BUyF6M7D8kfIyJw9vYu1GBuy92Y+qFvQive45bbslajLMG6myjrvjDX+jzPf
6KsRx7X8T/zmr3GFS6zKPvDdMm1IoAcHT98SpzIzmMYRLmTH8FL96Hv9Q776
y/N9Ss1e6Hvd57U66z7bRdGzNrgRbgiHsmkk+Swy2MUP56zzN+qUXBqTKCh0
h1j0zb9iDDuY5ZbNdKnbkUAnJmLRf3ln9l6fDtG/WHKX/8RkS7g=
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
2oKn0u5JHJd+nnVOIX93Mr9HID8F/LHgWHlO3rZFZ7F9zvuu/d+L/MhoNyqA
ZaOt0D3/lX7Xwg+DT0xt395Oba9lo9qBr4HTJde3zzu2bRHj0Emyk7ITqeMu
+e6+OfsFnXXZgetlrxUjo38dfHDweBp3LX3yOdtY2c8hUWefbErOeVMx57ul
db2R2L//gr0aCz7BuIeD5Yu+X08kjm+/Cua64+3jnsjWjY19Z8nP521LmtB3
NPJXoq8ZGM//xuD9HRF9imLxCdEnyr5Oizb25ugvpsT4X+NovCo5r71xznmi
7OaqvPdQ8f+78fw0TZwj9Iz71jeOLzv+emJ7ciY4MDiPeCXu+XW0p+DXgkcV
HYP2Z8wTgmPF/uDk1HaxSYzldcbkG8sh6w8vk3O8orhlRrQnr/H8b85UA/pc
yfMDyCsha5g4pq2aeg+r6V2p4xCdvf08a4NO6ZzzcZ03nbvSwXncZuVu6J8G
H5o6L9Z5rFD0PdR91LdcE8xlkyfHOEp588u6S/AaOcckW2Lc8lHeseR8+F+0
QegtRnZ91Fe/6vS5N/rHX3h2O7Lt6Nbk9w2J4+w+jFkrcYwhufhj2kvFPazx
mNTxZwd9C/DdrGNjxdFD47oUoz6W+r3Kuws6x4lztMnBebdsQk/asYnnMZCc
9C3287pDHbM3lz3XPWCckYm/ab/UecMe5jxaMYHOqu4u8pbwT/NeV+PENYEy
OruyXWAH+vRn7M/Bs1PLZX/+YP4hcR2jcupYcQDyidGHau1nBOdHlyo2SZ1/
9QYXoXcesm2M+VvBecj3yLZnXRvRtzkDvdqJY+N50XbNBTvzu1Vi/T7Bcz47
OI9QDvEj8uUFn+Pv4EtoDdA5LTUfL3/I8zkxPldN4C75tsQxyRDZ08Qx/3XB
fccF+1H5U8UlA+I30reqH1znOSrYd9yXuP6jvEwxhO7118jr8vzXgn2H7HNL
sHnRMYpy/1Piu04MzpcVV5zEs7Y8q5q4ftIh+jjZVdU7VPdoIH/D72HI6+h8
Fnzf5ut7Fu2PH04dZ6q+0Trn/FuxmWI0+SnVKFSbaRxtjvL0pvBb4duC81Ll
p7XBjXnHVlUY+9u889COjN+J1gL5soLj1NHRB2nt9RLXZJQv6Pu2S50DKQfs
DNaK90t+9wl+t473VDUmnfnnwe8LrkfMzjsOGZO4ntYlZ/8uf688UPmgcocJ
qfNQ1SJKx3tUlC0MPj967/3o9E6cQz2S2s8qd1ZsqbzgIPhg6lxja6xRaJwW
qfMl5U0Z7QUtl7jWdEscR+M9pBgl8f5/h34C/0f+l9/lEteUPo3nUOdR8ady
7ZHBdRL5MNUcxsd5boE3Sl1na5U61lBtRzUe1SfOT5yDjIq+eGLMubTnulul
cj7D8onVgvP9qsG1x38ynpt8omy76p8l477JDh2Me6L4r5fOd+L7JbunGsCu
guem+ujXBZ8TnZ1i0evRuhQHXxZcQ1AtQbWfk/Wu4HpkI3iP4JhQMdHWWCMp
lbhuoHqRYlnlv2NTr1e1TeXE+taqPWiPtFf6tmtjPeHn6DsUR69jzLmaH7LP
8raHVeQ3g+M35duNU9dtZMOHR7uiGsVVwXGi7qlsQ7N4lloFx6LysZsY4zjl
NRnXM1R3Ut1G9RvVZpUjN4n3RXuovWzHsyPhXYPfoXfJTt0YfHdkqxcU/D10
/mcVXGuQT+kSXD9VHv55cKz+JnhuXFc38MLUeYTqZjqfyhFz7GVTcEXG9lP1
DNnn83Xfi44dde8qFh2LKL8+P+qoRqsaWunEdlw5wgWJ85lFsX64EOwiHy0/
kjrelo0aHecseVtwOXp/ob8061qI/IX8Rpu4J9qbGdGnyLfI1sjmqH7SMTiP
U366ML5XdaKaRddkFbvqLihXzhZdc1a9WrXKk4LzDtX/esSz96/gXFpxjmrT
yuvlCxTTzMq7FjWbvf+k4LqPYh7VdRS3KH5R7CD/rhhVcYXWVS51PUp1bNWz
VWdSHKgarerwfaLP6hX3pHFw7UjnRzVE1eEViygm+axgO6J6r3zQU8j3IesO
vwi+Gl4htS1SXqDcU/Fwj9TxqmLSQtHxgGysaqeqobaF9wuu9ciPq5ZaH50d
4FcF+/qyiWuy+2M9SvXhFXn7Jvmop+NdVk1+Y6xbqn6p+65YRTGL6vM605em
PutHxhjjm1g/0n3smfq+qC7aVT4j8f8mFDMo9lAMMi/vWvXGgv8/o7qH8tPu
UV/92sQ917tkP1fwvCRrHxYca6kWoRqIagWqGajGKFtRC/yi4Dqv4iL9b6VG
4v3V/ZLNUc1iStG2W/+jWRXrutqvY4P/lyF/vz44R1Z9SfGPbMyGgvdae67/
cciHqia3Cvn/ALPEbD4=
           "]], 
          Polygon3DBox[CompressedData["
1:eJxFmXn8VlMex58nz7269/dYWmlTUUikPUtZoiglWygUWYeUkEQzKSXbZN9l
MLaxpBRmEFlLCdmSlHZatZeyzPvj853X/HFez/dzv+ece+453+XzPU/DfgNP
GVCpUCi8WiwUSvzelBYKE5HnIw+qXCj8yMNq4Kq05ch1s0JhKbq3kN+pKBT2
AxfQrQBPBy/idwOPdtB+QG6K/nfk35E/Q185KRS2gfdkzD7INdB3Rn4V/dvo
Py15vja0WciN0W/h0QLkaegng59E9wFjW5ULhcUlv1PvWkjLEr9DczeizeTZ
HD5wEXO8glyb8WuQZyC/y3xVwBXM9zJ4CrghuAj+DPxehfdjHuPn0sYgT+H5
Ksavpn2M/GHi9QyndUJfj/E/ofsQ3VTG3w3uje4P+h3MegfkXo/W9T76ozPv
7UHov6vwd+p7N9O+Q/6k5Het+t+aGd+W/l8jf0D/qeDW4DmB9T0HgWsx31zw
pazpEfBDtKNSn9fOyLug/xr9Qsb3AT8KLrC+dvy2BO9Ka4l8Smb5cuSV9J9D
/0HgK8CrwFNyr21K2ENHnh9NO1ljab/xfF3Ba/67zoX5toLX8nwG/auDfwXP
B38E/rbkb9ceLEPuhX43xl7M2J/Qv8P7VqCbHuejd9RBf0DR73479369j34C
3/MV+GB0F6D7kf7Nma8S+Cf0s8AHZl6f1vkp+ELwIei70n8juAF4OfqpcZ4f
lWzPspFpJa9D61kZ9nAG/Y9D15fxy+l/Or89afvS9qN1Rn+P7Bv5e/SX4WMv
YQ8v095jfE/0R6Cvj34Z+pPATcC9wEvBx4Hrgw8BzwefAz4WfCd4C/gsfuuB
D6OdgDw7t6+1R/4B/QD6HwMeCP5V8/HbSfZA66Y+9D8R+UXkP9BfSf+TwM+D
fwd3B3cEdwcvAnfI/L6zYr3Sa67rwdvBXcGNwM/IFsCngY8G7wX+BXwMuBa4
KXhJhe2tG/gM8GLwDfJz8IGyX+TPWV9TfR/yggrvl87rbsUV8Hz0h4IfBG8F
H5HZNoaAV4OvTYxlM3+VT9KqF20j5yFfQv/fCrbVzfSvl3i98qkJnM885j8e
eTDP16P/HjwWfDt4k+wl8fkdTnsEuRvz7YdcM+zpfHBzcAfwOvAYfu8E36yG
fCT6BLk58jz0O0qOhYqJ2xUPeLaF3194dDB9r6F1ifc3xd77pLavO8Jnn0F/
K3JnnjdGv4P13gU+F3wguDX6yuCdtbfM3Y/nd4PvpZ2G/Evu9f1H9kv/5+l/
G7ghuibgDvzeLt/WmSG3Q7+dtX3BGr9ivrbgKujKjP8S/CvPdyra5xUDvmD+
dmF7sqd/ZJ5P89Zj/qfAoxXv0Dco239kDyPBB4EvSL1Wrbkvcgv0i5l7ffjz
w+AbdX7o9i7bD+QPtWldkD/LHe/ahT91oX8NnV/4i/avLvhMxu/P+OMz2+Kh
YX9a303gk9A3Qr9HYluRzbRNvF9j5L/oD0A/PvH+a86XZYuZ82GK/AXz/S3x
+/eh9UEelfh9+ubWyEdlYa+RL5olzh/K0Zv55jU8G5F4P86l7yy+bwHztwh7
qp44/utM6mgv6JOGPKfC5ySd+uyGfCj6/bVe5G8r/CvcJHxWPiBfuIa2AXkm
bV3EfMXWSjzP6ZtFjv2j5Nj5ZwxN7Bfyj71pNZAPY8xC8YN4X9vIz6+XvL5p
fM+mgn1B+etnfktF+4P4yXT0R4GrMv4b9G0y29tWdLPBPcB7hK//DP4gN19Z
FPzkxMSxQHusPfs4d7zdPeZrHvlKc7bKnJ8US05Cv7bCe669Py+1ff7I+KfB
S9BnZee4b0rmR8p9H0bO2whulJnjLAgO9UZuTiRupJhdMzN+reSYLe4kzqJ9
1f5WzZyDlYuVj8TV/pI5foyNeCbOIe6xFv0xFd7D7cG5xA0UX7aV7MPNMnOk
N8BLCuZOwjOCA72V26d3SnxGOivl5OnBWcSllDOVO8WfxI3kk8q1irEtYv2K
q/IZcRfFjE3BORVLtGbFYvEHfYtyZpvgKJ0y23SLiOGKncsiByonKDcov8i2
ZGMdM3OihrFevU82VSdsXuuXT8m3ZCPiZsrh54JPKDq3y2ZuTOyfsiWduc5e
Nvdlbo40IHEOUy4TZxF3KSuGgFeAqyXOYcplM3PnGO2Bzk85Qj7RoGguIo6k
OCmbezN3zugQMeG73DlHsV854KLs/z6qnHpY2NfckjmXuJfsT1xLnFHccSds
chr9TwVfl5kDigv2VY7LnN9uA7+hfJybA4gLXIR+EPr7xc+w9Yd5dnlmjiuu
ez762zJzCHGJruCrwM3QX0z/+5R/wSXwDPQnizOAd9D/n+CrwGeDV/POjYq1
tNGKVfSfjXwB+r9l5hTiFp3DH4bRnkV+nvZaZg4gLjAUfFlmjiCuIA6r9YqD
iIs0BvfLnBOVG5XzXsyc45TrrgNvyR3De0XO2wjeF3wy+Abwc/RvqBwBHgV+
GrwX+FPFR/CjmTmauJo4yqXgpSXzXPHdxuH/E0uuV4QVTzcE51QtVS9y7iWM
f1yxTDkndY5TrqsJ3h18PfiWzJxA9jE21tcafB36p8CTwONpLyA/QLsvc02l
2upx8RHl4sy1jWqciZnjR3846/hKrmVq0X8f5huCfjj62uCm4JHxveKsvYJD
ifspZ4q7NSs6l8qH5EvKecq998RZ6Xx0Tj/zjprI6+WjZZ+RfKl38EfVQYoN
yjeq/3TG7fU9wf/G8Xtu0fYsu14YteJXJY99iGcdiq4xTk28VuW2/SN/T6Jd
gfyD6sfEvFS+rXjwLPKwxHxX8fgJ5Im0gUWf9wTkPpnn13vEh+UD3cEvJPYN
+Zi44uTEviebv0z7ndgXFDu0Ns1xCfLrEYu0hjfFAWhnIp9O+0x+k5ifirO/
lLg+PaPo89S5ysfPQf4ose9Xor2dePwQdK8hvyouIr5Gm0XrWXRN8AnyW4nr
G/m/4sD3MVZrmId8U+b93oS8a9n9tRatSTWRYs2IomvOlYljhGLFj4rJZdus
bHepeEPZNqi1L478OVI5DbwQXLlsn9feH584Fuwu+048v2pb2e+lyMcqBqOr
im32l+/TaqdutWhV0tBltj/ZYd2ybVrfNj+xrSunnxccu3PEszbgB7Xf4krI
g4vmyPsir4pY2E82hPxexE7tofa3mDqWaY0F5A2suRfyrsh7xn6cAt4ltW8P
SswFrgwbUY0km1SN9WnuGqpp2PCpmTls+8hn8q+F4CaJOfDsiGetUq9XXPXL
OPt3Y61VY2+q0aoHx+2RmpOL+1YDJ+CLwTdkXrfWf1acUQV4mGI9LU8ds65G
bhn8Xnr5inymSer4NDg1Z/o1d2zRXJqzs/JirFV7fEDqGHNNzK3Y0ynxXmpP
lSfGZX53XfT10Ten/cTzC3n2MrpHMttD9dDrG3Q+UxN/m86wse5NUp+tfET2
LruvWvadj+Ljw7Ix5Pap36dvPhx5RGb/yZBrlL3ekbF25YZxYasjwmdk04vC
52Trytm6DxFHVC5Xfffn3UzRPEg2oj2XTzwQ56t7ENW4n+SuaVTbqMY6LviT
6ohWYb/aszzWPC7yiXxC/vFQ5pqra+oaR+etGqhL6ppStZHqGdWuypfKm8qZ
LZDPj/pS9aRqUfmL/Eb58uYYsy13fu2eukaS/dUBr0l83o/p+8EnoD8NvCS3
T94T/E78aHvuXNsl6rMW/DZXftSepM7Bqk27pc7N4nN9I0aenjn+jEOulJq7
PJF5barNVC+Lt8sWH6P1T80BxAX2jHpSfE91tr6xN2N7x7fcEu9UfL03ccy/
NvjgRYlrhl7BB/snrjFUa0yK2mBD3P/JRg6ImLI89/z6HvEP8RDldHGPfyfO
9a9kzu0D0bUsOx5uS5xTvs0dA9cmtlnFxknx/YPD92TTsm3lCOUKzS/uoDPT
2Smmb4oYPhbdqNTcYQJtdGqur/uy52S/qeP3E8hXp+YWeiad7ph1n/oO/ccj
T6bdKB5Fe6loDjcceUDqvX861qgcsSLxmnV2yhFLI0ffCt657DireCu+mIBn
JuaY4pq6Y9Ndm/iLeIxi6i6REx4M/qZz0/ltym0DsoW6Ye+q0fPENadqd9VQ
qqXejfvGHjFWNtAs9XoWBAdRblR9o7uR9bqjzH0HOS/4ffPgt59HTlfu0Z2M
7rRVQ/95V1N2XFVMHJO5PletXFvfGPWYanjd6XyYO8Yp1pV0N8LYYanzqTjB
0NR3Lt2Cw+jublFufiGeUVSuy3wHoZihekt8SHfJulM+OHU9MppnDYu+25LP
SicflC/rTkB3A/sqJmeul04LTiP7Vz2lWlw191zevYZ2NvJW9WH80My+rxyj
eLwud2yqrHxU9n3HcPruxbO+mWsNcRXFz/cT8+07guPprnTv1NxSOV51wb2Z
c8Wg2B/t+ZDIHTqL5xLnWuVc1eFDE9cmqpfEX5blzv2yMdna/Yl16tModYxS
LXdX8ImPWc/qku9smmSu7ybHnbdifYPgzooxqjtGZT5r5UHxj/qpuajsXXa/
NLcvTgs+pxwgXZ3gD6p3VJvpTrJn+MuyxJxC3EL/2awq+b5H9b9qMsUacRpx
G9mAbEH1pe4axUmfjD0ZmLk2E7eWfcvOdUd7ZOIz0d3t1tz+0CO4g2KK9mdK
5E/5RI+ifVa+Ij7TKnGOU/2sGK7cqnil2C5+c2biml61vTi1uHXHsN8sYrZi
jmKP4tXmxO/Qu1QjK1arplXtXI5cJ/9XHNCd+FOJ79R1V14laj+diTjQytzf
u04+U3btK/6u/dU+qz7+V9ig7s7/Czo+aMQ=
           "]], 
          Polygon3DBox[CompressedData["
1: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
i23F+P/PLILN
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlz70vXnEUB/DziBaPR0riYUEiXhqGRlhMuhsMwsZA00rfCJtNwqyLeInk
8Rf4ByzKIJEQJLQMXapNNQa0kZRU4nNzh0/Oud97fufeX+PoRP94UUTkecq3
bMTSk4h3vOVT0pdF9NCub6aJNvbMduQiPjpYyESMq7/lF/JjRvVDDDPLmeya
EnM15Kllxe7L5J2ZP4zYda9W2f1FPqGf5L18Sr0sj2h15rw44pAjzmiWTfPZ
zDZbbHJuR1Mu7Wfs6PPNXm7l39mQD3he8G5QfW72h3xH/p8Hbpm3+0T+Sv+a
F5n0jr/8z4G8W/8h+U/mknuYv5GX2bnveSyT3r06l973RlbgpfxKrZD/lO8m
+829YYx1e75m07v/445n8kX5Gp36Flrp4m82/W6pPke//afO5O1fNV8nq6eB
SpZlj7VXRro=
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
31ojWExvCl6ls/T8Sr73/IzF6xKMa+BdkRit/dS+aj6Sr5K3XEO2/0CwPCfv
8Uj+5Azoz4P56gnQ7bPmE8d7fJ/Fs4aKKeDvwdal9fXXeiWD/gr67TGrMqMB
9POy4dj2WflAz6yd0aZgee9NGctnBrp8P3A+z1pDfwke5vyCbC2ye7sQ3p2J
naN8nfzua8Hikc6pYtbin/JY5XU74DXhvZ2+xtcVl/wu/Rgs1igWKDe/0m1f
PuBAsDz/l2C5q85d56986RvpQud94CfcvXJZi5dDPRYrzl4pH6jYFdt3ld92
4dnV0J2ytr/aZ8Vj6WsOvSxYnal6U+t8NZieolmzu0/4PYnvNwnmh+uDDyV2
NqfxfJvqXfg7Isv5ld+fDa5k/t8od0P2P+BKZN6O7JlkVEf862+hd+bMT/6C
zAqwR2J6Y55vd1+6W/VfZP7q68h+i79XORjj17T57qOR5cN/glvQuxx+XvVg
YudaJG92K/vdkTNfvU31QmS5snLmjGwhb3VtK/ef90I3gV4OvRi6Q2K5333Q
HXU+OcsV53otvwx6ac7WrLWrtp8VWa44E+wSW97SC5wXmfwHkdWDo+X3wBPK
OeB/gp7anhMq7n6mb8CfHRlf9lVXOU/e8oWnEtsj7ZXmOs37BpqraivVTmOz
5o/kl+QXVGdsQWYreHGwmuhWxSP3M/I3YxKLtYq/qpV6uu9SPO0H/bfim9uU
bFH1teqkprw3zGsq1dTbgtmL7Ka0xwj5sfJuy7Lpt11nZfAF+R3o7+W/vO5+
EKyC3LkZy5O1duVgysX2KxZBR/CXI/c58hsj20ftp/owa/i9Gfp7nQVzWwBG
ectb3uD9x+Et9D6P+j2/R5bbH4jMDw9G/27kvvLzlZ4U/N6Kv+AK+buM5dXZ
rO3z+8HOTGcn21AvZKP3E3J5u88bmGPH2Ob+MHMolLW1qA8ww+sF1Q2H+T0Q
/j6wYN56SG0Ty2l1F56Drh+bz2wNvurxO4J+yHsp6qks8pj7YrCelXo46uX0
CpZLrAZvdlo11BNey6im+YzfHeHvDebzurp/e4FvNZLPZS5b+d0W/vpg567a
QXn2M4nVOcqZ1b+a6nfy2cTOVTnnLuT6+j6/43FEuaRyeOWt9yTWx5novn1V
sNxgbbBe2b+2E1nd39L5n3rOID+/0n3+hmB3q5nPU3mUasR70f9gYrFHtU+F
2Hym6tZl7j+XB6uD5T/VM1FvYaf7/3rIN5FPBmd6LFMurrxT+adicwOvX1TH
LPa9+iJYbaEYpzz2v8F8gu7PBx5HlJtM9Zy+YmzfUiy9zXsdSz1e3CU/jfzj
HrPaezwa4fmb8ripvs+69yfUW2TfQrB6QPI/BMtJ2kHXAH/zu6c7WCm2HmO5
2GK8zkhnpZ6VelT3J7YerUv5n3oIOiflRapTqnt8V79E+p9xnapdJqoWU7z0
+auXUg36oWB3W3nZHcjcHiyfVK/nqsTqf+XDipVXeS6knpp6a8pla/u5KH5N
DjZ/1SAz/Q58DD4XLE9QLqH9UdxUvXye67kNvNvflY7CbvvyAaopVrKPnZnL
HO+1qud6IGc1whGwT2I9I/UA1Ufam7aaZyj80mAp+Dcl5vtUq34XWSxTb0Qx
WLE4HczX9PZ43Rv5PZHFu4Rns9JWEy2Ct8ljZZ1gPe16snd+74Te6b2mVbIV
5jYK+lhk8THt31Jtovpd9bVqEvWdMp4j/eZ35khksV711GrwPPmvYPFd/e91
3uvY5PQycAAy2WA11AKfp+a7yv2z/LT2QzWjejaH0xbrlXOs0ztp6ycP8Z51
SejqLreEdy9K7MyUP4+EbhCstlL9pjruIHhZYr0n1fjdE8s5lHtcmlhNWzlv
sU9957KuX+dYRvcuWJ6sfPlG+YtgdU25YHW6+mEhb3lNL55f6bnUMb57eWL5
n/JkyeierIb/ZmJ+UzXFJYl9Q3Xfv3uZtnNTz0u9L9V4R3z/ZbvKGdSvaqce
ZGK22i62vEQ5hnKNxTnrX6lnvtnj6RawX2JnuZXnNyRWC1VHpm9icVd9rfU5
Oxf1JHVu+7y2HZxY/1H1YymP6YrtTySWQ6h3XTxruav61cqjdIbfgucm1ptW
b1w1o3ra6nPr/qgfp56A+i3qZynnl73r7BoG+3+L4rvivPQobqmmuzaxelvn
295jueK74qzW2hPe9YnZsHpKA6Hzutd5y4GUC+3ynHM19PzI6mfV0epVyD7K
ZqzW057o3q4F9+Ssj7rX6+slnis+6Pt8HDwlWO9duc181y9/scdzUeUYtyTW
41M+r96j8tJD4P8AmbhAJg==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmXn81VMax++91ffc+/3e9lQzRb9UopClfV8kLdqjlRRlS2NvKMbeYmfs
O9kZM4ZWImQJEVlStpJS2SKkZT7v+Zw/zuv3fO5zzvme5Vk+z/k1njB16BmF
XC73bD6Xq6y/t4ZcroV+2Feto+QmWS63v+SrJE8r53JNhdsLny/8d+FlpVzu
JY29I8nlOgjfp98Plf4CtXuD52ssubvaFZIfVWtV8JyPSJ6ldprk7ZpjtuT9
Nf8Y4QckT9d8f2r+WsJThM8Urp96fcx1ftnrYi7mvEfyjWrNJO+ndovkZ7Wu
FZr7PbWXJB+g30rSfS9cllyh+doJ3x+/d6i+31Z4pfBM4Qrhk4UnC08Rvl9z
fKKxn6k9IHm71ldJ+tbSj5M+p/6vSXerdO2E2+r334TrsCbJE9ROlTxBbWLw
/upL3qH+x6n/e8Ir1f8r4f7Cb+nv58IfqL0seXXib7OGNZKraf0fSz5Zc52h
/p9p/FrhldL1E15X8vdZB/OX1D/V9+oLnyL8rfRbpC8KDxOuJP0+0p8mPLXs
8zlI+DbhOcLfqP8X6p8JDxc+WPvtIP1y4SuFv9PfvQre07mSd5V8/9jS8dxf
5vPvJjxeeAvzCI/lTrAdtUPU8moFtUz939X3Vmk/A9W/tXAf9V0n3TXCn+j3
t6SvUfAZNMt8/9jBBdJv0/e/lf4Y4bOFq2s/1aU/JZ7XR9J/lPeZfSp5YLDt
Y2MzJe/Qbw0k/6HvnKX+jTT+YOEvpbtauJ7+/qyxv6g1RVb/vPQ/qf/p9M88
32DuXfj3xPMFtVmSvw3ez5FqG/EV9a8t+WzJf1P/Ufre+Ywv5nJPCdeVvqZw
c+lHCxeEl+nb92iu9sLHBu+3kfpMxzc0vpfkRZIvkf5Ctds5Y/22t3RXS+7L
/GpzsFXNUyjYphPhH4S/0nyb1bZLrqTvvSL5QcmdNNcb2u+bwg8LdxY+LNj3
uINLJS8qeS1NJJ8nfU2Nnx99D/v5ouTv8d0hwn/RmpoLXxnjTVF4g/q3CT7/
eSWf3S/qP5T9Fh1riDnDJf9e8vdZxxjsPdi+txIDEscp4tWl6jNO/dcl9jfu
cLfkrRr/h+TaGneMxp+BX6hv/xiD1iceQ989aovUFqr9S+0Z5GhP8yV30/jh
GnN0wT70muRrsUN8Qy3V949ILWeSb1b/THiHxp+ufv8U3jf4/LhT7vxHzb9b
8iXxPFuofxvpdxP7hHcFr3VYtKHe0k/CHzX/Lfh74rvkTr+TfJn6DMAW1K4V
/jPYF/HJnZL36Hu/qm9LyZM1/szgvbCnPZIra/56ks+J/kUcxHa405r4sPS9
Jc+QfI70O/R3gebrp9+WSN5QcixOY/zZIjxFuhrCI4S7pO67XfgG4QOFDxBe
KPwP4U3qvy1vWx1b9no3CfcUPoHxmePtzcL3CR+vczhTeLba+KJtAFuYQ0yW
fIP6Xa/2lNrTarfrTGZyNmrHSd9M3x8i+UnpLtZ8a6Vfr++tU5spuU7qs+wn
/bkxvqyR7hXpjiReprbXF6S/VHhlyfGLONZHuKXWe7H0L0b9m9K/L/2b0vci
HyaOrcTY89TnRem/jL45WPpWmn9EPNvLhA/QfGcJPyx8EflN+i7CS4UvLzvP
km/bR/ssqv/bmm+x5juqbJsmtrJGbH2MzuAq4UvURkueF2PJYWrPS66p+etK
PivGrzqarwrrFT5WeI3W+43muj6ud5p+71hwDoFTEK8bwg9ifNsrs28SZ0eW
bSfYCzmkc/A9c9/YYC/JX2r8QuFtMZ7003rGS9dSa71beL30lYWHqu9JwsOC
MTY+El9Q/xOFG6v/PdI/F7w39vh4cNwj/r2q9lDi+Y+X7hlspWz/xl6x8Wsk
N0h9V9cF86XuwuOEi5r/zrL9hrWzh4PJH4njW4PoP+8Gnw1ntCD6RHX9rVqw
r+AD+EJn9ph6zfAo+BR7wUafiHvAduEU30ROAdfgjJvHnMHZ31s2L4GfdM58
Zi2K3iN7vUt4v6JzYPPM8+MLXYWbSv+gcDXpTyKnCD8gvL/wCRGPEt47nnkN
jb8fTln0mbPeO1iP8ERsUvpbhasIDyInZz7jZkXfKeshJ5Ib8ZnumWN+Nc2/
Me9cQEw4XHhn3rHihcS2vTDG7gnS9wmO+VUz+wi+MldtRtk+fHEwJ8K3iWEz
YszcKzWHgHfgI3ALxjC2JTaUOr9hi7/C1TT/gBiDv8aGhScKH6X+p6h/LnXM
6hFsj8QyYgCx4MKCYwccqmPkKDtLzumLQ+TU0h8t/JTmX67xIXMOqxXMGcht
06PPE8Phdvum9uXL1cZKfkz6V6TvJjwi9Z2dFHMBd0keIZ9MxuclN5S+ScH8
+CHpOxQdv9kP++pbds4kRq4u+Yw56836bZB03TLz/04aN7dsG8B2Dy/aNrBx
bH2c5npY+JHEfAeOPTcxz0ZeFv0RjkpMahf3By+BnyxSm0NO1rwUPKfjU5K7
FC3zWyvJvYvOx+ToBpKvK5uXwc+6ps7JcAJqEnL1VXD24JxEbiKmvhrM2Yi1
VxDDhUdxXqlj8pIYIw5JnfPfED68YC7AHjvHM2TvjwjXKDqGD4vjX1L/AwuO
9WfHGELM3BbtAa4HJzgorm9FjPGthW/C/4nFxEvh64V/Deag3VLXO5PgHvC4
zDl3UzCHJBcfkjkmEYuIN8SfBTGGs/9Zwh8E5/yG6jucMyg453ZKXbNdHlyz
UcvBR6cGc759qGUSc/GPYs4jX8BX8Bl8Z2Tk3D/ptx/gJmq7kCNeq/Zh3j6A
L1DjUOskzJ+Zk8PN4VjcHzUdtosNl4WPEF4eawpyc5XMvk0e7BLzMfUkdWXX
sv23bzDnJN68XnJ99njkx49Rs+Vdczwq+WT9dlzwmlk7nApu9Vfp6+lbbcqu
C8gBcN13SuZqG2P9Q3yD28IBa6n/x9Ivlvx25A/U4HDcJXAOuGjib6+ONVRv
6d9PXE+uKtkniUVfJ/bV90uuLT+N+b+j2s2SX6B+Lpnj41NvCOf1/eqZaxrW
PD/G2yRywD9KronhhOQzainif+XgnE5upyZtG/2JWpj4R06H8+8uOd51Cq4n
qCWJ198n5hRwCzgF3KIo/H3J+RHuWBbeXPJ+P0hsEx8yf9Fcb17efI4zXRXv
iLNeXvJbwQL91r1sG1qRuH7AtuAU1CpwTrgG/eiPTTwn+TTph+j7OX0jTW1/
44X/zLv2niQ8Wvh34Sqpa9Qbo/0RS3njoG6uH88Dm/88MWdaE+2lVeQ85IdA
TgjmBOyXmv3UyCmo5bE3eBJ8aW+d19K4ly3xPQEOtj3WBGuivXEWr+q3HmXX
MNQy1TS+cmab/28SOan6Lkn8rsIZcHZwVPwW/92t77cVvi5xDUMtiI3CdXmz
wHbxt3fimwq2R26Gf67KO0dzB7MTx2/mHxY5IP7P2wU+9mDMCfgeNWU5ckTe
KniDIUfA15YKX5147rfjfbEn9vaf6N/UlDvjeeN/cAa4AzX9xpL5xgjZzUUF
1+bkR7hN66K5TzmzL2+N+a1Jau5CDCeW06d1zKHtMudUciv1VkfhDZKPKTg+
E6fxuddjrsMXm6fO9eulu7bsnEv84o1qYOr8C/fB/v/vB0XXlr2oNdWGqk9G
Lov59lG11cE1AfkqSZ0PyUHkIsacU3D+Yq79Ur/l3Rn8/vF0rJXuUrs7mD8e
qH6j43p4Y4A7k5PJzeQIcgU5idxEzUrtOiTy0z6puSccFi67JnLLI9Q+C+Yy
7I09ViVv6sx+5D4lzy47/4wIrmd4q9wUcyv5kLy4NfjNibemH4JzKLmUHE+u
HxBcv8HvZsQ9sV/esNgrHAwuNkh7fJJcVPRdcWd1JTfIXH/3V98Ty77znvp9
asG20JWYVzDnhd90ysx1W8T6ZFpc+5h4RnAG9t4omEtUFH0X3Emjovlyk6Ln
7J/6zLGFifEu2kTuzTfg1bMitz81ci7y/8/BNUn3OJ67uynyOc5kc3BNyVkx
H9xvUrT5nqnfC+DocPXOqd8AiWG1U3P9hvAVOGewjcGN1gbb3sjUvtRP458o
m+vC5aep9Snaxnhr61Gw7cHX4JZToo3CUeGqX6jP4+Sr1PYyoGh8UOTS1Bus
pUdqLsfd31a2D3AOnAe+ASfiPn+Les50cjw7zhofxVe3BddvfYteK2seHN+f
sE24L9xgWfQt6jPqtFqp32bgkHBJ3gSej/GStwLO8LHg9zjOlvi3IMbEXanj
L9zjHeG3So7P/44xjbcnciBcp05wboTTcF5wOrgOMX1ZfNMj1lOTUndTY1Kr
kj94++UNskbki0nRd8x64CzEXnIKuYU3Od5G9+T9Vke85x0JH1pc8hsA71Ds
mbcBOBpcrW4wlyMnVBQ8hrHz4vsAbylwITjMUuH7EnOb2pn9nzhAbYMP8n8G
3lTwTWL8i+p/S+LYT77n7QY+xPsOnAXucld8LyXf8q6Hz2KvfJNv854zP/Kd
O4Vfzvutkxg8N9Yce9S/vVrrgmMo9kz+uyYxHyA/wjXJHeSQHyX3lP71xPl3
BfW3xk8veA/shTdi3orhEHAJ3uyouXqqz5GpYyWxjJjWOPiNlP+BNC347bQi
OF7gA9Tl8O0rYgyrl5rr/xJjILGQevai4Pc83ur4Df+gHqAv3xwouWp8PxwV
fH/w1w7BfGZscM4gd/AmydtkRcz3bTOvlThMLdEi1vbEpBLxEu4bzInGqOX1
W06toFap6P8nTY/5pyL+Rj6lJqUv8REdfY5N/X6JblCMSdjs4JhLseUN0bd4
865cNHfCX6gx4VDUBHDRZsG1AjmJt5P5wbmKNdKXMaz9f5LqV70=
           "]], 
          Polygon3DBox[CompressedData["
1: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
sW/oHxCfalo7Yicox0J1+B81t3KT
           "]], 
          Polygon3DBox[CompressedData["
1:eJwl0bsr7nEcB/AvuT8PqSfFkWRwK+UMhFwfucfCZkAyGagz8Q8YTh2bxaUo
AzmbM5/J5FIKMaMUCxYseP36Da8+n96/z/O9PVWzi+MLmSGEEnJoToRwnxvC
HmkfbtU/yRB+yEf0o/TLx9Q5eZm8S99DnrxTnZH3F4RQmGdBMiiixWwdO2au
ueGcJrNp3vTvfPBEl+w0P4T/DnbAX/5xLGtKxGd74ZlXus2n5Cn9IANMkyuv
ZEO/xSbr1EZ3tVa2/su6n2Tpi+WNnOjPaHevK/W3e9XI1/SN7hM93E91Oxm/
2538gQb5oboq30zGe03K6s1W02a2NBG/VQutTFEhK0/Eb3vBJY90OHu9fDd6
Z79P08tEQXzOU/kyZfY4Vlfsuc+QmSXZsHoUnctsFb+i/5A+5qP7Wucb0n48
PA==
           "]]}]}, {
        EdgeForm[], 
        Directive[
         GrayLevel[1], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwtj7sOAVEQhierYUloRUXiLSQKUWo8AToN0dCKF8Ai7vdL8AQKrdYlrm+g
9Aq+yW7x5/vO7OycOeFcMV0wRCREXKTFwQeb8E6u+A7OSQyfwbIpcoFZeIAB
6m3YJym8B08kg0/hxKnr9zGJ4yO4IDV8Cbekim9gxCPywyvMHzr9A8Pu0/41
PJIo3oWWW8SPl+hfOXvqvl2np2PY9+kcnfckX/yl79MzfoNJr8gDBj32e/Rd
DbgnZ/yte3NHAuZN+3+d84F1Qkks+AekKC65
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtkDtqglEQhYeJha/CxsLSgLsQrCzTuIIoSjSiJo1WQnADml8EC5/BiLoD
d2AlBhHcQZq4B79hUhw438ww98xNl1qFpopIEoVQLSrSCIscHkQm+CL6oL5h
qI1/Rd/4HrU/5qrwHH6Gt3AqIrJn0Rs+HxOp01+r77iFvfeLv6jPvNMf4TPU
AriLKEmfWvk/ywKfFc+0hHP4KbUXywbH4SFcgT/V+Yh2+B90wZ/QWT3jE36m
nr2DruqZHiN+k721Ur/VdgbqmewtyzSAE+JZLcNYfadlsxvtb77Ub78D4HAv
Eg==
           "]]}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0t8rnXEcwPHPOJgJV0t2J5d2vT9Ayr0LKzUN0Yoc2RYpKUohKzLtZq7U
Eaf8mB8bbY4zbH5swlr8A274I7xOqfM+7/fn+T7n+zx9O1WtyYbuRxExhv7H
ES+4MT+ikJufRHzPi/iBXWTQ69oeZ/ETb837fIi6koikPX7p3zjCO+vHfIJT
vDf/4b/o0ik+8Kws2swX5iWk4RPXuEQqYT+e488Y1J2c4Wme4w5uR0Hu3fkV
ZnQLv8ZHPcLDmNcLfMFp/s+5c7jCOYqLI/p4wFqe/qAHdUIv6i3vOmSuzTW+
msfNL3Whe+r4jXNs5Iwzqedls1tiwr1NukZPWqvgMvOortTluoifYti1Ur5x
GAPa1nGrh7TjjjP8w51rfhYrvIo1fEHSs9Z5Az16k7fwDR3mbd7BLGpsYNuY
8lXN+/yMP/Hzh//HPUrhSYk=
         "]], 
        Line3DBox[{2173, 16, 696, 660, 656, 2660, 655, 658, 2661, 659, 657, 
         682, 215, 206, 12, 2176, 10, 2173}], 
        Line3DBox[{2194, 37, 700, 663, 661, 2673, 15, 2194}], 
        Line3DBox[{666, 63, 2209, 77, 2217, 96, 709, 671, 2664, 670, 665, 664,
          2663, 669, 668, 667, 666}], 
        Line3DBox[{968, 60, 2284, 130, 2285, 128, 2657, 719, 2678, 680, 678, 
         2667, 674, 675, 677, 2666, 676, 673, 672, 2157, 2665, 67, 2716, 
         968}], 
        Line3DBox[{213, 720, 721, 723, 681, 208, 213}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrxXEYx/EvOSdMJlLHkYWFcgwuZzhKNhMKYWKgxMnisojCilXqDAb3
exn9B2bJ/ZJiExOJ18nw6f35PM/z/f6eb7+KgXTHWE4IYZpKCkIoEqojIdzL
SblUbsEqbMMkltFtYQgZc8X8kno/LmMvrmAG1+iU38YDunbnCe7RbDSEdZzE
CermW3EVR3AKmzFFd841YD1ll01iE6X5fuyjGX4Od3EBD/HKuWPcoX17tGOn
3gY/zHfxW/w8/+U9PXIsuz99y4NyInveTBxT3luLg3IFLsq3vnFutpaPqNXo
vas95YVQyX/wz/wDXuTa3+w+HtBeNueHMKr2pH9mLu7MpfoVjevdqB+5d5Ne
+HL9Z4zhG75SHf+LwQ6PkJB/cAg/sRGjOf//9w8TvEC1
         "]], 
        Line3DBox[{2329, 724, 2885, 2160, 725, 726, 728, 2679, 239, 2338, 231,
          1209, 2329}], 
        Line3DBox[{1215, 730, 1667, 436, 229, 425, 430, 1215}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0b0vZHEYhuF3FGbHRDFCQSO0EolgdCQKoRAx2WITskEroZHNkmhY3zQq
/hDs+hqsTVZ8NApEYpWispHsSjSuieLJfT/veX9zzplTMzSaG0lExFfZS0U8
KslkxDbe68/4gImiiL9Yjv/NatMRE/aeeHNJRNY8i03YguP4Rfr5N1yQTbsr
OCd9HyImMYe90sCrcQw7MIdVWCk/nCvDjHSaV2C5dBXuhVn5VLgXzuIALuKG
c8s4Ix89Rx3Wu9bN23kD7+Gfeav3adT/OTOst+mtepr32nkxr/S+JXpKf9UH
9e+YsZvmf/il/+gU94sjzvg5z/MdPJHfZoe4apbne3yNH/M8n/b787JutqUv
8Sk54L/s7OMRHuNPueY3eGt/F6/0Kyz1jBd4p98n3r/tG7jHQHE=
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{2168, 2169, 2912, 2198, 2908, 2691, 2196, 2905, 2692, 2907,
          2186, 2184, 2898, 2185, 2208, 2914, 2207, 2206, 2915, 2699}], 
        Line3DBox[{2170, 2171, 2890, 2682, 2172, 2881, 3246, 2672}], 
        Line3DBox[{2175, 2174, 2889, 2653, 2671}], 
        Line3DBox[{2178, 2892, 2683, 2888, 2684, 2177, 2891, 2685, 2662}], 
        Line3DBox[{2182, 2180, 2894, 2179, 2899, 2681, 2165, 2895, 2686, 2893,
          2687, 2246, 2941, 2245, 2244}], 
        Line3DBox[{783, 2181, 2896, 2680, 2164, 2690, 2904, 2187, 2900, 2188, 
         2903, 2193}], 
        Line3DBox[{2189, 2689, 2909, 2199, 2190, 2901, 2191, 2906, 2197, 2195,
          2192, 2902, 2688, 2897, 2183, 2910, 2693, 2200}], 
        Line3DBox[{943, 2707, 2927, 2706, 2711, 2935, 2220, 2215, 2919, 2703, 
         2920, 2698, 2205, 2932, 2232, 2202, 2697, 2163, 2886, 2162, 2913, 
         2696, 2201, 3247, 2654}], 
        Line3DBox[{2240, 2936, 2712, 2214, 2918, 2702, 2929, 2695, 2911, 2694,
          2219, 2705, 2934, 2230, 2928, 2229, 2239, 2945, 2225, 2924, 2221, 
         2222, 2224, 2923, 2655, 2674}], 
        Line3DBox[{2306, 2299, 2981, 2298, 2736, 2994, 2309, 2993, 2739, 2986,
          2293, 2975, 2292, 2733, 2972, 2734, 2973, 2270, 2271, 2960, 2276, 
         2272, 2273, 2977, 2268, 2958, 2267, 2286, 2287, 3001, 2314, 3000, 
         2726, 2963, 2280, 2999, 2658, 2668}], 
        Line3DBox[{2308, 2304, 2985, 2737, 2302, 2740, 2988, 2303, 2984, 2738,
          2987, 2721, 2262, 2971, 2269, 2254, 2950, 2255, 2717, 2951, 2256, 
         2261, 2954, 2260, 2970, 2263, 2955, 2722, 2283, 2966, 2275, 2959, 
         2274, 2730, 2282, 2882, 2967, 2731, 2677}], 
        Line3DBox[{2310, 2236, 2933, 2237, 2997, 2212, 2916, 2211, 2238, 2701,
          2917, 2213, 2704, 2921, 2218, 2946, 2235, 2234, 2942, 2247, 2715, 
         2943, 2248, 2249, 2980, 2242, 2939, 2656, 2675}], 
        Line3DBox[{2313, 2288, 2264, 2956, 2957, 2723, 2312, 2998, 2266, 2724,
          2982, 2295, 2978, 2296, 2983, 2294, 2291, 2974, 2278, 2962, 2279, 
         2290, 2976, 2735, 2297, 2979, 2727, 2964, 2281, 2316, 2319, 3003, 
         2277, 2961, 2725, 2320, 2745, 3004, 2318, 2317, 3002, 2315, 2265, 
         2659}], 
        Line3DBox[{2327, 2328, 3031, 2358, 3027, 2757, 2356, 3024, 2758, 3026,
          2346, 2344, 3017, 2345, 2369, 3034, 2368, 2367, 3035, 2765}], 
        Line3DBox[{2332, 3007, 2749, 2331, 2748, 3009, 2330, 2669}], 
        Line3DBox[{2334, 2333, 3008, 2336, 2335}], 
        Line3DBox[{2342, 2340, 3013, 2339, 3018, 2747, 2324, 3014, 2752, 3012,
          2753, 2409, 3061, 2408, 2407}], 
        Line3DBox[{1252, 2341, 3015, 2746, 2323, 2756, 3023, 2347, 3019, 2348,
          3022, 2353}], 
        Line3DBox[{2349, 2755, 3028, 2359, 2350, 3020, 2351, 3025, 2357, 2355,
          2352, 3021, 2754, 3016, 2343, 3029, 2759, 2360}], 
        Line3DBox[{2354, 2751, 3010, 2337, 2750, 3248, 2883, 3011, 2670}], 
        Line3DBox[{2362, 3032, 2361, 2762, 3033, 2321, 3005, 2322, 2763, 2363,
          2395, 3052, 2366, 2764, 3040, 2769, 3039, 2377, 2383, 3055, 2777, 
         2772, 3047, 2773, 1414}], 
        Line3DBox[{2370, 2371, 3043, 2387, 2385, 2384, 3044, 2388, 3065, 2402,
          2392, 3048, 2393, 3054, 2771, 2382, 2760, 3030, 2761, 3049, 2768, 
         3038, 2376, 2778, 3056, 2403}], 
        Line3DBox[{2379, 2380, 3059, 2405, 3100, 2412, 2411, 3063, 2781, 2410,
          3062, 2397, 2398, 3066, 2381, 3041, 2770, 2375, 3037, 2767, 2401, 
         2373, 3036, 2374, 3117, 2400, 3053, 2399, 2475}], 
        Line3DBox[{2447, 2799, 3089, 2795, 3085, 2794, 2421, 3072, 2784, 3088,
          2776, 2396, 3067, 2415, 2416, 2404, 3058, 3057, 2779, 2420, 2390, 
         3046, 2391, 2785, 3073, 2422, 3115, 2472, 3110, 2808, 2466, 2465, 
         3109, 2470, 3112, 2810}], 
        Line3DBox[{2448, 2797, 3087, 2798, 2445, 2796, 2437, 3079, 2438, 3086,
          2446, 2788, 3075, 2426, 3090, 2423, 3074, 2424, 2419, 3071, 2783, 
         2418, 3070, 2417, 2432, 3091, 2425, 2787, 3107, 2805, 3104, 2468, 
         3108, 2807, 2467, 2804, 3105, 2469, 2473}], 
        Line3DBox[{2449, 2450, 3119, 2443, 3083, 2792, 3120, 2479, 3121, 2452,
          2451, 2430, 3078, 2431, 3097, 2436, 2435, 2439, 3080, 2434, 2433, 
         3093, 2801, 3092, 2800, 2457, 3095, 2458, 3106, 2806, 3113, 2474, 
         3114, 2803, 2463, 3101, 2464, 2471}], 
        Line3DBox[{2478, 2453, 2427, 3076, 3077, 2789, 2477, 3118, 2429, 2790,
          3102, 2460, 3098, 2461, 3103, 2459, 2456, 3094, 2441, 3082, 2442, 
         2455, 3096, 2802, 2462, 3099, 2793, 3084, 2444, 2481, 2484, 3123, 
         2440, 3081, 2791, 2485, 2812, 3124, 2483, 2482, 3122, 2480, 2428, 
         2486}], 
        Line3DBox[{2493, 2494, 3152, 2524, 3148, 2825, 2522, 3145, 2826, 3147,
          2512, 2510, 3138, 2511, 2535, 3155, 2534, 2533, 3156, 2833}], 
        Line3DBox[{2495, 2496, 3130, 2815, 2497, 2816, 3127, 2498}], 
        Line3DBox[{2500, 2499, 3129, 2502, 2501}], 
        Line3DBox[{2504, 3132, 2817, 3128, 2818, 2503, 3131, 2819, 2520}], 
        Line3DBox[{2508, 2506, 3134, 2505, 3139, 2814, 2490, 3135, 2820, 3133,
          2821, 2575, 3182, 2574, 2573}], 
        Line3DBox[{1727, 2507, 3136, 2813, 2489, 2824, 3144, 2513, 3140, 2514,
          3143, 2519}], 
        Line3DBox[{2515, 2823, 3149, 2525, 2516, 3141, 2517, 3146, 2523, 2521,
          2518, 3142, 2822, 3137, 2509, 3150, 2827, 2526}], 
        Line3DBox[{2528, 3153, 2527, 2830, 3154, 2487, 3125, 2488, 2831, 2529,
          2561, 3173, 2532, 2832, 3161, 2837, 3160, 2543, 2549, 3176, 2845, 
         2840, 3168, 2841, 1889}], 
        Line3DBox[{2536, 2537, 3164, 2553, 2551, 2550, 3165, 2554, 3186, 2568,
          2558, 3169, 2559, 3175, 2839, 2548, 2828, 3151, 2829, 3170, 2836, 
         3159, 2542, 2846, 3177, 2569}], 
        Line3DBox[{2545, 2546, 3180, 2571, 3221, 2578, 2577, 3184, 2849, 2576,
          3183, 2563, 2564, 3187, 2547, 3162, 2838, 2541, 3158, 2835, 2567, 
         2539, 3157, 2540, 3238, 2566, 3174, 2565, 2641}], 
        Line3DBox[{2613, 2867, 3210, 2863, 3206, 2862, 2587, 3193, 2852, 3209,
          2844, 2562, 3188, 2581, 2582, 2570, 3179, 3178, 2847, 2586, 2556, 
         3167, 2557, 2853, 3194, 2588, 3236, 2638, 3231, 2876, 2632, 2631, 
         3230, 2636, 3233, 2878}], 
        Line3DBox[{2614, 2865, 3208, 2866, 2611, 2864, 2603, 3200, 2604, 3207,
          2612, 2856, 3196, 2592, 3211, 2589, 3195, 2590, 2585, 3192, 2851, 
         2584, 3191, 2583, 2598, 3212, 2591, 2855, 3228, 2873, 3225, 2634, 
         3229, 2875, 2633, 2872, 3226, 2635, 2639}], 
        Line3DBox[{2615, 2616, 3240, 2609, 3204, 2860, 3241, 2645, 3242, 2618,
          2617, 2596, 3199, 2597, 3218, 2602, 2601, 2605, 3201, 2600, 2599, 
         3214, 2869, 3213, 2868, 2623, 3216, 2624, 3227, 2874, 3234, 2640, 
         3235, 2871, 2629, 3222, 2630, 2637}], 
        Line3DBox[{2644, 2619, 2593, 3197, 3198, 2857, 2643, 3239, 2595, 2858,
          3223, 2626, 3219, 2627, 3224, 2625, 2622, 3215, 2607, 3203, 2608, 
         2621, 3217, 2870, 2628, 3220, 2861, 3205, 2610, 2647, 2650, 3244, 
         2606, 3202, 2859, 2651, 2880, 3245, 2649, 2648, 3243, 2646, 2594, 
         2652}], 
        Line3DBox[{2676, 2732, 2969, 2729, 2965, 2728, 2258, 2952, 2718, 2968,
          2710, 2233, 2947, 2252, 2253, 2241, 2938, 2937, 2713, 2257, 2227, 
         2926, 2228, 2719, 2953, 2259, 2995, 2307, 2990, 2741, 2301, 2300, 
         2989, 2305, 2992, 2743}], 
        Line3DBox[{2744, 2996, 2311, 2742, 2991, 2720, 2714, 2940, 2243, 2231,
          2930, 2223, 2922, 2700, 2210, 2216, 2949, 2166, 2887, 2167, 2251, 
         2948, 2708, 2931, 2709, 2289, 2250, 2944, 2226, 2925, 2204, 2203, 
         2884}], 
        Line3DBox[{2782, 2364, 2365, 3045, 2389, 3064, 2413, 2454, 2775, 3051,
          2774, 3068, 2414, 2326, 3006, 2325, 3069, 2378, 2372, 2766, 3042, 
         2386, 3050, 2394, 2406, 3060, 2780, 2786, 3111, 2809, 2476, 3116, 
         2811}], 
        Line3DBox[{2850, 2530, 2531, 3166, 2555, 3185, 2579, 2620, 2843, 3172,
          2842, 3189, 2580, 2492, 3126, 2491, 3190, 2544, 2538, 2834, 3163, 
         2552, 3171, 2560, 2572, 3181, 2848, 2854, 3232, 2877, 2642, 3237, 
         2879}]}, {
        GrayLevel[0.2], 
        Line3DBox[CompressedData["
1:eJwNzr9KgnEYBeBXDQy0qXCJoCCkv6vQDVQiQkpjU1YORg7tSTQ6uhhuORXk
Hi52A12B3kBkNThUU8/wcN5zvt/wrZ02q1eJiCjzkYx4mot4ZsAjU1sxE3E+
H3FGjUE24t1+4Z7Jku9/cisVUbetyGPbslwgQ1C2JeWPt7+k3UtU7Dm5R4ET
fVfuMPZuX5/IA/2QW/1O3nBElQ4jWr69yqJ/f5P3XNt6ctXWdffdDyzq37Jt
+5Lrep5tXmxduckGPYa2qXefXOoN/gEaWCdr
         "]], 
        Line3DBox[{783, 784, 771, 2894, 772, 764, 766, 803, 2901, 801, 786, 
         785, 794, 791, 2898, 792, 883, 870, 2919, 869, 875, 890, 888, 828, 
         2911, 826, 969, 886, 2921, 885, 881, 882, 2949, 975, 947, 2937, 926, 
         924, 982, 980, 2951, 981, 1004, 1034, 2960, 1033, 1077, 2976, 1090, 
         1110, 988, 987, 1125}], 
        Line3DBox[{811, 798, 796, 2903, 808, 950, 2941, 951, 806, 805, 2910, 
         823, 830, 837, 2912, 740, 741, 843, 2913, 835, 833, 864, 898, 2924, 
         895, 849, 847, 954, 2980, 956, 955, 2944, 963, 1078, 1057, 989, 2952,
          965, 966, 1053, 2966, 1054, 1061, 1045, 1039, 1041, 3000, 1172, 
         1177, 1171, 1036, 2961, 1035, 1187, 1184, 1181}], 
        Line3DBox[{854, 844, 836, 834, 3247, 838, 853, 2923, 897, 831, 832, 
         2939, 2152, 884, 900, 2925, 841, 842, 964, 1048, 2965, 1049, 1051, 
         1052, 1031, 2959, 1032, 1044, 1040, 2963, 1042, 1173, 1180, 3004, 
         1185, 1186, 1188, 1183, 1182}], 
        Line3DBox[{858, 2915, 859, 887, 909, 2927, 907, 901, 868, 2918, 867, 
         916, 941, 862, 2916, 863, 1157, 918, 2930, 919, 996, 992, 2953, 991, 
         1020, 1003, 1001, 2971, 1068, 1085, 1070, 2972, 1071, 1075, 1076, 
         2974, 1079, 1093, 1119, 1117}], 
        Line3DBox[{872, 873, 936, 2933, 938, 1158, 1163, 1148, 2991, 994, 944,
          945, 2990, 1144, 1141, 1137, 2984, 1022, 1024, 1108, 2986, 1087, 
         1088, 1080, 1082, 1106, 2978, 1073, 1074, 1104, 1120}], 
        Line3DBox[{943, 908, 910, 942, 2936, 871, 874, 937, 939, 2997, 1160, 
         1161, 1147, 995, 948, 2940, 949, 2995, 993, 990, 1019, 1002, 1000, 
         2987, 1138, 1023, 1021, 1084, 1086, 2975, 1089, 1081, 1083, 2983, 
         1091, 1092, 1123, 1122, 1121}], 
        Line3DBox[{1151, 2992, 1136, 1135, 2985, 1139, 1153, 1152, 2994, 1114,
          1101, 1103, 1116, 2998, 1166, 1165, 1156, 1154}], 
        Line3DBox[{1162, 2996, 1159, 983, 984, 2989, 1133, 1134, 1143, 2988, 
         1142, 1109, 1107, 1140, 2993, 1096, 1095, 1105, 2982, 1015, 985, 986,
          1155}], 
        Line3DBox[{1170, 1168, 1112, 1047, 2964, 878, 879, 1018, 2958, 1017, 
         1028, 1029, 2970, 998, 958, 959, 1099, 972, 2947, 971, 922, 920, 
         2948, 973, 953, 2942, 952, 914, 913, 912, 2928, 911, 934, 929, 928, 
         2932, 852, 846, 819, 2905, 817, 821, 824, 789, 787, 2902, 774, 776, 
         2895, 769, 767, 778, 780, 2904, 809, 754, 755, 751, 2888, 753, 759, 
         757, 2890, 744, 745, 747}], 
        Line3DBox[{1191, 1190, 1189, 1175, 1174, 3002, 1178, 1066, 2154, 2999,
          1063, 1055, 2967, 2153, 1059, 1058, 2969, 1050, 967, 2159}], 
        Line3DBox[{1192, 1130, 1128, 1164, 1010, 2957, 1012, 1115, 1102, 1100,
          1113, 2981, 1124, 1150, 1149}], 
        Line3DBox[{1196, 1195, 1129, 1069, 1009, 2956, 1011, 1145, 1146}], 
        Line3DBox[{1215, 1667}], 
        Line3DBox[{1252, 1253, 1240, 3013, 1241, 1233, 1235, 1272, 3020, 1270,
          1255, 1254, 1263, 1260, 3017, 1261, 1353, 1340, 3039, 1339, 1345, 
         1361, 1359, 1298, 3030, 1296, 1440, 1357, 3041, 1356, 1351, 1352, 
         3069, 1446, 1418, 3057, 1397, 1395, 1453, 1451, 3071, 1452, 1475, 
         1505, 3080, 1504, 1550, 3096, 1563, 1583, 1459, 1458, 1598}], 
        Line3DBox[{1280, 1267, 1265, 3022, 1277, 1421, 3061, 1422, 1275, 1274,
          3029, 1293, 1300, 1307, 3031, 1207, 1208, 1313, 3033, 1305, 1303, 
         1334, 1369, 3044, 1366, 1319, 1317, 1425, 3100, 1427, 1426, 3064, 
         1434, 1551, 1529, 1460, 3072, 1436, 1437, 1524, 3086, 1525, 1533, 
         1516, 1510, 1512, 3120, 1645, 1650, 1644, 1507, 3081, 1506, 1660, 
         1657, 1654}], 
        Line3DBox[{1324, 1314, 1306, 1304, 3032, 1308, 1323, 3043, 1368, 1301,
          1302, 3059, 1354, 1355, 1371, 3045, 1311, 1312, 1435, 1519, 3085, 
         1520, 1522, 1523, 1502, 3079, 1503, 1515, 1511, 3083, 1513, 1646, 
         1653, 3124, 1658, 1659, 1661, 1656, 1655}], 
        Line3DBox[{1328, 3035, 1329, 1358, 1380, 3047, 1378, 1372, 1338, 3038,
          1337, 1387, 1412, 1332, 3036, 1333, 1630, 1389, 3050, 1390, 1467, 
         1463, 3073, 1462, 1491, 1474, 1472, 3091, 1541, 1558, 1543, 3092, 
         1544, 1548, 1549, 3094, 1552, 1566, 1592, 1590}], 
        Line3DBox[{1342, 1343, 1407, 3053, 1409, 1631, 1636, 1621, 3111, 1465,
          1415, 1416, 3110, 1617, 1614, 1610, 3104, 1493, 1495, 1581, 3106, 
         1560, 1561, 1553, 1555, 1579, 3098, 1546, 1547, 1577, 1593}], 
        Line3DBox[{1414, 1379, 1381, 1413, 3056, 1341, 1344, 1408, 1410, 3117,
          1633, 1634, 1620, 1466, 1419, 3060, 1420, 3115, 1464, 1461, 1490, 
         1473, 1471, 3107, 1611, 1494, 1492, 1557, 1559, 3095, 1562, 1554, 
         1556, 3103, 1564, 1565, 1596, 1595, 1594}], 
        Line3DBox[{1439, 1438, 1521, 3089, 1530, 1531, 1527, 3087, 1526, 1535,
          3119, 1538, 1539, 1651, 3122, 1647, 1648, 1662, 1663, 1664}], 
        Line3DBox[CompressedData["
1:eJwV0LEuQ2EYgOHvcCoSTbgBkhrEKm6BzSSxdDQatJUu7diBS+AGzFwAcSKt
VgSDNBaDdMMiFiRNef7hyZvvO/nPf3Iqu7Xt/SwittiYidikV4rosl6OaJqD
jAZrdrlOPB9zw7RdX99p0WbB7kcP+JiLqOspy86e6Lfdse6xygo7VPn1bEkX
Oc8jLs1nOpXu4slc1vn0bvuB+U1feOCeZ7r2Q31lxCd3dl+aOfunj1zbDfQ2
3cWV+SKdp0dhLrTj2484TP9iNuIfDJAvWg==
         "]], 
        Line3DBox[{1624, 3112, 1609, 1608, 3105, 1612, 1626, 1625, 3114, 1587,
          1574, 1576, 1589, 3118, 1639, 1638, 1629, 1627}], 
        Line3DBox[{1635, 3116, 1632, 1454, 1455, 3109, 1606, 1607, 1616, 3108,
          1615, 1582, 1580, 1613, 3113, 1569, 1568, 1578, 3102, 1486, 1456, 
         1457, 1628}], 
        Line3DBox[{1643, 1641, 1585, 1518, 3084, 1348, 1349, 1489, 3078, 1488,
          1499, 1500, 3090, 1469, 1429, 1430, 1572, 1443, 3067, 1442, 1393, 
         1391, 3068, 1444, 1424, 3062, 1423, 1385, 1384, 1383, 3048, 1382, 
         1405, 1400, 1399, 3052, 1322, 1316, 1289, 3024, 1287, 1291, 1294, 
         1258, 1256, 3021, 1243, 1245, 3014, 1238, 1236, 1247, 1249, 3023, 
         1278, 1222, 1223, 1217, 3248, 1219, 1228, 1226, 3009, 1210, 1211, 
         1214}], 
        Line3DBox[{1665, 1603, 1601, 1637, 1481, 3077, 1483, 1588, 1575, 1573,
          1586, 3101, 1597, 1623, 1622}], 
        Line3DBox[{1669, 1668, 1602, 1542, 1480, 3076, 1482, 1618, 1619}], 
        Line3DBox[CompressedData["
1:eJwNz71KAmAYBeBXgmroHqw7aJGQaBBySglERwWl2URXh0a9gaIWrRxUGqLF
IdqqJZoapPJnDLqCGoKe4eG853zTt1U7LtQTEZHnfDWish5RpUaZC1t6I6Iv
e5yyo5/JAdfs6mP5wYxX9m0v8oF7btmz3ckhIyY8krE/y2++yOkLOadDSu/K
H35p6qm1iG0SrJClScNbS/5xwgFHtrx8o+suySJPXNG2Xcop7ywZ23L+P3N/
cui+sfXcfTb1JP/WxC7B
         "]], 
        Line3DBox[{1727, 1728, 1715, 3134, 1716, 1708, 1710, 1747, 3141, 1745,
          1730, 1729, 1738, 1735, 3138, 1736, 1828, 1815, 3160, 1814, 1820, 
         1836, 1834, 1773, 3151, 1771, 1915, 1832, 3162, 1831, 1826, 1827, 
         3190, 1921, 1893, 3178, 1872, 1870, 1928, 1926, 3192, 1927, 1950, 
         1980, 3201, 1979, 2025, 3217, 2038, 2058, 1934, 1933, 2073}], 
        Line3DBox[{1755, 1742, 1740, 3143, 1752, 1896, 3182, 1897, 1750, 1749,
          3150, 1768, 1775, 1782, 3152, 1680, 1681, 1788, 3154, 1780, 1778, 
         1809, 1844, 3165, 1841, 1794, 1792, 1900, 3221, 1902, 1901, 3185, 
         1909, 2026, 2004, 1935, 3193, 1911, 1912, 1999, 3207, 2000, 2008, 
         1991, 1985, 1987, 3241, 2120, 2125, 2119, 1982, 3202, 1981, 2135, 
         2132, 2129}], 
        Line3DBox[{1799, 1789, 1781, 1779, 3153, 1783, 1798, 3164, 1843, 1776,
          1777, 3180, 1829, 1830, 1846, 3166, 1786, 1787, 1910, 1994, 3206, 
         1995, 1997, 1998, 1977, 3200, 1978, 1990, 1986, 3204, 1988, 2121, 
         2128, 3245, 2133, 2134, 2136, 2131, 2130}], 
        Line3DBox[{1803, 3156, 1804, 1833, 1855, 3168, 1853, 1847, 1813, 3159,
          1812, 1862, 1887, 1807, 3157, 1808, 2105, 1864, 3171, 1865, 1942, 
         1938, 3194, 1937, 1966, 1949, 1947, 3212, 2016, 2033, 2018, 3213, 
         2019, 2023, 2024, 3215, 2027, 2041, 2067, 2065}], 
        Line3DBox[{1817, 1818, 1882, 3174, 1884, 2106, 2111, 2096, 3232, 1940,
          1890, 1891, 3231, 2092, 2089, 2085, 3225, 1968, 1970, 2056, 3227, 
         2035, 2036, 2028, 2030, 2054, 3219, 2021, 2022, 2052, 2068}], 
        Line3DBox[{1889, 1854, 1856, 1888, 3177, 1816, 1819, 1883, 1885, 3238,
          2108, 2109, 2095, 1941, 1894, 3181, 1895, 3236, 1939, 1936, 1965, 
         1948, 1946, 3228, 2086, 1969, 1967, 2032, 2034, 3216, 2037, 2029, 
         2031, 3224, 2039, 2040, 2071, 2070, 2069}], 
        Line3DBox[{1914, 1913, 1996, 3210, 2005, 2006, 2002, 3208, 2001, 2010,
          3240, 2013, 2014, 2126, 3243, 2122, 2123, 2137, 2138, 2139}], 
        Line3DBox[{2099, 3233, 2084, 2083, 3226, 2087, 2101, 2100, 3235, 2062,
          2049, 2051, 2064, 3239, 2114, 2113, 2104, 2102}], 
        Line3DBox[{2110, 3237, 2107, 1929, 1930, 3230, 2081, 2082, 2091, 3229,
          2090, 2057, 2055, 2088, 3234, 2044, 2043, 2053, 3223, 1961, 1931, 
         1932, 2103}], 
        Line3DBox[{2118, 2116, 2060, 1993, 3205, 1823, 1824, 1964, 3199, 1963,
          1974, 1975, 3211, 1944, 1904, 1905, 2047, 1918, 3188, 1917, 1868, 
         1866, 3189, 1919, 1899, 3183, 1898, 1860, 1859, 1858, 3169, 1857, 
         1880, 1875, 1874, 3173, 1797, 1791, 1764, 3145, 1762, 1766, 1769, 
         1733, 1731, 3142, 1718, 1720, 3135, 1713, 1711, 1722, 1724, 3144, 
         1753, 1697, 1698, 1692, 3128, 1694, 1703, 1701, 3130, 1684, 1685, 
         1688}], 
        Line3DBox[{2140, 2078, 2076, 2112, 1956, 3198, 1958, 2063, 2050, 2048,
          2061, 3222, 2072, 2098, 2097}], 
        Line3DBox[{2144, 2143, 2077, 2017, 1955, 3197, 1957, 2093, 2094}], 
        Line3DBox[{742, 743, 752, 750, 2892, 758, 735, 734, 2896, 777, 773, 
         736, 737, 2899, 793, 807, 804, 802, 2906, 815, 814, 820, 2907, 816, 
         818, 845, 851, 2920, 876, 891, 889, 2934, 893, 892, 962, 2946, 932, 
         933, 970, 739, 2887, 738, 977, 946, 2938, 927, 925, 957, 2954, 999, 
         1016, 1027, 1030, 2977, 1098, 880, 877, 1046, 2979, 1111, 1167, 1169,
          1127, 1126}], 
        Line3DBox[{782, 763, 765, 2909, 799, 800, 856, 855, 2914, 857, 906, 
         2935, 940, 902, 903, 935, 827, 829, 2929, 917, 866, 2917, 865, 860, 
         861, 2922, 896, 976, 905, 2926, 904, 997, 979, 2950, 978, 1013, 1014,
          1072, 2973, 1025, 1026, 1038, 2962, 1037, 1094, 1118}], 
        Line3DBox[{1251, 1232, 1234, 3028, 1268, 1269, 1326, 1325, 3034, 1327,
          1377, 3055, 1411, 1373, 1374, 1406, 1297, 1299, 3049, 1388, 1336, 
         3037, 1335, 1330, 1331, 3042, 1367, 1447, 1376, 3046, 1375, 1468, 
         1450, 3070, 1449, 1484, 1485, 1545, 3093, 1496, 1497, 1509, 3082, 
         1508, 1567, 1591}], 
        Line3DBox[{1599, 1600, 1642, 1640, 1584, 3099, 1517, 1347, 1350, 1571,
          3097, 1501, 1498, 1487, 1470, 3074, 1428, 1396, 1398, 3058, 1417, 
         1448, 1205, 3006, 1206, 1441, 1404, 1403, 3066, 1433, 1363, 1364, 
         3054, 1360, 1362, 1346, 3040, 1321, 1315, 1288, 1286, 3026, 1290, 
         1284, 1285, 3025, 1271, 1273, 1276, 1262, 3018, 1204, 1203, 1242, 
         1246, 3015, 1201, 1202, 1227, 3011, 2156, 1218, 2155, 2158}], 
        Line3DBox[{1682, 1683, 1693, 1691, 3132, 1702, 1675, 1674, 3136, 1721,
          1717, 1676, 1677, 3139, 1737, 1751, 1748, 1746, 3146, 1760, 1759, 
         1765, 3147, 1761, 1763, 1790, 1796, 3161, 1821, 1837, 1835, 3175, 
         1839, 1838, 1908, 3187, 1878, 1879, 1916, 1679, 3126, 1678, 1923, 
         1892, 3179, 1873, 1871, 1903, 3195, 1945, 1962, 1973, 1976, 3218, 
         2046, 1825, 1822, 1992, 3220, 2059, 2115, 2117, 2075, 2074}], 
        Line3DBox[{1726, 1707, 1709, 3149, 1743, 1744, 1801, 1800, 3155, 1802,
          1852, 3176, 1886, 1848, 1849, 1881, 1772, 1774, 3170, 1863, 1811, 
         3158, 1810, 1805, 1806, 3163, 1842, 1922, 1851, 3167, 1850, 1943, 
         1925, 3191, 1924, 1959, 1960, 2020, 3214, 1971, 1972, 1984, 3203, 
         1983, 2042, 2066}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJzt3E2ITVEcAPDXzFgZC/kaKR+N2RELlIUuS6woltRIsyE7xUqyQcokhITU
RBZmFiYL9RqhbMYo42MSBkPNjGZKigVR7myGm57um3vufb+7Ob1ft3P/93/e
e/fd8/73LGndt3V3XalU6mwslepLSdt41NT07NCiYx/itnvS6/C90vNKKw9J
/RQ1zzzd96E4a9Or/f0TWpx58Vo736K6ceS17JW+/31eOOec8z89L9fT0OI8
+3Fo88LXQ+WuvaO3t7f1TbxOPG7S/kX1vOch7/FzzjnnnHPOOeech+ZZzbfk
ZZ4nDuzQi0/l+y2XXpZ/t6P/8j/O6z/74ZxzzjnnnHPOOeecF88nbcnP/2bl
ldZ/8qnxao9LWvW6lXpo9dvVrqMOrf+i5i00r/bnNK3+kzyr//tCG8dK/fDR
q4tv9L+J286o48mXbe+XjAQXJ+ecc87z68ubL66vG30dtzejXYcv/Hh+Pbzf
Gw0dS9esujAYt13RgtkHWnZeGQ4uTs4555xzznk4Xuk8Oeecc84555xzzjnn
nPN0PbT1f2ptHaS1W+rbRucMlvu/HTn/9vLDqLHv1bwzG4eDyxvnnHPOOeec
c84555xzzjnnnHPOOeecc845L7ZPVNYOxOvtD0xab59n63ebZow83V8u1597
cP9dz1jm8XDOOeecc84555xzzjnnnHPOOeecc84555zzMH3Tzv49p1feLDd/
Prjs4Xj1605DW2+52uszl/66jSfun3TctPrJyk/MPDlwfFpP3LZH7c9a787v
HovufL+2oaG+J27bo3XNrY9X/PK0jpuUt6z64VPjoY3Xwq87TkXzhuL2VtS7
+tG+5yMfg8tb3vNca/FzzjnP1pOuI64vnFfPQ3vOutrzA3nxop4X55xzzjnn
nPPfPnGnF1qdA+ecc84555xzXmTPqu4lq/qZSvtJy9OqT8gq/1mNF+c8nO9h
zkPw0P7X4Jxzni+f+CUUyv0455zzYnha9zXu63nIPqtpee/MtsG47Yr2TO/Z
PvfecHBxcs4555yHNh/FOeecc855yB7afDvnnHPOOed59LTmsX8CaeVg4w==

      "]], {DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm], 
       FormBox["\"z\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotLabel -> 
     FormBox[
      "\"Basis functions of \\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(\
\[CapitalDelta]), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\))=(0,0), \
(\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(2\\)]\\))=(1,0), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(3\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(3\\)]\\))=(\\!\\(\\*FractionBox[\\(3\\), \\(4\\)]\\),2)\"", 
       TraditionalForm], PlotRange -> {{0., 1.}, {0., 2.}, {0, 1}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], Automatic}, Ticks -> {Automatic, Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(3\\)]\\)\""}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.675751419737488*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cool formula", "Subsection",
 CellChangeTimes->{{3.672755212565378*^9, 3.6727552165209374`*^9}, {
  3.6730908501856184`*^9, 3.673090852048235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "1"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "m"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "3"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], ")"}], "p"]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"coolFormula", "[", 
    RowBox[{"m_Integer", ",", "n_Integer", ",", "p_Integer"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"2", 
     RowBox[{"m", "!"}], 
     RowBox[{"n", "!"}], 
     RowBox[{"p", "!"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "+", "n", "+", "p", "+", "2"}], ")"}], "!"}]]}]}]], "Input",
 CellChangeTimes->{{3.672755219709717*^9, 3.672755270923072*^9}, {
  3.6727553672951326`*^9, 3.6727554844737763`*^9}, {3.6729047795701237`*^9, 
  3.672904796400358*^9}, {3.672904948700059*^9, 3.6729049548864665`*^9}, {
  3.672933114889988*^9, 3.6729331449111753`*^9}, {3.673017247387499*^9, 
  3.6730172556567464`*^9}, {3.673021287509201*^9, 3.673021290927805*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals", "Subsection",
 CellChangeTimes->{{3.6727555220708313`*^9, 3.6727555258345995`*^9}}],

Cell[CellGroupData[{

Cell["Local mass matrix", "Subsubsection",
 CellChangeTimes->{{3.6730145927109165`*^9, 3.67301460518617*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"massMatrix", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Area", "@", "element"}], "60"], 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"6", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         SubscriptBox["c", "3"]}], ",", 
        RowBox[{
         RowBox[{"2", 
          SubscriptBox["c", "1"]}], "+", 
         SubscriptBox["c", "2"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         SubscriptBox["c", "3"]}], ",", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"6", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         SubscriptBox["c", "1"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          SubscriptBox["c", "1"]}], "+", 
         SubscriptBox["c", "2"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         SubscriptBox["c", "1"], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "3"]}]}], ",", 
        RowBox[{
         RowBox[{"2", 
          SubscriptBox["c", "1"]}], "+", 
         RowBox[{"2", 
          SubscriptBox["c", "2"]}], "+", 
         RowBox[{"6", 
          SubscriptBox["c", "3"]}]}]}], "}"}]}], "\[IndentingNewLine]", 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730159554964733`*^9, 3.6730159681470923`*^9}, {
  3.673016037109254*^9, 3.67301629863661*^9}, {3.673016398453666*^9, 
  3.6730164711759405`*^9}, {3.6730165057977805`*^9, 3.6730166532783756`*^9}, {
  3.67301674978185*^9, 3.6730167537233753`*^9}, {3.6730168705882792`*^9, 
  3.673016918457117*^9}, {3.6730169806609464`*^9, 3.6730169812339387`*^9}, {
  3.6730178111897583`*^9, 3.6730178123619156`*^9}, {3.6730186169116735`*^9, 
  3.67301864483562*^9}, {3.6730187275728264`*^9, 3.673018735900337*^9}, {
  3.6730188062673035`*^9, 3.673018951096002*^9}, {3.6732785576157517`*^9, 
  3.6732785627347565`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "3"], 
    RowBox[{
     SubscriptBox["c", "k"], 
     RowBox[{
      SubscriptBox["\[Phi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massMatrixTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "i"], "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "j"], "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673016985133007*^9, 3.673017051451242*^9}, {
   3.6730170947637253`*^9, 3.6730171890075855`*^9}, {3.673017278080374*^9, 
   3.6730174327251005`*^9}, {3.6730179367743206`*^9, 3.673017942162655*^9}, 
   3.6730196512386775`*^9, {3.673197053010322*^9, 3.673197064215502*^9}, 
   3.6731971306967587`*^9, 3.673278425070569*^9, 3.6732785098244*^9}],

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"FullSimplify", "@", "massMatrixTest"}]}]], "Input",
 CellChangeTimes->{{3.6732784864780073`*^9, 3.6732785024243307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"massMatrix", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["c", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"massMatrixTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["c", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["c", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6730175051661334`*^9, 3.6730175150196857`*^9}, {
  3.6730175598807683`*^9, 3.6730176451590014`*^9}, {3.6730176763244333`*^9, 
  3.6730177188848734`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["37", "30"], ",", 
     FractionBox["9", "20"], ",", 
     FractionBox["19", "60"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "20"], ",", 
     FractionBox["17", "30"], ",", 
     FractionBox["3", "20"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["19", "60"], ",", 
     FractionBox["3", "20"], ",", 
     FractionBox["1", "30"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673017129819927*^9, 3.6730171620660725`*^9}, 
   3.673017209798956*^9, 3.6730174384862704`*^9, {3.6730174957882657`*^9, 
   3.6730175157474008`*^9}, {3.6730175616759515`*^9, 3.6730175783975935`*^9}, 
   3.673017646544443*^9, 3.673017677166813*^9, 3.673017719792588*^9, 
   3.6730178349187922`*^9, {3.6730178837692137`*^9, 3.6730178936213164`*^9}, 
   3.673018011855851*^9, 3.673018962352027*^9, 3.6730909280666485`*^9, 
   3.6731971368609524`*^9, 3.673278567420721*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["37", "30"], ",", 
     FractionBox["9", "20"], ",", 
     FractionBox["19", "60"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "20"], ",", 
     FractionBox["17", "30"], ",", 
     FractionBox["3", "20"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["19", "60"], ",", 
     FractionBox["3", "20"], ",", 
     FractionBox["1", "30"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673017129819927*^9, 3.6730171620660725`*^9}, 
   3.673017209798956*^9, 3.6730174384862704`*^9, {3.6730174957882657`*^9, 
   3.6730175157474008`*^9}, {3.6730175616759515`*^9, 3.6730175783975935`*^9}, 
   3.673017646544443*^9, 3.673017677166813*^9, 3.673017719792588*^9, 
   3.6730178349187922`*^9, {3.6730178837692137`*^9, 3.6730178936213164`*^9}, 
   3.673018011855851*^9, 3.673018962352027*^9, 3.6730909280666485`*^9, 
   3.6731971368609524`*^9, 3.6732785674464455`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local stiffness matrix", "Subsubsection",
 CellChangeTimes->{{3.672902382846168*^9, 3.6729024233021145`*^9}, {
  3.6729071294706197`*^9, 3.6729071307699413`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stiffnessMatrix", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["a", "1"], "+", 
      SubscriptBox["a", "2"], "+", 
      SubscriptBox["a", "3"]}], 
     RowBox[{"12", 
      RowBox[{"Area", "@", "element"}]}]], 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "3"], "-", 
            SubscriptBox["y", "2"]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "3"], "-", 
            SubscriptBox["y", "2"]}], ")"}]}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}], "2"]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "3"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "3"]}], ")"}]}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673020215072007*^9, 3.6730202547387495`*^9}, {
  3.6730202847599125`*^9, 3.6730203194062357`*^9}, {3.673020364562554*^9, 
  3.6730206159632053`*^9}, {3.673020680534424*^9, 3.6730207157268734`*^9}, {
  3.6730207732598677`*^9, 3.6730207735993853`*^9}, {3.6730209319777613`*^9, 
  3.6730209635038395`*^9}, {3.6730210109735312`*^9, 3.673021081407264*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "3"], 
    RowBox[{
     SubscriptBox["a", "k"], 
     RowBox[{
      SubscriptBox["\[Phi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stiffnessMatrixTest", "=", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "i"], "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ".", 
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "j"], "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"useful", ":", " ", 
    RowBox[{"FullSimplify", "[", "]"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.672755527154593*^9, 3.672755527714449*^9}, {
   3.672755631259221*^9, 3.672755697806766*^9}, {3.6727557361142855`*^9, 
   3.672755743326645*^9}, {3.672755781740777*^9, 3.6727557995292535`*^9}, {
   3.672755905488509*^9, 3.6727559289954844`*^9}, {3.673019351498725*^9, 
   3.673019533776351*^9}, 3.673019647113946*^9, {3.6730212504831448`*^9, 
   3.6730212650387526`*^9}, {3.673197146248051*^9, 3.6731971690512066`*^9}, {
   3.6737124476903477`*^9, 3.673712462511363*^9}, {3.673712547684298*^9, 
   3.6737125622545214`*^9}}],

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"FullSimplify", "@", "stiffnessMatrixTest"}]}]], "Input",
 CellChangeTimes->{{3.673278525968325*^9, 3.673278534020357*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"stiffnessMatrix", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["a", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["a", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"stiffnessMatrixTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["a", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["a", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.673020605758695*^9, 3.673020637370582*^9}, {
  3.6730207367587156`*^9, 3.673020749913376*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["715", "192"], ",", 
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "48"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     FractionBox["803", "192"], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "48"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}], ",", 
     FractionBox["11", "12"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6730206382248144`*^9, {3.6730206864320593`*^9, 3.673020720589514*^9}, {
   3.6730207506053033`*^9, 3.673020778059241*^9}, 3.6730209393396225`*^9, 
   3.6730209770409317`*^9, 3.673021042108672*^9, 3.6730212296800137`*^9, 
   3.6730909625239916`*^9, 3.673197191582263*^9, {3.673712716140275*^9, 
   3.673712724362611*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["715", "192"], ",", 
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "48"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["671", "192"]}], ",", 
     FractionBox["803", "192"], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["11", "48"]}], ",", 
     RowBox[{"-", 
      FractionBox["11", "16"]}], ",", 
     FractionBox["11", "12"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6730206382248144`*^9, {3.6730206864320593`*^9, 3.673020720589514*^9}, {
   3.6730207506053033`*^9, 3.673020778059241*^9}, 3.6730209393396225`*^9, 
   3.6730209770409317`*^9, 3.673021042108672*^9, 3.6730212296800137`*^9, 
   3.6730909625239916`*^9, 3.673197191582263*^9, {3.673712716140275*^9, 
   3.6737127243856378`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Local stiffness matrix: quadratic basis for diffusion coef ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.673094655833147*^9, 3.6730946950662985`*^9}}],

Cell[TextData[{
 "Basis functions for linear space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "2"], "(", "\[CapitalDelta]", ")"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"v", ":", 
         RowBox[{"v", "(", 
          RowBox[{"x", ",", "y"}], ")"}]}], "=", 
        RowBox[{
         RowBox[{"a", " ", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["y", "2"]}], "+", 
         RowBox[{"c", " ", "x", " ", "y"}], " ", "+", 
         RowBox[{"d", " ", "x"}], "+", 
         RowBox[{"e", " ", "y"}], "+", "f"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "\[Element]", "\[CapitalDelta]"}]}], 
      "}"}]}], ",", " ", 
    RowBox[{"\[CapitalDelta]", ":=", 
     RowBox[{"triangle", " ", 
      RowBox[{"w", "/", " ", "nodes"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}]}]}], ",", " ", 
    RowBox[{"i", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.673095808546198*^9, 3.673095845939505*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "need", " ", "3", " ", "more", " ", "degrees", " ", "of", " ", 
    "freedom", " ", "to", " ", "define", " ", "nodal", " ", 
    RowBox[{"basis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "4"], ",", 
       SubscriptBox["y", "4"]}], "}"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "2"], ",", 
         SubscriptBox["y", "2"]}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "3"], ",", 
         SubscriptBox["y", "3"]}], "}"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "5"], ",", 
       SubscriptBox["y", "5"]}], "}"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "1"], ",", 
         SubscriptBox["y", "1"]}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "3"], ",", 
         SubscriptBox["y", "3"]}], "}"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "6"], ",", 
       SubscriptBox["y", "6"]}], "}"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "1"], ",", 
         SubscriptBox["y", "1"]}], "}"}], "+", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "2"], ",", 
         SubscriptBox["y", "2"]}], "}"}]}], "2"]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"QuadBasisCoef", "=", 
     RowBox[{"Inverse", "@", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["x", "1"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "2"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "3"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "4"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "5"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["x", "6"], "2"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["y", "1"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "2"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "3"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "4"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "5"], "2"], ",", 
          SuperscriptBox[
           SubscriptBox["y", "6"], "2"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], 
           SubscriptBox["y", "1"]}], ",", 
          RowBox[{
           SubscriptBox["x", "2"], 
           SubscriptBox["y", "2"]}], ",", 
          RowBox[{
           SubscriptBox["x", "3"], 
           SubscriptBox["y", "3"]}], ",", 
          RowBox[{
           SubscriptBox["x", "4"], 
           SubscriptBox["y", "4"]}], ",", 
          RowBox[{
           SubscriptBox["x", "5"], 
           SubscriptBox["y", "5"]}], ",", 
          RowBox[{
           SubscriptBox["x", "6"], 
           SubscriptBox["y", "6"]}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "1"], ",", 
          SubscriptBox["x", "2"], ",", 
          SubscriptBox["x", "3"], ",", 
          SubscriptBox["x", "4"], ",", 
          SubscriptBox["x", "5"], ",", 
          SubscriptBox["x", "6"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["y", "1"], ",", 
          SubscriptBox["y", "2"], ",", 
          SubscriptBox["y", "3"], ",", 
          SubscriptBox["y", "4"], ",", 
          SubscriptBox["y", "5"], ",", 
          SubscriptBox["y", "6"]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
         "}"}]}], "\[IndentingNewLine]", "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "i"], "[", 
       RowBox[{"u_", ",", "v_"}], "]"}], "=", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"QuadBasisCoef", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["u", "2"], ",", 
          SuperscriptBox["v", "2"], ",", 
          RowBox[{"u", " ", "v"}], ",", "u", ",", "v", ",", "1"}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "6"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQrTkn+/792NeOMrz7HoDoqPLlf0D0owA/9gdAmu9p
HA+ITnNYKwKiLaq6JUD0kf0K8iBaYGeKCog2NA1TA9ES7oeO8MW9dnSZqnkc
RPefm+bKD6RnOTOFgGhjn3sJIPpGaVEiiA7OmZcBouezGOaBaKdr84pANLdI
aQmInlG+oQJER/Y8rwLRE7ZpNYDoKcfDO0H0PufqmSCa3WX6PBD9zDJvNYi+
+//8GhBtMV1qE4he0KuzC0SvTrM9CKKdN64G01bWi4+C6APT5h4D21/2Zq0A
kJZQM18Hov1undgFoo9xhRwD0UHrLp8Giy+feQlE6/lafgTRC/Zu/AyiAaex
njc=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Psi]", "1"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "2"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "3"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "4"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "5"], "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "6"], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
       RowBox[{
        SubscriptBox["x", "3"], "\[Rule]", 
        FractionBox["3", "4"]}], ",", 
       RowBox[{
        SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "K"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(5\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(6\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Basis functions of \!\(\*SubscriptBox[\(P\), \
\(2\)]\)(\[CapitalDelta]), (\!\(\*SubscriptBox[\(x\), \
\(1\)]\),\!\(\*SubscriptBox[\(y\), \(1\)]\))=(0,0), \
(\!\(\*SubscriptBox[\(x\), \(2\)]\),\!\(\*SubscriptBox[\(y\), \
\(2\)]\))=(1,0), (\!\(\*SubscriptBox[\(x\), \
\(3\)]\),\!\(\*SubscriptBox[\(y\), \(3\)]\))=(\!\(\*FractionBox[\(3\), \(4\)]\
\),2)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673095663358669*^9, 3.6730957461086826`*^9}, {
  3.6730966218171024`*^9, 3.6730966223650804`*^9}, {3.673104836107353*^9, 
  3.673104845681744*^9}, {3.6731048922539225`*^9, 3.6731048946005325`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
4ZKnYLzxy4thoZOmdRhv3CGn0cy3ownjjY42deFrH1ZhvFFSZNGOz5HVGG9c
OF9E3nj8T/1UH8YbO29v3yzi1YHxRj5e291StOuQyBu5Pk/SGwtQgMgbQ6Xe
y3hTWzDeqO1epqP1shPjjVJrDiQZMLUDkTdGCv9meN5ZC0Te2Gj/oOBZXDEQ
eeOu+irVWkojEHnjLWsjOf7KPow3KkR3Hklz6MR446fc5mNLbPIw3lgg12j3
jjaOJvJGw9ti5rHpMRhvfF7e9UpItxKIvHH8z/MgFatLQstTr1fS2jORN0qY
tfUy6dRjvFE/YV+Ovk0fVpeUpXpuupq7HOONih9m41ZWNsE/1CXREXmjr8Wt
s/quXf9Ul0RH5I2kUIO2vqXlQOSNwjtQx6P1nf9Ul0RH5I18YmvuhLv3YHVJ
cg8oB1IjCoHIG/u/r/W9vrwCiLxRLYel43BtGxB543GfxytnBmqAyBvnnrt7
sbokytm1L2MGe4DIGyE760De5i4g8sa2pZbHLXWbgcgb/RkkYz5tLwYibzT1
kR5qUkkFIm9sPQonTdi6gMgb8/YltLze/QuIvPFk65tiP0uE8ca5pYvkP9Ql
0RF5I+fMDcogXxEQeSNJwzkp3zsFm7ftkck3hmdXWjDeeFZkSNz0cSfGGy+L
aR4VY6VgvLGZ5ffatbnlQOSNQrxNRj3aHVhdkr6BZmoU7bwSeePDDx90h2jn
lcgbM5IPh2beacPqkuIU9h/nSqAAkTdeTsotuyTfAkTeyBRukrxWnYrVJVn2
PNj9tqgdq0vaKsEyxmZVDUTeuP6++9j1Hx1A5I1qIdcKf3TVApE3Lntp4fTr
bSMQeeMG/TL9mPVNQOSN8p/fXmHXrAUib2y5EXd2+nQNEHnjMxWmp1snCoHI
G2e9Tx7suVkORN545pzMg9bCXGzetovv76yvCSwGIm902nXUYJdjMRB5IydP
EOe66SIg8sYrL48INFrR2gOBN/7atkbySmAhEHnjT70khsRrdVhdkqB40DUb
84X+C6tLoiPyxuPFs/pfaNcXkTcqh6d5rmeoxeqSXhl7+q+tScfmbdM22Fz3
+FkOEHmjzcv4kzPbK/6hLomOjsgbn4UeUhKVLsXqkrw1i7eE1qdidUmsf54f
a7G6JA5T4y0G7IVYXVLKn+fEFqwuyVB5R4nAriqsLqnYzLLkU0ITVpd0+3vn
QQ/jVqwu6QlV2uO8VBNWl5SzTW7MT7QNq0u6H2lS52XdhNUlrU4UWz5qjdcl
yXzXsLf1KcHqkibZVoH2YAVWl2RNsYx+pZeHzdt2ZHbvzunVWdi8bX+Newm8
8WyQcM0Fpgwg8kZ6F5WIXMlcrC7pknhts0BUE1aXdPs7b/g4TwI2b9tB+rSS
c3tS5v9/jDfOfzDeSEfkjUMyKb9T+2KAyBsX31HLK8hoxeqStvnKpanoNACR
N2b8FKFrvtmA1SWxk1euZN/wGZu3bdh1W2X3Ul9s3raS2E/d5UPu2Lxt6xbv
2cv6MO8f6pJo4wTivG1iuxprYilYXdKTy6UWEaKx2Lxtfh+98tJvBc9v92/e
2KYpf3mzvAM2b5tywJMDOa4h8+tjvJGOyBuX8lf32/yKw+qS3iTkLKOwpmPz
tv2QerNKfKYOq0u6xjLsd6U1FJu37dX0rys3gvF52xZ+D5E3OvKrvszkRdi8
bYbktoE9JonYvG32PiUedYnh2LxtJTYNzvrfYrF525RGytuyckKxedvMc0WU
LJR9sXnb7IcFeU32hGLztoW5cbL0ffDE5m3b0p9mfC/hIzZv20X6j+tyrVOx
edusenXcj+1Lx+ZtM/L9+kLpRTQ2b9vCcSPyRq3AHgrbilBs3raht/L1eyRz
gMgbZU0ObfnJHDO/vb95o+y90z88Dlhj87YtMRQ9FP3NBpu3LXjtRU0jZS1s
3jaLT1o7Zzi+zW//b94o8X2rEWfyj/97XRLtQ+SNxYutm4PFo7G6JO4/fCwf
q0sy2xY7anS4HKtLWvN71d3NPcVYXdKe+4lR5pQyrC6p4Eq+C5n6C6tLir7c
MhGUmYvVJZ14tv/h9JaFeSkx3khH5I1GL95N9c5mYnVJXWW5ehS6XKwuyUBY
5Tr/ZBxWl/SFfekyqaJ4IPLGjX/yveR/yhPSEXnjHPdD8A91CvMfjDfOfzDe
SPcP9Qh0RN6osfq+9onEhf4K4410RN7I27nFL+poCMYb//NfYbyR7p+Ow//7
82/zjfg8SHN5mIXf8d9549zSTpLIG9f9ee8DBcs3zi39JIm8ce69D9VYvnFu
+Y1E5I0n/swflYvlG+eWP0lE3qj6bpNBmUUzlm801/jJ0vg+DeONC8eHyBvn
loEkIm9UcWK7GNSVg/HG58Un+wToizHeaP7V90jFYDXOG19camQ7h+cbZ5Nu
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
1vBgkSmVtJOLOvspw50nwbJcw3ydFYkzn4uGQJ3RJLCEejtzmZP6/TzaEdlJ
OwXefqZbLuDze/2Q6dl2ZiX7FNxet+Gi4j3Sf0PojlU1l09Ce7iAwIAp8b+J
NtjrRNgkUMk8ya9IJf23dMFcPpi/D256ZdqfDiH9N+l16/Nx/xHYMnVStIuf
xCemJJuN/fgIeEd7rNouQPy/720TLi/+13fb8xtDSkjclFVoTML4RoHTyeCd
gSTxk1pcXiRePALMLzz6OemJnzGhwbsrVo6CSZykRuMu0o+u02y8GWo3BA9k
6+Of/8f4li4Ys3d9yCConU4qe5lN/IeV2/PtezAA7FKHNYsTSf8tPHiBdVfg
MJiusji9uJGcg6pgjhC7az0MMzMeNqLriJ/ozXs/pLT0A/eC6Jqwu6Q81Tpx
r5qW1k2Hjm1UCdEh/fqDpPLBr43d8LtI7XdFEOnX31+Jzu4SWOrXk/kGuf/R
r9fPb836o1sN6wXGTStcSL3v4+O3KpqvgeRua7+DwaRfBFOuSn1GVQ3PDx0u
Ymog/Vdv9JPzte5quLjId7FuJ4lPxIFPnPuX8ue0spbxpjbSfyWNd8+P3W6B
L7YzN45+IP23JU1L/21QOexWiLuSt570XzpVs3vb1UtAjclNwoKX9N9536/O
NTRlQPn7WkNzNhl/3FYvRn1JLAblq+bHmsvI96+QIht/zXuuoOLY18JziOy/
rVrlvP5ybRB8DvelCzIn/d3lRvqH0axQaA2V2nS9kJynGhR0Oz3uMQ8V6uct
NfJJv/BsO+xMq/sHVrStpDkwrkvGVYbbEffu/QFFU96jnpx62A9zrU/F4YA5
WCcSHPvNjbRbOqNtaxXq5+DIAse77zGkvycxNTyROD8JE0wP+ja0k/7+636F
2g2ueYh992HWuZ709/oIj6PcdJMQoB7Bx+tP6oU5sMn8/blJuBanq6VgS+bl
nUIjr/UmJ0H9fv5PnjnSrxOY2DaZLM2/t6se7WqyIeXRUJY70bimH1qf13GW
jZDxbaF3ce7w2DBUV6lvNj5EnnuXP3BLzaEheEgvzivjSN7X/IJuZrrkKLwz
qzOzFSXtX0AuS/KJ4yiwFB05uOPbf3x3K/IQczQYgbHxvemHtpB+4RKVF6eg
MQzm14ep7C+Q58rd51kJCwOwtvRSs4g1sbf/aucuzzoIipmMMVNnybmUtt/l
+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
4dX3XiryZ3Fc4AWc72Uczf8VGNJLHTpuIaKsiufz0bmLC81yOqhz6jbhA2vw
umbnsNhH2LCF0rsgE5xUj+NzS+VIqUN8I0V7v2MV6xs8HnbINVRmFTdTzF49
amFzON+zqtQ0abjTSu0zbAw4uh77KSwVm3Oxb6WUnQOFXGLxfChhb2rkFFNH
eRWsERNzw+uLcs+PhaeLP1EHgza5H58336u9dC2v92sTNTkbrRgzb75nteyT
0pa2Kirk4O62fao4T+bp//xaNquSKogRWx77Aed7C7/JrIhaHUslTaU5y8+b
76WrXe3+4BRGxeasrHoUif17v5KvutZcRDHuvFI854/HCeenbTXcckXUrOS0
TeO88aTNGtP14syn+g/Prj0Zjs9NOOquyi4VraEYJGi5Vk7hfGD/G82Si/YV
VMPl5GUtBvi538xpVLW+fKDEbqiPm0bgvG6f9khWY2wRdbvs5YN4J5zXOYap
5ulsL6Sq496NehzAeV3Xk+ibfIL51IDvFt+jdTivO2dOZ8hCW0DtTJE4mbwI
5291siVf1bzSKJ4lG0RfD+H+OqL2Vv9+Sw3VabmVazwWrztnt8fI6K7OpbKO
P6ReVOPvqeOvVr++VVdMxclyJ24TxPFRfh2n892vkKLv36ux/Ts+L7i2/MNe
2dJkanr/qVNDo/i5US+ct//IyaJ+/jhsID1vnB3lLowJb6mi5F3oSgb6sH3q
doOw/O1N1IjJkqe991JJ+yl3tr2O6xuoruVrhxddxf1ese8z1/ErTRTf4qrl
CiOpZHs+KqmtX2NSRZ28vKMzZASvv28dynjGA8sot2ebv5QFYj/tsyG52peb
qW1uxxJKavF78YLdZu30v343fX4sphv8Brd/2+747W02jVQM60dn5xy87ruu
Z+F88b6BGt1eNNR+H+dvr09cudAeWENNMI49frccn38dyay5u9O1l5q7s4z+
Jz9+j5LP+5f9UuqlTnLStXfp431mcWWRemfJbEpa8KzbSvF5juL98f0m+3Oo
6uU6imdpMYcqLKhfP89ymtq5g7HE9hHeX4L10bz0h1/K8T8hdVgfHTwc4/rw
sCOpnxRgt4xSm6J+1odNeR3H65o6b19RmM001aixqEXfC+ddTxSaLl0XmKYc
F9KOP9HG9qsaRgsb9aYovSgR4b6neN1xFZc8xaDyjQp/6POMzQbPh7DOOkEy
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
ooHj857OadjH4YOmAgxwvYcZPE//RZOOKT5a439/AebbL2025vlen4KNajgn
hUnA9rpxLwJ6JdMxMo8fCXsmsQNDeZwqVbqMijEUuS6BZWnn+x5xCI+f3BcW
Em2dsjpvkLtbxhT8n/VFYGQe3/1ou6x/UxTC42IKHW52N2+LkXncTyX7mNbT
ewiPh8UaGut9+YbweLvm9q/fVtbn//0b8rgj05/hI0tJGJnHM9+8vCGtb7U6
fhin+PffPzx+gevTtPB8BEbm8QPp91mZMyIQHk84ah62sOk7wuPXN9Rt/zTh
KUbm8ZF01oVezmiExz0LbkQ/an2H3FefxJnFivmcVscPOR0fOpnT2c9ckxAP
ykA5XedNWMy+Hwinqz9VFLSdSkQ43eKlwDPwJQPh9GK1vaIDHOkIpy9Wqr0z
GV/9ff3D6fg4yZx+ge67zKfLcQinJ8S9i4+TSUU4XfTcJsU7K+vD/84D5HTG
vTy1ugvpGJnTddzjDbVnUxEeH7kaxH8mPxXh8YLq3CaJuGSEx52YX71mev9t
9bogj6t6fLr4aiAJI/O4/cfQu+2KKI9b61vt5BA2Q3hcuE9KvfnUe4THD4xr
3dHjLwdkHs8SuGgxkVkCyDzenKBl2bUGQ3j8zunK0KS55wiP0/RF1BwdsABk
HrdQvDF2QyEQ4XHh56df/uBOXJ1/yN1e1yp+6bHGATKPR4p4U/IIxQIyj9/y
uCJStBlDeJz1wJaW12qJGJnHQ3dufCGRgCE8rtRgnutpFIfwuMKeNSVGpiiP
Uwt5XRAvXtUT/uFxmWp7adN1OYDM4yU23DMdzdmA/Dzf0Fd7WO1xBsLpu+UW
Tz1Y4Roypz8SpO5pPPAD4XHvteuCN5dHITzepk1bIsOeDcg8fsxgXjTEMA27
ReLxn7T6ZSJXMITHtTuX2KWOJSE83quukN9Mn4aReXzy0qtLQPMlIPO46svM
qqnTrwGZx+/q7OFPdvyO8HhNYGqzskUKwuNNs2Fta3b7YWQeT32Uq33nVDxG
5vHgJqYPvfdQHveV/Zb1ui0N4fFOq7ad/aHxCI+b0O9g5a1wSyPzeM1Y765T
b8MAmcePzH5SOmqSgpF5vPO2ceK+kXSMzOOx3ebhQbszEB7X1NtyjNEFQ3g8
417T+xdTsQiPizMMPTh+3wuQeXygngk7vSMM4fHKDj4GB5FVbvyHx38YtLEX
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
X7wIvDj8v/vIHhN4EVuosaXd15/ACw3TXze7kr8RuDDY6vWeOxm2BC5kKUc/
2PiY1B0rP0UP9QhzIuq/4vpDDjte5RD1f7nkWeWAr7H/37rDJOPEiPu+5UT9
F6gNuT9qSi5R/8ccMPeve11A1P+11Mdz5Q+yiTpfDWcL3fdyiHp+Z9/zsne3
Eol6Pq7gybLl02KJeq4GropxpyOJeu7k5qbreZtD1HMvpwVa21aUEfX8zF7n
E9mDo4l6nut78+uTG1VEPS9X0Zof1FFF1HP7tdHS2mb5RD33DX7aZqmTR9Tz
xTKHo3WaeEQ9vzaqcOoM1yKinv9VDQie+YSs58/lLyiMkmMTddvCPtcxeEUl
UbcNVnmfmOFaSNTt107sLTeSvhN1O9jowJUdCnyibp9rck5U3cQl6valCNPe
KXtKiLptqxLit2XgfuO6vePmDKcYfipRt1nZ8QfLrF4Qdbt/fKnr/OwMom6z
xOusW39eI+o2N0Mi69A+f6I+n894f+f2ED5Rn6fM3u6xe00jUZ/9WZdubrf/
SdTnmEuOM9++qyPqs8t4qUt+0myiPp+9XL7f+Uw2UZ+n3K5LOW3MJerz53XU
0p8RFUR93sqbUPYhhk3UZ5Mj/vK3+nKJ+rz192obBdsUoj73RBW3SFtw4AHi
5/N2TDtvne5B8O1BGsM5knLBgNf17nnVes+6GgF4XS//p2u94rUQAM29bQ8C
mOfwR0QuCxnZGQiyY+anzWyl7e2wWtqqIvtRPFzf/3CF6zKGV7dpF96LOpkG
eB0w3XKzt/SnbMDPyaj7F0o7dnEArw8msh4FGd0sA7w++HzDioYzPfmgcmKi
50Jn5nlp0zvm1670V0NVkLN5X3a5KG+ueiOf5jxohEkruj480mb2i1WzzowP
ecYl+PyqGe4XJ2rmAn4+p6TOXCN4iD/g9cTZoUekf58IhymjW+/MfMXgmvyT
tIT4la6A1xn9f0zo6nMPg5sLYgXLHGpEdkmD3dLnpoUCXmdUeT797LnWJDiz
fFngy3kM7ixcKdb10SsP8Ppjm0rl8+TPOYDXH5NyR3fP3FQOeP3xwF/T5hE2
eeAjZ5uc78Hsl+yRHbpYSS8XfCJi3GdkMvsgUqcbXMzrLALHrIK1C+7wRPkX
csJXtNbUwMstcpp5Csz+uK9OOUkZKTw4qXkyO+R8pei+6EfN3ZJf0win1SUK
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
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
GH9szQLXTr838aw9fJjxQBE50ZAifOwg8Pgi7HQz8GD3DNqcRTxjbO93/f62
tFej4R+l7w4v4tviUfBr6H+mPq6IZ7YvK+KZeAX8ZeiHLHK0Fand2HsY+3iX
voY9fjqt9z5+zy9izOZ55ECuvVbaa/dcWXuniPMaWMS37d+viPOzvW8R5+c5
KoOzk+w1yUMWbf+VPjutcVYe8Z1yZZ61NO3hljzyylc5mx76iDS+8rI8yZV5
4rK0rm3gx8CtwHPy0A3lwdjoH6y3BfirMuTYczf2WFhEeyt9PPhy8KA8zq99
msvG1N6/CNlyTPWvTxEyNreI9bsP7l//1N/x+qY5zytCDpSHx4s4e2VgSRF6
oi48W8R5uyfuzZh0Lp7P+CQ/K4vQMXXtySJsirbFGGpg+pb7NCjtg/thvvMM
fHE13necVkXowEHJrmiztF1bkg6oC9o2dUbd0Z6tKiK+Mg9+N43vd9al/dRO
9IbeyiION+c29/adT7P4rRxeZqxSE/nI13mco7andx7r0pYYTxpX1qHvd0l/
1eN/QweAf6yJ9p+rv/D/Qgdql+D/hI4Cb4fvlEcMtgt8P4jhsv3ziL/Mj/bN
I149FLyPi042X9t/ddIv9exeY/csfNP8pKf6+mnQjeDp+q2UG87Iw6fdkL5l
3HQR+Ez4D3zrMOWwJuKj690b+AAW+LA+lwkeDb9Q+ckjB3Rdrflu0zz23Pbu
ecjPZHhPawvGBry7MMVXQ+EteCdPecGOtD9fwOvRdgG4PrwtffbOIl5tCxVi
2jpXIsc012xRiTj6Csbpxu+raO9exnpc11l5xAhngM+H/8H4DHxYHnHELeDf
5REj2O5z4/B9wG/DN6T43Dh9bcoLttWEvGm7tGHvpHjeuH4jtG9617mJG/LS
G2kcxzP2Mc99vSbkQzkxL/o07bmy8VU6C3OkrdD+WeQmrxi/Z2F3NkF7KZPw
Faz/Xubem2++AH+c9nF55JXtwM8py8pNsiHKg7o8IA/bqsxYwzLOqg++Az4E
OiWd13jWMFp/x3euSDLQI49vOh9j47HQxZ6LcVjCY4yTkr/Tpo9hnJHw9owz
LMlw6zzOzfO6JAs50Rbpo6zbaD/1M+/kYff0Y76rbTF+aZlkT733W9o37eLA
ZFe1r3XKiGXMDYeXkWe3BV8GX+oZ0b9b8vX6kMnJ/pibPu66wR3zqGnoL/7s
uqFL0/yXJf2yBmMMe5v2M4+Y/zH1gG/1M85zz8DX5ZF3G887vvp7ex4xuHG/
sbz1q9WeFf07qG9Z1C2NMa07rc8jFzHPMoeYyO/D4QfkoT/q0XD40DLm3ppx
LoTvQnsz+Ldpf9ynNmntf9Rm5FFPyRM+C1wnjzhXe3JzHjGy/X3vjiQzV+Vx
Fqdl4bO6JBlQFrolm6BtMN+qC75HGayGHJuDL0l+R//4Dr8XZJHHdamE3BrD
WxOwTrcOfCF8ThZ1w64pzzUvMOYz7jqccfZU57OoVZ2snoNPgo+yzqZsVqPW
4bf8prKxBPwQ/FTXAz4lj5zH3MdcsmE1bLe58I/J5u+exrTONznl2UfTXsmj
jmk903xyCn0uhs+qxjl5Xj+Dv1/GWjaVYfe1/9bKNHpNYAcWUbuxj+s2F9eP
6E+s5ZnXuZ6D8vB3e8BPz6Mmdja8QzXkdZAxBnO4lHfmp5xGXWsEH16JeurQ
lIvo7/R75kbNwfPy8JH6Su3e5jLsjHUYa4vWx26CdygiXrJO1STpi+Mbn5tD
mC9YU52ZRW5orukaXWunMvyg+eBW8NNZ5FljoQHgF6yf5NFuDcp8rl4WOZH1
buveCypRz9DGWlPUZynnv4YfD12RRR3A8dUdaxX/X9/Poi4xI8WTu+ZR8/e7
1vpnqwOOw/PXy6iBm995ptYCpzNOp0qqj4LnViK2Mo5VDo+j/3nqQbKh3Xh+
ShF1SM9DX6m8mXv2KCOWM7edm2K5FnnUCdR16+LWya23nWWMV4aeer7m/rOy
qI3cVQnbYoxgfWFCev+3edSsrK9aPxsB/gV8vyJqedYOtI0NnRu8U7ID+lDz
63Py8LOflVGTtObTswz9Mu9eXRN1WnXHPNg6ifUSa/djkn07Mn3LNbQpI87p
WEbebxxuvmWtT382ONV71ev29Dmedx8Fn1FEvKZftm5nvdEacEsb8thDc6+r
iqifW0dvVYa+XlONWqj77zks5feAIuLwIXxrTR56av1KXzg61SLu1Ibz/MU8
bMXVnnEePsxYxxzQeR4B3wTdnYXOq5tHJpvguVgXb1mNOEBZ/T2/P0j9fe+c
ZK+0W5Po/1gW9cA/FlHrO7GIO4gned67Gnmm3zX3nUd72yzVUoqoM+t3rdVZ
TxgB/30RdXXvEPTL+ouPy1hfg+QjzIvHZ+HD+ucxpvcLT5QRq68tg8TaZGtV
2jp9mHcJ3l94tzCqDNvuHo5NvsE9XFXGvZg1EO9svLuxBrg42R91bQ6/O2VR
UzI31O88YJ2EPouziHOMi/S5T4DHlTF/60WejWdkjb1vJfxO3zJkXZmvFlFj
UcaNbUZW4s7KfMR7Pet+I8uIk4yX9N/GQuqF+mv9fFUW9cnlaa3eJ1h/t2Z+
ThF+zu+OTueozC6oxj2c93HWhSaW4QusNZnnWIMx7/EeUP3yfu6YJPNHp7UY
W3VknCllxNpdU31U/VLPdinivtK7q8urEZtal15t/JNF3dXYflIWtdNWKf/y
vu8M3mmaRdyvblpnupYxJoMbZVE7tc74bJKfmXnc/ZkvGx8YJ7SHT6P/XGU6
zVP7ObWMurX9Zyabph3Q9rzMs1quoRp3hF2zuF98Og8f7b2M9WFrRt7VDk1y
rrzPS37KeH5RGXd6A1Lt3HsN79/0I97rem87C7yR9i/o+5J6lUXNvGMlfEW3
auijtVZrrua0yqSy2SLZZ+20NX7vFq0JWC/1Tq1h8qfdwMtTDKMfblENv6mf
XJjk7e+0DwE3SHJSN4/6ofes1tj1NdZ6J1SjZqQvML+3Bu/43nt6P6ccmier
m95zDqL/z4rYQ+9q16V90K5NSLZLG/ZKHnH18jxqc/pufbh7qM1cn+yhdsna
Zs887vWMmV2bc7BW2b8M32ot9P4yYmbrnL3otyGLe3blwT18pQxfrm/1LsPY
vnsW8a61BmsO7ot3u+q+Nu7/AFd9Wf0=
           "]], 
          Polygon3DBox[CompressedData["
1:eJw1mXXgF8UWxRfjN2vXqstXn4GN3d2toCggAirSEpIKIgZKg4JIdxigSCkK
KnYrqFio2EoZ6BN85tN3Ppz7/rjf7707szO7M/eee+buns06XtphoyzLqvSz
if4bFlm2uf4/q8qyCytZtlz2I7LPy7PsftlN9f+E7IWSxtJvKrPsEukXpyxr
ofbRhduuVNs82d3VfpzsM9TeVPZXGncb2dtKvpb+hWRv6ftJvpTeXffrLztW
/a+ueI5Gkqtzz32V2rdU+0fqVEvte6vfsbIPluwr/XL1OUr65ZILZB+Y3Eaf
w5LHZfxjJEulvKX+f0k/JO7vrfHPll5benON/4XsebL3V79Zsj+RPZf3kf1g
tM+SXV/2bNnPy35B9mayH5G9Juz2shdU/HyPy35Ucqvm6CK7s+RFyUuSr9V/
gdqukD5X/VfpP1VTu661lH6f1vMx6S/q3ofU/r6uvSfpK+kn6S9Zpva1kg+k
367xGkofkbwfr8vuxX7H852m/4cz73Fd3kHtHaVPVP85am+Te26e4Xn6SqpJ
/1DXBkl/VPJf6e9J7pD+lGS99E8lI6Uvkmyi/p/wDNK/17hvZB6zhezHJD+x
n5I78S3Jxuq/XPYw6d/qeV6V/pbue0zPs0DXNqrm/kOkHyc5VtJc8qyuPa7/
nzPffxfz6f4PpA9g3XX/zVq/U2RfovFaVrxmrFdWzWt5Mz4tWSJ5UzJN/aeo
eQ/p09V/tuyVsvWXddRPZ41/gPRtNF5jtZfJvoxPV5f+mdrnSx8rfabar5Vd
I/M9HaXXlxwUvtlE7Y/JniD7cM13j+x7JUegsyea70j1O1T6hZKjkuOK+Dpe
spX02ZI+0qdL/pR+Q+m4Plt6M411i8Z6N7PP4/tb6Lr+sn3ieVtr/t2k7yb9
CfW/UY3vMJbkDek3SJZK/0PyGvuv/uOln4RvqH831k32b5KXidfceABm1JG+
mcatKX131jzZh/ClH/EB3lPPO4f3k/5Axf/YxNjR0ruoXZez7XXvVVKWaf7Z
sp9Ojse38RniVbKrrh0kOU/6OWCE9Gt0//b4p2L/AvX/MPy5ua71TH5mnr3g
fasck8TmOMl4MLCwv+K3t1R8/RvZv0rW0E/tR7C3Gusmtc9hTtmtwDieMWxi
hthZp/5/S58vvWfF+9dPdl/eWfq3ucd9TXbXeIZxcY22e1mz8Fl8F5/H94mh
z6UPzR0nn0o+yx1jxA4x9Am+rzl6yr4OvJA+KnfsEsMreSY930Xsh9pu1vO9
ov9riXViTXpfSQfp3SSLkmOW+YnBL6QP1/3DpM9T2626f4j+j5TdTjJX+ibE
O7jHOkq+knwp+VFtP0lmEHeSGtL3knTV/u2PD0muk74pY0juY29y9zkk/Jt7
u0vekv675FXpLQrng33CfxbLHiR7Ndglu1Zy7iCHnCt9ltqbSn+GuFL7TNld
8WdyRcVry3riE6zxDLWPkb5A7bcR72C87M74jPT5kkeScWyhZHDhucgFHdT/
7txYCWayDnULr9WVau/F+uva5mrbIt7nOV1/VrJc8olkeO4xvoy1vFHXjo74
moevaLwm0h/Q9R4ar6X+T5T9veRB8ovsydJHS+5lf7XG7aWPZ73V/w/FxO+S
tZIfJes13pVqv433qdgPwYs1mTF0kO6rE/g6J/axZuAJfsveEavELHu4k+yd
pF8hmRRr1Tb8lTWbovkay56s690rfgb6cg/PNrFwbp2g9m5qnyD7KtlNZF8v
u77+6+GnkrtDyI+XZm4bGf6/qeZbIf163X+Y7FPV1lH3t9L/6Znz62y195Lc
Gj6Kvz0reUYyWjJG0k/3vAYWqP+cwnu+IGKS2CSeiB1iqAs5Ivc+3C7pDabq
nt5qe1tt/eEXyb6ET72cvL7kAnLCwMAXsAxMI1evLYw9cyP/wTUWy86rGdd4
h1m5/YB3ays5PzOnu0t6J90zPBnD4XasOfvCmrMX5M++MQZjXRP+9k/MOUh9
TgZfiIOK8wH7AweCI3ZR++G8X5Xz38nqd5LkBPxSMqLw/k8ll6l9suy9wjd4
FnIGvs2crcEotZ8g/fRkvnmI/uvSFhjWSXKm9KsR6XcUbjsq8Lpn6fgHB+B/
H+eOjRNjPRj/QOlnRT6FR8AnTpNcRYzq/vrSu0tvp/Ynk7EVjH1T+tDC+Mle
t1V78+T+PDM5elDp/D0r8AaMxvfbBl42Dfz8jhgGP0r7A37RV/2fSuaPZ2TO
iXeG/xPLN6q9T2FfvyiZr5PTiUViktzcpjAfgBdcVjHHgev8qf1pCB8szd/h
8RfJviw3d4RDwoGb6v5/4V+8VzwP+RnOCqelP7mcnM6Z4hieIzPGPpTMl+6X
/kIy//xZ8+wie1d8SvoNam8p/STwQvqQ0lxnacTH1bq2o+wV6ntxxRzlj7j/
N12bpf6rsw3UI/u7ynwM/NkI3Ff/voX3uk4yP7w0+Nqv6ntpxb5Jfm+W2Uf7
qf0C6Y8GPsMP2oCHshcFPwf7wMAGurZDMn7tm5nDcP6Ba8A5pqlvkcwNa8Qa
DlBj7czcBfxqINk6mT+1J/5KY0f/wOfxunYZeEaulD0mee3ZAzgoZwKwCwwb
Kvuawlx15+T93VP/e0iOkxwfOnwQH+dancLxdGjy+Yx3uiz5DMK7jiyMP8ul
Pwl/LPzuAwM/iXfOYpzbrpDdVfYesr/XOlwp+4rkfIeP4+vLNM4P8bwtiN/C
+X136Y0q5sPEL8/0WpUxDCwDQ8FS/B//OhrfrvicCraBcZ2lDywdn8Qp+bxH
YXzoFP0fLIzPcJ3byW/Je48PwBfHFB6rTeDbmcmxXD8wDzwEf68JfOpf+jww
MfITfIWceE9wuaW5uSH9m+l6e9YjMBFshC+A/fCK1rr/3dxYC/7dGH3guhdn
vreX+p8KPvEs6v907txGjoPrNS+dO1i78yrOCeQGOC08s11prCfP1ql4D9lL
7iE3Eu/EJ3F6idraqn8j2f+O/ov1v2dmDFlfZRxB5xo8gpgkNneJ9r+iD23k
c/gasbIxOF5xTIK55BRitU7kj1fj+f+J8Yj5KXr+Vrp2SmA0Zz/OsM+Rp3Kf
bS8pjAVgwoNgQ5XnI0ZXBb9hT9iLW0qfyZvIbpD5rD61Ys4ExsI1psj+Rfat
st+TfZ/sc9T/IdkfFz7P7QJXkD2pNEbAG+GPYAc1FnARfJyi9l8KxwC+P5Cz
pGQJY0l+KFyTOD8wlVoEZyBwH/ynVvH/M9TMmH+G7HPhhbLvLH0mHRsYfW/p
GsYJuWsejFdP+tm5ax6M1yJiqF7mXEIdhnoMHBuuTU48O2KAXAl/gGudhb8V
xqRRss/NjFXEzHWRA4mlzrxPcg4eWzhHkivBuCGFOTJcGQ4xLNq7JudAcut+
8eycSQ+Tfi1n3uSaDucFctKSyCn4bj3ZVcln6FaFc97myXySXEhO+KXKeEyu
WCi5RfpK9ZmstvaSh3LjwV2FOQPcAU5MLQkM6RT+ARYRs+clc35ieWWVz6Pb
Sb6Rfreu9QFrELhI4bYPoh7XunS+WB7n19ZxxiAH9Sid98h/+DTn12VVvp85
qLc10M07xFy1dW9j2VvL/jzqaa0C08HsbhpvvOwdOVPIfrtwDQneBn+jtjRR
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
6i7kPnIgNWzwmtgmxntrvP8BNhKGJQ==
           "]], 
          Polygon3DBox[CompressedData["
1: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
wzE=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlzz8oRHEAB/BfyJlwuuGlkJ2ByZ1iM6grZMGAM9Ld5LoI2Qx3FpE/RU5k
sFjtt/hTJJkZGa2Uz/WGT+/b933f773XmytM5RtCCEma+UiFMNMSwixz7CVC
ONCVoxBq8oTuzm7S9aYzhMsozossMM+n/Ym+XX73TMW+VT60f3VvQE7SwSCn
tutkbTfZYJ8j2139s9xo18SvXNNXuZCHyVBlJ4rf22aXolT/n/o53rtk/+cH
v/jmh5zuOIq/rZsuenjRX3vm3rNXzhjXjXFu++ZeWu6jnwxn+rK+YL/MCnm2
9Lf6B/mJx0R8ZkW/ph+V0wwxQlG/TVEuMe3dq/Uzfcs/5ic38Q==
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJw1mgXYFdUWhs8cRP49o6DwDx7OIQRRpMFCREXFBEUFAxWVMMDuwsLuwO4r
qNf22t0ttljYHdiY5P3e+637PP8865t19uzZs/faK779d52w/6j9qpVKZXSL
SkV/lbPySuX3rFKZKdm9rFQ2FH6qVqmsKDxCeCXJPVOlspvwHpJtdd9HuANS
94OEd5VcXdcA4RaSZ+u3d4TPkjxP/e4hPF/yGfW7nXAP6c/RfQ/heZL76pnN
hPcsKpVTdP++8FGSk6WfzHulb6lnOgvfpz56SN9TeFXJnZPHuaXkFrrWFN5U
sqH2Q4TvVPtd9MEfCi+nq6j6vo3wqfEu3rmtnhkuvJNkez27Ou0lf2+qVNYR
3kb6J9XXWOHlpT9Cz7wmnEvuoPtXhc+Q/EBtknTLNTTHGvegeNcFzK/kIsnz
dfUVXiB5tvo9SnhvtT1IeBPh/YSvEZ4hfJXki5Jj1c/SkmvpHftLDpG8Wb9t
L3yA2r+s914lPFj6c2M+x0lepGtd4X3U5h5d/dXPVnpvk+R/pN9WeHqM4V+S
HfV8W+FOko+rz02km12vVC7n+6XfV32cqd9mCZ8juRFrkLnd5pnnsJeuDXQ/
ONZiit5xsXBXyRl6ZqFkR83PucLvSj9b75kq3enCx0s+qPveeu41vffE3LZ0
guTD0g+W/lXpJ2ocpb7hZ+kPlG4X5k1ym8LrfK70owrbGLa2etXzyBxOpJ3k
ZpJnqc2Nws+pzTnCJwm/ILy78BrMiXA3test3FdygvRfCl8j/Zcaz6aSvfUt
G0s/UO/4Vfe7qd16arO75DDp7xVeU/qb9b3/xsYkt1Lbfwnfoes0tbmLfac2
JwV+XPgU4fuFnxS+onDbWcJXRp9vC1/Ougq/JXyJ8A3CrzPfwo8Kvyb8jca5
o2QfjXPJDhob79YYrio8nnf02yO6fhU+U/Jq6W8Vflf4ROEThB8TvgC7FH5F
+Fn1ubvwyurnC90/wHzq9010PYi9Srer3nOtcJU9V9guLpN+58J76lLh7Qrv
BfbEXF2rCXfXvO0k/UrCF0u3Y2G/dJHwWOF+wpewZwv7FnzMVsInCv+oZ8eE
fpr0IwuvxV7Ct2isTwhPldxS+mfYO9L/0GRfsZWe3aHwPmW/jo89soTkEzXv
C/bHILW5TXggdiV8mfCKwkNj3lYR3ij3WrDXfsi9Fy6UPKy0LfTSWqwT6/g3
e0f4YeFd9NuasXbr8lysKf2tHTaAzQ2JdafNZWHDbwrvo2ui8EGSR6rfw4WP
kNw79Px+WWl/fqPkbbl9SI33Cx/Dtwg/lNv3dhfeT/hp4ffUz6PCl+LDC9so
ttpTeFjyvmB/YK/Ybe/CdoP9rCz8n9z7tCG8tK51Na9LSR6ncYzE/2MzYUvb
M3/St9bvnTVXt+T2je11f1Nun9bMd+f2Xe2w5dzxpS02yFwLr4Be/ZSSXdTP
paW/63rJVtKtJbyexn5dbt/eprBdYp8tCu9JvrFPYdvFhpdgTYS3EF5WeExp
2ztIclJu+5/M+3W9Lny05DJ698d6z9uyo2N0/wZj41uTbfIO9bNZPHuT8LHC
bxFr2C8xJ7cUtg/s5Dbhf4RbVm2fE3KPYbzkb3rHjNzz9l3N7W/X2PbAXwiP
lvwk/PlE4a/UZkvJtmq/k+TjMf6b9Mxg9f0jtq/2k6TvovfeyX5jL+Cfcsej
5YUfyB0LumKnyf7hthTjq3q8rPF90u/AGqr/8cIvqv9va/YZy2oMx5QeM2M/
tnT7EySf1e+nCvcvPCesyzjJJeTTNpWua8M+Al9RKbzf2HeLiS16/vCIy/gU
fEtW2G+yj9hP+KoFsY/wrexN9uj7jItYIHyo8CvCN4efZW+yR/HL7E32KP4U
v7qucO/SsXhg6bh5pfAkydOSbXUvtdlN7Z8TPljycOnPFD5E8uBkm5zEfonc
rHvkY8+GTzss7GQJ/Iz0L/Cs8BGl+/lCc3gq/lT4dMnjk+12cmG7xD6ZlxfU
7mB8l547MnfMJQcjBuDT8G3EEvwS/onYlWlNZ0v3fc3r0EZz+1XY5xaF86u3
hZPafar3Hit8BblGaTs8XvJ5yVX1++1q/2GsxQbCmdZ0G+l/Ut8jdL+58HDJ
j2NdiKu7hz1j1xuRO2aOc5/FPiIW9dU7dhDuV9qXs1++IybmjgvEB+I9cX+V
wuvK+s7U9RKxUHI18ivJO/mu3LkC/naA9N/HviP+vJo7LhAfXs4dF4gP3+aO
NcQcYicxdA3h6zSmqmQnzdvt0m1HvNT9FZEnkC+cofYjpD++8PgYZ1/pjivs
x/DT7ysfOi95H30gPDY5R52e2W75lrv122+Kc9/r93frzoHI7d8THiXcRfjQ
ZPs8TPIxXaOExyR/K+vE/nhG7ZeS7n71t2TDeeqape0H+/pWv7+RHEfOwd/p
fi/J52r2f08xFsnX684RH5X+LeFdkuuO+ySPYG9hp+r3Fck5+j3pXYvIv8hL
JfdSmyckZ+m38ZJP12xjU6T/SHJb8hLJufr9bcnjpH9X8g3dz9U8zG/WPhfe
PDnXJQ8/Um0+kxyod52d2/aeUpsqPozcQXhRk2uQlmrzj/S7Sv+b2nbTs510
v1BtltH9R2pTT84lftQznYVXEF6avvTsl+x/PbtY7dur/adq/2fde/hd4fbx
LH00Eb+Yw7r15LQ/q8+a8CrCheT+yT75AMl9oo6gnjhW1yHYsuTFUQtQE7yh
dzwq+ZX6vDbm50nJl3U/JLn2eUhyT/YFsUL6f/TOxZq3DXW/dfT5gq7z8OGS
f6tNi9z5/My6a8KHhC9JjhEPS35a9xq/Jv1nwlOS9+arur9X+KewH3wjPrKv
5uq03DGIvBqbpy5cSvqR5DhRB+HTLky2NXKMS5NjLr51jp6dwL30x0m2l74b
cUvPnoStSH+y5AW6RrPPJX/X7+sLnyh8rdodxH5nHRreCzsK3xXtz0/ef+OE
z5Ls0LAPpR68JdaC/m+Iufo3e0rXUGJ98vd9LHwf30NOov1+hORRybGD+niF
hn3BherzuogL1yfn4dTlH8U6jpF+huTaane75IfSXyl5qPRXRxxgX1P/TIl9
dHRyTc6c9yn9Xmq5lZLzBvz5laXzD/IQ8v0bInfFH18XuSj+G9/1geQqGu/0
yFeJETdFXYBv/lFXf/xq8nwxb3sn36O/V23PCFs9JXl+mecLwoaxJWyqi64V
hZdn/FFP/Rm+akLUHuRV5Fdf585D8P/k9W11Tax6354S79pBspvabyD96blz
LL6dmDYh8iz6vDNqB/z62KgrW1ErRK1BbLk76hHiw12F4zJxZ+eqOQdi4jd1
fycxt2tyjUmt2S+ZfxjAPmAtib/JMZJxPB9+mXXcMbnuYl2oPQ+KXPS00u/j
vcQ9fPwBkqOTc3Xy3vWTfxsf88K3UbORA/0lu/o8d05VqTrWM79dS9tQt9Lf
0V36uZljDuNkvH/KT3QQXizZinXie9nbul9euEl4sfrvpWevKV2zw5PAl8yO
PIp3vRlxlnHdo/Z/6fmnNWelnmlkEYPUV0fhefrtDumbhZcp7bPrwpnk9NK5
Af6W+Dqu6njLO6jDsRnq91WENyxcI0zHRvXt15MrZLYH+Cn2I7k1nAt1E/UT
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
uobFLy7dcP1OrkWOMp96VmO7Wm3+C7RTJjk=
           "]], 
          Polygon3DBox[CompressedData["
1:eJw1mmegFEUWhacHgdfdJpSR4T0DEgQRQQFFEJSgYAAVEEXMrsKac0CMa3Z1
VVQU4xoxR8wBA+YsKibEnEGMiAju9+0tf9R7dauqq6sr3HvOqVlzr4NHHVSt
VCrX8GcZ/h9XViptyR+RVSrP5JXKaNIh5A8kPUf+hcZKpSv/18NeoVaprN5U
qVxXVCpbYt+IvQb2LdhPYk/DnlWvVM4n/zzP/Mizd1B2G+/YnTbfULcc7ceS
v582J1A3kzbNabs6dnPsztT/B/t47A2w1yaNJL8KY7yB/O/08QfPL2ioVO4h
P4m+l6NuPG0KnluN5y+hvjv29bQ/nvo69cOwb6V+c8p6kH+I/Ge8+1jqt6R+
PmX38dyZ1LfEfgH7MPJHp/p/pmdWpf/JRbzvOup7kg4nP5K6r+ivkfqvyb9J
2d7U/Zv8tuQPIB1Hvon6f/H8O9jnUt8RuwPlK/COP/iexaRmvLMvZY+Q70Gb
TWl7E/Y39N8P+yjsR7E/x15Emz/pb2XsB8m3o34Xvx37A+qH1mLsfen/ZteL
8nakLpTl2IfwrtWoG4F9i+tA2aHktyBtTb4D4/uS/p9w/rBbYW+KfRv217zv
ed7ROY/5vieN1710AmXvULcH/4di70k6L43JsW2M3UTbL7Afwz4Ie0vsjUhX
Y19Jeon+9md8mzO+ic4XZdvlMd+7k75nD3zK8w9SNgl7CM9+jX0W9s7Ya2J3
J+1EfivKPqHuiDL2kntqKmXfUvYT/RyJPdz5qcV6uW7vNsYcO9f7UzaMui+x
Z2BfZ5/YB9DfUPobhH0x5W9Rv1f65g7U70f9ZtSfgH0m5W9QP4L/Q7Dr1L+J
vT32AOzfWlcqr2Ovj90Tu6T+1cbYCwNS+1nYu2P3Sf07Rse6H3Yv7Pexh2Hv
iv0s83c7ZYcxhpM8w+TnUn8Q+d2of6Uec+LcjMIeTP3b2Ptj74HdFXst0tbk
d6VsdmOcGc+Be8q9dRR9r16N/g6l/PV67BXXxLXxTHg2dqRsIO2fxl7IfNew
l/C991L3FPmHSdPJf0f9K/y/wT1L+0GkvbIYs2N/l/9PY29Des9zw37cg/14
D/bJtM2xB2Hf7Jix5/DMeNrtjX0b9sGMd1g1zsjhlC9L+9G0vwz7WOqfoX2D
Z0R/wLe0pH596m/H3of6k3h+62q87wParUL9GtRfjD3Bs0a6m/xb7iHyr9HH
seSvpe3H9P0U6U++vw1lGfVPYmfUNWIvZT5Wpr+DipiT06hfkdSe/D94551p
LVdN59U1PRC7EXsg9mXYK/H8P3n+cewvePeL9N+D8m7YK/H8dqR/OT7KfqBu
E+wx2Kdif4R9Av1tRX9HU/YSZTX6G0l/L2KfQdsTqW9XDZ90fB5nxrNzBfnv
eb4b9g7Yr2PPw36TMZyE/Q72AuzXSOvohylr6/cl//wV9g285xbXnLIPyF9u
X6TTqeuEvQxj2Ye6Gu17U9aPfs7G3hb7auwuxiXKts9iP7uvl+f5ruT7k39F
X8N41srijHnWuvB/Q+x19BfkZ1A2j/XpiP076/EO7e8l/y11v1B3D+/rxfue
o+wI3rcj/Z9G/lPqM8a3P/aF+jbqmmGPw56WxRw6lx/T33+w22D/1Rjz4vyc
QfqK/Fn03yH5u1+x2/D8BuS7k3+Z9q1r4WstW4X8KbQfQftL05o+XI+xr6r/
pP0Z1G9TjTlcSNn71M8mvwzv/536p7FXzMJn6btm12Ot52P/1hhnyLP0M/bC
xvgev/0m0s7kFzNHG2Xh0/Rtu/K+AbyvP2UbUTaH/i4g34r3LaH+EP7P1De5
p4vAFq1dD1If8rvz/Mo83w97gGtD6pUF/rD+XOq38yy4Zjw/DXsc9gP6T+Ma
Y9qH/J32y3wvps2y1M+h7HzybZO/mod9B/Zd2DtXA794ftphD8H+GvsB6ifT
3zdZYByxTpsUL7/Xn1B2IfXf+T7y7ai/k/o1qxGP9IFN2AOxv8C+izarYW+R
3n8P9l7Ym6TvHUL7JfU4z77zZ/L15K983+3Geewm7G9dgyJ8l2d9Bmk8+aX1
8A+O6RfypzC+h7LwCfoGY8dmWZy/bnlgs560fzALjHYrdvvk33bFrmC3wv7E
+IadYW+U5nOK7yMtjz0X+0Ly5xuDssBIYiXxifjsI8oWkD+Y+nOy8Jn6TvFc
UY1nfvBs1MJ3iqHEUqfXwt/rE/WNJ2I/ir2D78W+nfF0T+u/m/4Duyv2fZ5/
7OZpP37q+mLfjd0b+xnsg7FPIr1N/l3jB/nv6uF7P+L9K9L/nrzvuHQ2F7N/
r+T5napxRjzTV2N3Sf6nH/aYND8TssCjn9Lf2pT/m/KGtoGJxcaeidH03YK0
ZhYxx9jTUsybBaYSW1UZw1/kL6Jsbj18ir5FH3JALXyivnGq34+9lGdq2Cd7
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
3QOPFKExbJXay4X/B6WFebM=
           "]], 
          Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlzj0rxlEYBvDrUcSjR5Z/3sVmsZhNGEyU8lIMwuQ1DNgfRCnyPXwDyiKZ
GCghpQxSdptfGX6d+1xd5+70LmxMrNckqVBHtUhWyskqa1w0JIOyMt3mCk0U
1Ms+WpM+vX6qpeRXXtuR3MnPzOfMy0+dz+3JgDfH5gMOOeJWd08+ZscwI4zz
KR+VX+nMMM0lD/IfTnTeeGWoMSm1JT36czpTTDLLtW6LP+3o3fvLrrPMi/yb
JfM2W2yyb8ej/N3bRfeb0n+n2Y4n+Ze8072LgmX9P964Kbw=
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
IVnjeMvRfReZL6rPoPc+LbXYrdio8zPS91n7fVSwWN0jWB2g3pR6VOK5yvsD
g+2F3ldnWz4p3xzufZ2m3r9a6N93g58j1XFNkKd5/FEc0hlRv+oB7v0pZ/WU
apL9ecsR4vObwfMiq2cHeP7q63lZZ1Ox9Qe/V3PoW+ja6cip2NVwbtapYL2R
eolx2zmR1dTqT6qvov5do2BnX7lDPHej59M7gtUaqjke9NytnoY4QTPvH1VO
LIaLP6uOVT17refrl5AXqp7wHP0qMi1YrTnBe1B6D+UK1crirud5Ln4UOT61
eK6YfXVqOUnnZX4w/q7+2LGx1XZ1wMORY2LzaZ3lc/2b3hiMi0ZZ65WpZlKf
Sv2qf3Q29c1T83PxAeUM1dji26drz4P1bNXLLc39cyPrqR7I29zyK+2v9ln1
izjJ95FxQfWO1Mu8ApvzGRdo77h3e9449fHoduYtN56cmu+L86u/o9yt/DlF
vdXEOEO5xPLPK4p1wc6VzlcutrkVq9XH7u0xULFQvPuByPh22dg4nnrU4nnC
qgcUy+v6fi4N1g9UX3Ca51/lYXFSccW33K9UN1yT2rusdF94I1geFweoyO81
kdWVxwTzZ52jSc4r1OtSLC/xmC9+rlitemiKr1+9lyK/tyTYede5Vj2rWD3c
fUm9QvUM1Z9p77lJfeMu7gPyhRnuw/LlWf4uih3qFWid8lf1FdVzvYw5+yRW
46hvECVedyeWX5VnW8f2XVS3jU3Nl+T/vdFNDNZvHBDbOVWeVb5VD0R9ji6K
V9h8GlmN1I97GmStJh3p8WddsF6/ev6rkX/lrRZTj2Ww80/57jDnS0Njq42n
ur3WL93T7mP6jqUSi5uKn+o51C5Yn/4k9Xi8dlYNrbwufiKfUE9T/UzVXb/l
rOf2dc56wDrDI+RL/L44Ms4/1s+gzmLT2HrsshnhWPcpH9XO2v6or626S8/b
6j0f9X5Ud6n+Ui+uuvPGJp4T1ccdkdo6tJ5vc+a38g3F/uLEYqZ67H/6/x30
/4d13v9UHT7Oz5F4m2oT1QWqD3QG6rkP6Ywrb6qPJw5a0zm/3kHv0tD9rP7/
8UPNqTP6abBvqhpW31d7qVrwP705dgw=
           "]], 
          Polygon3DBox[CompressedData["
1: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
yf3nuZk1g+q7RjE/4h/Vxqp5S+D/ARzXkAY=
           "]], 
          Polygon3DBox[CompressedData["
1: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
xw==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwl0M0rpWEYB+AbjdIwZoFJb05xFswRZWGGOivjY2KoYXxFlCJNjfkXpjSL
sWRlYXb+BCkfpSZZ2xGbsUVjwUbJXG/v4uq5z31+z33u5zQufB9dKY2IGsrp
rosoVEU0kKOVj/URl7UR7ZURLTTTRk6/T35I5hPDrOo/yt7wRT3BOGPpPfk8
RfUK3/jJk2ytOfvqQw7Y451sLyXmnvh8Z9Fn568kYkT/g/4Yo3ym34yvSfZb
v2V/ON+QyHayo+5J31aW3d1KsvmhfsGFO6cya/rvzWrSK6WMPAOy5fobMgXe
sk6H/maS7VxhdlG2i0H9f942rz/DLHPpf5juXp+9pVruFa/pNHvbnEl1szlT
ziuZouyxOdcvI8445y9/9Aq+W5JZZtf+i87pdH/9I/U9D9ym+5r/H8YPOaE=

           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 6], 
         RGBColor[0.922526, 0.385626, 0.209179], Lighting -> {{"Ambient", 
            RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
            RGBColor[0.2306315, 0.0964065, 0.05229475], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            GrayLevel[0.3], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2306315, 0.0964065, 0.05229475], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
pryI1qyckHJHs3PnpxSDKBZRXkX5FZ2D1lk7s9+4Dj42c1wn/7aabAv9Rib2
Kcdk9g3X5z4H5VHGK76BD08cC+gubpAOpv1m+AOJ7YJ8wrHwOhoXnEe6Jjjf
JJ3TPM4/QneROWek3JHeh/yxWYn9jGviWOmErbn94BbM3SR1LmVVapnRe6gL
1sucG6wLfpQ5z6aYbqliqsR5gDcz58P25uZ6e3qDyrkpXzcu+O71BnoVnT9V
vkV5klrK74CTGXsnfa5MHDc1UbwvXUP7bdQvTxxn1Yx3p/zPnfJFUvfplVm3
Ny46v6k8pOa9PXP8fkfm/Kb2ojxp3bjHpcG5YOWBpVMOxxzCX4Nj1RlRTlfl
jpMHMc979GmcOKexOPKFqWMf2VzluyqXnMeRDZWvMThxfuP73Pc3XX0zxxHP
Z55HeaSxqfO8yjOsjXHZqMT7VOx4D/yN1DlSyZ3kT3Gj4jKd15bow2wO9lel
l/bG89Q8A+F9MucNtBflQOQjKF5blzuOko5dlzrnJp0+P+5R+94Q9b18pcZx
ncqLrMydg9D8tTLnCRXDzkmd054IlivZVimmWE19dHxv6tMg7kv+jnyAlamL
+IrUPqBybsq9ydYo9lT8W6NkPf6s7jdzTl6+U5WS44H1meN1+QPyC5QfUE5T
+laxseyF4tVl/NY3ca7p3Gg3FZspL6b8mHzdt3LnAZUrUH5PZ9Imsy5SPKXY
enlqmVU+UDkQ5ab15hXL7ISnJdtZ2c9TSo75JNfySRTPyH+X3lQMq/hVub51
0b4fjbIkmVK+WL6a/DHNK19Kfsv6+K4UZ3+cO7e8JXFOZkm03XofyiPK/1Eu
qEpwPkXx7V1F5+2WMXZx7nhVMqX8u/Lw0vvzaVsqHQu2KvoMe2eOkXWninlX
Zc4xJCX7q9JRyj/KX5e/Lf/9I73RxPFpMfhNKqf3QeyjuGJx/Ja+OYc5VyfO
Q3aP+l8+ZaPoM8h3+DTOKZ/yumB9KBmXPdL/Ck4s2efcnTi32S/zvSunpL0o
97CafW8K/taK4ByV4ibFT0fj2hVjnVRynkI6/3zpv8QxnfaunL/yWvKHle9c
wpz/Bb+iE3o=
           "]], 
          Polygon3DBox[CompressedData["
1:eJxFmXe0VsUVxT+4iCLeeSp48fo9Na70rCzT28pKUWOPqCAliAoiFnpTFAFB
VBAU6UURBUVReu8oHaRIkyICgoi8SJMHigia/cuerPwx6zt7zty5M3NP2We+
K+5tXatVxUKh8GaFQqGSfs8UJYdC4bGkUFiTFQo1SguFyiWFwiDhMuFvpO8t
/bvCs4V3Cl8r/Krwi8JbhFPhdsJDhP8geYjkF9S+TguFL6Ufob69wquk3yz8
e+HuwiOEdwnXFP5I+JFc75N8UO2Q8F7p92iOj9V2qe1Wm6k2TLomajMk19KY
fpI3SV6iuapr/Uf1/L/Vt1+6D9R3SLrBwq8Iny/9MekPCH8sfEj6m4UnC88U
Pik8Snif8GrhU8JjhNcJt829ltbMlXhN92lMfcmDJU/T2Is0/8cafzi+v0T4
sPAs4cf1/DaN+bPwU8KjpH9N7Zjkq9S3Q7o5alM0V0P1tZHuU+G60n0gPEF4
pHR1JN/N+UneJ30d6ccK19L8nwjfKjxG+PnMe2SvPdR3ntaSqK2UvF59W6W7
Q+12ya0017ii18zZnQ7eyyup38m7Xk79Tfg2ZdJfIP024f3CHwoH4cvVqst+
zpFxDdJ63sj8vf7BN9b8HdQ3Tvjnwtt5n36PCB9VOyW5qOeH6Hel8MG4/jLJ
5cHfbonWcCdnqfaR5DlqtSUPV7tGY14S/lfibzI0tQ2eTG1z2OZ+vbO+ft+U
frzm3it8RPrXhVtqba9LfkTyw2qvST5H77yJeYVHa/zZwi8Jz2fPrE/Pr9W4
14Rb6PndwrdJP0p4gPQPZrbVNzRmhnRb1XLpB6hvpHRLU++JvexUSzX/EXxA
+r6a72LhSjrPL4WfyfwNDwWfCWczUGPKJT+kvmrSlWn+uyRPUd9k6burdZT8
qeZeGr8vtrku2FcOqu8ByePVN126eppvqORBGj9VuhNqL0i/UH2LsSXhhsJv
CbfX2KqaY5Hwp8LPCdfP/S0GxOfnF73HlurroOe/EO6q8fOEF4LVzpKtdFDf
ZexVbb7kNdJ/ENf/oOQDmmNZ0fHjj9KfUN/LMT704N1qF6j/7Hi27LksdWzi
2+AP5wV/j2aSV0q3SHO1EG4sPFd4nnAjrX+N5HVqjSU3kP426XsKT8K/9S0q
a71V1DLJndRfU/pb+T7Yjsa34mwkL8YWNEcLbEP4beGNqeMV9obdHY2xqa3a
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
FvMN/5FQj4+P8ZRcQy1LjYKPcp/EXcx/AIYzN2A=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtlnlQVlUYh69+mGPKR8vMzc/vsxlrWqZlpm1q2qaaafnDnHFHxH1cUhJQ
XFjCDRQEVFRcSXRSVAzFLQ1NTEASRXEJS1IbK60UFIxU1LTnN+/945nzvr/z
nnPPved9z7ndRsT1jm3rOE4GtIM6v+P8CBfgjs9xfqM96TrONtqv4Xu0E/g9
sOdiP0/bHT6FU+i30XZgT4VS/IcjHOch2IIfFuY4HbGTA44zFv9daCZ+Mv5x
Ykvwt0Jb4mrx56CvxS+GfcQdc+3ZWsNctGnS8bPDHWcZ2kra5bAC7kE92n3a
u/AfpBOfBrPhEn2zaMfxjBb6bsMdqA5a/1/0/0J7BurhWtDeqRU9kbYJP4qx
hYzZABvhG7Ra+r4k5mPaARDlfcuf0P6lTYJkeBFegOf0zt533Mm7fEY7CkZD
A/PF84ynsZ+FY8QtJ2Y79m5v/RVQCenEJaF9BavwbzI2A+0gfpXPvmMr2iba
Im8vD+mbaR9Ze0/sKbTTYQbshoFoubQ7YKd0np2DNhsu49cw389oVczxg+YD
X8hx5tM3DxbAYG+OG7AY+ybtLWjV92LseC93lEONzLeCdru3rjxYAnOIu4F2
lTGNMCZga/kD+zRk0zcdP921dR2HLLQ0/GTX+hVXByMYm4J2CvukN1YxPdFj
8PfBeLQktCxow/MdWKn3xr/LGtfgl+NXwDTGRZDT7cnZzrRdIAiNxN73WS4/
gt+V7zIULYX5E6E7fUPwZzA+l/kCxHQg9rprY/0RNu+DaHvw0wK2r72gQDWm
mJDlpnK0CXKJ2eJaXZ7Aj4TN+DHoD2D3hVn0ZaClBiyPO/CMW9pPtKkwBXsd
69sGcfjXXFu/6tJhLU34v2s//JbPyuuzruW/6qAaYtAO0zajP8rYzcQd1f7h
T1b90rcfRqEl4A+CJPxk6IE2GD9KseGWk8rNgfj74TB2CvMNhhL8Cu0vdqbe
lb5y1/ZJ+3WFsQ0wWrURsJqaCZvoyyNmtJ6Dna89hz4651ybJ5W4WNiFXwc1
+m74i5Xr+MMD9i2PMO4oDMMfCoewa2GszgniKl3L53mMy/FbvsSgjUErJq5I
sfj9YAhaHH489CIuVucB2lb8EtUjWrRruaMcmqo1oxUHrWZVu6nQF204cbOw
Z8InxA/DHwAJ+JMgAS0SvxA+1HuiRWrvtV7mW4S/UDUrnfn6wTSdoTCSuBHE
9Yci7AloE6E3MfEa750XOjdKmWs8Wh/iSvG/hWji+kMO9l7VJH0TtT60PNWu
znG09Wi/qh6wG1jjFZhPTBHaarRu+B/BBvy9PKeAcathM3zu2loG+exbK+f2
EbOQ8f8w5rLf5tX8a6EYOwbtKViGfx7+RmvGb4FFjBsEe5gnTftDX19iDni5
MZ+YBTCdmPbU5Tns87oLVHMBuyvWe3eT7qg9rGUI2gHsCqiE79BSme+M7q5w
O8u/wJ/k2pmks6lMZ6ruT7iO/QTzPwknglZ7qinV1kGogjaspZD+9bordbe7
di+sw96ou0O1itYStLNWZ+5S1QkxN4J2b+r+zPfeQ7Eas9pv5+BstHY84wh2
DZTBaWIS0Ud6z9Xzbwftjirw21jNUUPcRWhVv84wtAv4u3RPKZfxo31WH+e0
H96+aV+0P9laj85iOAAdQ3Z+dvDO4scgT3mG5qM/DFYxNlu1obtB57PfnjXO
tf0o976bvl8Z61igc5aYCEjUfwd+KGT/NPq36QQNOjtV/8QMhx2qWdfu7me8
fwD9C1xiviy0auyzcI+4etWL9kTvitZZZ4z2nLj3sQf6rU8xnUL2/6L/mKvK
N2JWoJ+m/yX8l2ECWj7aK9ivqjZ0l+rM1f+U384w5avyNo7YEH57+ADtHX0f
9Ddp34DXlS+sOZa4Ltiu7mLiCohZA5nYr6E9rntaeRu0fxr927wHCYyrQ3tL
ayV2qc/u7pFwke/7Z7jtgfYiExZidyX2bZhIzP9rk6dd
           "]], 
          Polygon3DBox[CompressedData["
1:eJwl0D9LQlEYx/FfGmZ/zEIJ9N4G6zUE0RuouVcQRRRh3QqKKAlaoiANEWoJ
iqZqTo3Waskg0MEkTcnBlgan2up7OcOH5zm/85zDuTc260yveCSF4cPVkDTV
L9UD0gcm6Tcj0iLarEdZj2AC58wu4II8iRROME9m2VJfUOrolALUU+b3uCPP
3ir9OtbgYIf8nbxOX0QJDSTJHVj0w0h7pSj11ZKCtjnbJGtTv3HM7DaW6H9c
7P1SQ8y2uF/ue+DBOPkZWQVl+jzu8IYj7khgg/4aN7hEgdkD8lv6RzzgCWXy
FLrpe9EDP+LM7pI3+Sc1VPGJOfJMxLzNz1u64MMXsw3LnN3i7WPUF+ZnmE2z
F2Y9gEH3m7BMfogs/T2ynNmnyjZ5jj6BZ6958x93/wPAFEdN
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 6], 
         RGBColor[0.528488, 0.470624, 0.701351], Lighting -> {{"Ambient", 
            RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
           "Directional", 
            RGBColor[0.264244, 0.235312, 0.3506755], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            Hue[0.7, 1, 1], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.264244, 0.235312, 0.3506755], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwtmXXcV0UWxn/q3VXX1Xstrj8dke4FUbpDQErgpaVTOgSkuxGQkAYBAekO
BQMVBWlQFBNz7dxdXXWN/T6fc/447/Pcc2fmN3fm1Mybt+vAnAGXZzKZCvy5
AlwaZzL1okxmAfgBMgueSTKZZvAK8LrgWZ4/hn+A1IG/B54Bf+ddB/ij4FvZ
TOYUukUhk/mD52Ho/wTrI4Ph1cGfkUrwAeATSHv4m+DT9P0NbEHf19UH/QXw
tP+ufv8Xnh+E9wW3I+3gX4GfgN8j2cj418hnyAu8Gw9G9H0O3gb+PHjSx9T8
v/c+XyITedcLnBzbGJ/4mO15rg6OA1czz+5gOeb5OHwIvCw8jwS+CN1j4G20
fwa8AH6DfBHZ+nyktUpZG2QufA74kMaAjwA7I2Xg/cCbeVcDnoJP+Xoe1Bog
90b22xHvisKXM/an4A9aE2QJz4V5fz/zakKbv/Ot7eBn0fXl/UmwZ2R71wmp
SZvv0DWkTUX42/oN+Hb6nef9s+BKxrwXfTH0a8Ch6DeAL/t+LQK/8HV+DazG
ON+ADYLZVTf0H4E/IB3h58BXnX8P7kRy4IfBa+jbESxB3y9d/xL4DjIB/h54
ROvleu11I/iL4HGfj+b1BjIK/qv6ub1dzbesg5+D74Pv4bte0bz5rVd5zoe+
NM9/g0+Efy77dFtS3y/dTmQvV/K8An4V2ITnivDGsa2v1nkTuBHpDb8ILuO3
7gILu51rbppjHd/32uBApDK8guyCdTgN3hNsvbRWWrOb0BeCr8jaWsl+rtU+
I5183bTvO9E3BUcgQ5jjCPTTwd3oZ4LPI+/Aj4LbZF/yTfjDyGH4JPAV5BK8
Kzgb2Sv7BPfLdzV/5DjPb2v9E4sFsqvF4AGeB8gXwATpAj+m9dR3IM+hq8Wc
VqMrxBwvqi2yEH3e1Gw0H/iI5gqvpPHB973dMZ7fBXuAI5H18AcS+x591wvg
aORJ+Bj/Xn1LXfAgchZ+CHyJdVwA78Zv7dYzfA94BPlQNgbOTW28+cw3oNuO
1Evs+7UO8+H7+I598KnwMonxvejWw0/4mHt9rfX9ig/fIbcg/4vN3q7l/Tx+
a6NiHfjP2Gzs09hitGL1SMUY3tWNLObIfsrDe4F9kNIeJ7/ymHCr1iW2eNIb
HCubgk+J7b1ih+x+KM81wVGxxUTFwPPMZw2/cQc8Ti2eXfA53++xUTGyjeIi
vK3HyZLwJLXvU/vPhe5f8rPXkG99bq3ocyfYWmuF9IBPB7cxziB4kdRiTkP4
WrA12DIyux/Du8XgWdou510z+EpwS2IxtmRi8Vc2twoeaH87/Hatcda4dIcT
20fZ9WaPOYpJe2LbC+2j7FTxcir4D32D23Bb//aemrPnJuWoJ5EW8C3gXGQ0
/BH5f2q+UCK1Nvoe+e1+9xf5zWeKnR5/7pX/av6KH7xbCM8PdsUWb1N+Q/88
Ml/rrxiA3I3+Ad7XUE5GXzUx+5addwU78+4mdM/Q7075PPobwELIs/ACYBFk
Ovxm+VDW4lgx+m6AT2JerRijC5JVH3Q9g63Li/B2tCsB74GuaGI+K9/tznMx
nl+gzXnG6BdZruyPPkfxBn35xL6louqQ1ObVifdNg+XCkuiawH+EH6T9T+Ap
2t9Bu9t9/reCLWg3NbI2ZZ1LVw6ZEdm6dWCcA7HtRdHU8tou9Pnkh/DLwIG0
aQOeRJ8fXpL2f+TC7oPlpP3o3wV30P462vUKVie9jP6Q58r9nvsUx/eh/7fy
BPp/xZYXlR//Ay5ERkZWD5UP5qvraV8/tTzWHF3d1OqoeqnVBKoNTsQ2V835
8sRqqgPwBrT5K89j3PaqBbPvnby/jnddtZ7oagez0TvQVYAXgf/KN9ai72r6
1gQrop8Rm+9UCuZvmxlnMVJQPoGuMrJK/oduN/Ks20kj+vyFMVoG+5aHGLOh
7JTnYbHVOaWD5b+19Pswtv163+PA47HVJ+VTy++1UrNJ1Q73Bcuvsk/VMQfQ
b4JXpk2V1PJs1dTqk66Ka2CRYLWpfKqAxoVfkVotNFD+i74Q+pqx5dkaqdnq
XnhOav4i3/k2thj1tfK411hqc4v2H30K1g9WZ+ehXw+waWR15I+sbz4wr3+X
6qa68CeyVofWg5/xGKKYdtjjktb0F/rWjmyPVO9Ngv8M/w3Jo3ySy/ZFNcl/
4eM1P8XL2GqecfC7+c2tWYupNfmtMmCByGoU7d1Y+J20KZ7aHEqDeWPLO7NV
n8RWf1bT3vOue2S+qTEV3xTnVGtpPbV/yo+K1bvlK75fW2Pzv0nuI1qT3PCr
UpPcnh9ae45oAG5i/CXKPcFqJtVODcErU2tztddCTRTHwExqeecysCDSKrJ6
409+K29kvqx9qQVfoW+JbQ1LgEdjq0NUI16fWp7Npjauxpf9f8y7B9yuKvua
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
htT/ffS9+n/S/wEkRq7N
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmHkcl1MWxn/DaxnL3BczvX7jh0KJ0l7SrmjRokUqhfbSXiSlhVZpL9Fi
y5YYZZuoLKEsZcm+DcZgmPUzi20MZp6v5/xxP+953nvf5d57znOec6sNHt9z
3H6lUmnjz0qlTNeLK6XSkXmptEigZ1Eq3SR7h+zX1UbKvkT9HXS9T/gS9Y8S
7iL8nvAo4dHCZwmvER4qPEa4h/BjwqOFr5G9QG2h2rVqI9TfUNfV6h+o/lrC
Fya9Q/gQ4drCFwmfK3yY8KnCHYWbCn9TpVQ6Rfgc4XrCB6n/ZOEGwicJH1D4
Gw/Kfj7ztyeo/wJd7xbeWi6VGglP0/gzhQ/X+MbC04XPFr5N/U2Yj3Ad4VuE
zxJ+UXiecGONP0dtq+z/6d5M9Z2ptkF2Z91roL42wtuFzxGuK9xa+H7hEcJ3
633VhVsI1xReIzw797/yz4tyrwlr00b2dI2dI7xH+A7hOcKnqVXX8w1070D1
Tdb9TbLvUZshu4P631H/AOG79P6Owu8Kvyh8hsYPF66rcXXUhsmeqXsPqO86
4VnCQ9RK7JXu9VXfwbLXy35C7XzZV6tdpXav8FpdB2t8Rdf59Gv8uIrHMX6s
cHvh1/X9vsJNhS9Se0j2Yt5T8T9PV7ss91yu1r0lum7XmH36/wbCU/V8B+Eq
evZN3XtE9pUaM1d9bwk/K7yRfxCuozZY40/TvaTx9YS7Cp8hfJTwFYXXa5bG
X6m+kcKPZvZxfH2a2kTZd+neFPV1FX5Zz49hT4gPfe9SxrOH6rtW7U6N34W/
4e/C/1bfbuG3NfZ+9W1Qe054rvpv1L2JsjvF8+whe4lP49snha/XVesie2Xh
WHuBmOFfdP2A/VLbS9zq3urwIb7PGrAWTwvPFp4nfLvwCuGd+vYC4aOF+8X/
zBa+TfiZGE8MtpTdPzk22Y/L1f+k7r2q51cIdxa+TXipxnbXuIaZ58D/nqfW
S62HWk+1JRq/Q+PH4d+FfRhfZs9eL3ssc2XOPMMcmesfhN9V/1LhbcL7hGvq
+ddkfyb772pv5L43AZw8drvuvcK/qv0GvlH/h/CB7OvU/7Su72d+P99Zpf6P
ZJ8S/RcWjsUbhJcJTxK+QXiQ8PKKOY/9GBqY97MfZwuPFF6l60rWS+1t3W8f
c+GbO2XvUfu97E9i/1bo+Y9lP8O/6PnLhDcI7+Y9Fa8xaz08cOvC82NNmO98
4ceFjxVeLFzk9r2X1B6V/XBubhqvdnvy+sAF++IdD+bmlxfUHsj9vr2ZfRhf
fkT3tsLnao+rVdO9E2LPvq7i5/H9Z4OjGMPa8488203j/6HxFwm307svFR6g
+72ExwnvY79iTV6Fgwr/Pz66INb7VuIjd+4ZTgwGF8E1vdUOIJZ1rxH5JLgH
zuoq+3z1z9b3ZzA/+dOQ3Ou7UW1w7hyF/WBy7uql9p3sabrXQn3nCe+fm/N3
6Pm++C/czzPC/YQz/jv4foDw4fCYcDfyhfBfNL6/cCvhLvigcJfgwz5qq2S3
1jMTK85Xf0z+/8f1/pL6q8s+nRxH7BGvyft5JnwqfAS5gf3W+G651+sWtbay
+6v/UF23CJ+r8RcIHyI8Gx/X+FfUrs/MeXBfP727e+b821f2B2pXZX6e98CX
y2RPkH1FxW1C5CC4dWpwOvloamEuwjfwkeWyW8FzmfMfebBNMt9MYg1kZ3qm
FXOTXUPvqq/riZljntgn55J7JwufpbEzhLvnnsN04bGyx+AbatvYY91bqeto
4cs19kv5bEfhqnpHVeGTdf92uFCtiey6kZv5x+ayf6hiXIf/qDhHkavgxClq
36v/1JgLuf1yfW+z8IfCUyKX8G/oo3ayBxX+XnXeQ27U9Z/CJwSf8Q+N1Wrk
/re12p9a6muo952g8S11rS18nNqJspvr3s3wLVjv/oVac+Jd9+qrr1lh7YMG
4n9akK/UdxlzVN/Tev+bmTUB2gD98TCxlFurPVV2PBFXQ4V/lVsrsqY1c/Pl
a5lzOrmdtSE/ky9YoysL24si36/RtZI5566NnPZibg4k15HDdgUXLQo+ezlz
voIT6CfXzcmde8lZ5LqmuXPZjMJctj63npkmvFN4WeiFx8r+f+YxsGLNu0T4
qNxamJgj9g5ir9CO6l/O/kR8wn+sO+v/VRVz2M2yL8zNbTzDszfqXm/1bdf7
vtb448kJZX/jqPC5HoX/gX9ZINxL+J2yufs43Vuovr3Ca5m/8Hjh58t+dy/h
scJPCF+TWYOhxXaXnW/aRz5Cky+IvUKr9yusBUaE/00ijjPzJzw6PmJ3U8T4
S2XjUbInV8wnh8m+n/govP5oh7tza4+5uf0fvoQ38bGftGiy723R+3oL3yPc
Snh9aH04Z5jsYzX+WLgCzab+xbq2J47Vlsi+R88fk9nn8f3NwiP5PjwiPE/X
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
FL2Cr/8fwDlrEQ==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtlnlQVlUYh6/21dSkfjfH+OaTLxPMjUVRAlwQBUVAJyXQckGRVUxFRBRR
EXGjzCS1JE0FREGiXHIvM3NJc0lTcylbbG9q2iYrte35zbl/PHPe93fes917
zntOQOa0lPzmlmVVwN3wnteyUl2WNQ9SbMua6rOsy2hbsavhBHq5x7LSscfD
BNiENpyyAn0b5XY4hbYIvwhynbh1aDPwB7gta7raUD4Gw+BlxoilLIBo6toQ
9yJae/xCSEDzR1uHFo7fG2LQXGir4ST9Z0ID2vP4rWEiMZMgD7qzjkq0o8Qc
g6+IS8NfIA27Hq0RrtD/GahGq4FRaNNoex6tDLsYZkE52kransDOgY+IXYXf
SNw6xlsPI9AeQTuCFkrMIbiAthwtHpZit1dbrQd/IGUcDIIo6uIpvejJ2KOx
c+EB/IfgaewKyKHOh1/PGGnYC9AWwhb8hcyxF/33hjq4hNaH8oi+EeUKqAQ3
7UPR8mk3FWqIG4a+3PmvSTDENmvRmvYRkw4t8D0wE7sI+lP3IP69EI6djBYI
N/0sKwRtL/YexVLXGb8H80vVd4JMaIVWy9jTsHtBMHF/0HYj2lhnn2i/hNHO
z2P2hPbGDNhEzGL9G7Q7+C2xW8G/tO+m/w+dqfsPvxltw/BDoSOahX8HPUhj
QhDa3/h/wSLsTmoLVYxxG60LdlfNhbpb8plPAv5gSNS/J64TfVZjL4Fs4jri
L2M+z8Aa+BCtijKQthHEPAo9YS1tWxIbS30G/ni4H/9hWIFd6TZnsx2+DXHY
ORoDqmnbDW0/9gEopi5U31l7HP8YpKAFe8ye0d55Fm0ZNNC2Doqx58IczYm5
bUYrxV4MA4lvS7tUqMDuyfw7wCj8QFjrNv2p3wD8EJ/ZJ0/iR7jMOvTf9f9r
0Guhif6b00cW2uf4FnYz+AL7Bnym+Tl1d9E2ijISAtCa4xczxhjix0Kh/j/a
XLQFOqMwA2brO0Embb6n7UWdL/xdjH0O+zRMoG4A2lDa/qy8gV8ArxLzJ/+4
l86y9gus0V7zmbOjM7RF/xPtBdp/SdxZ/DNwDe2k1+TRezQP6kZqHtAXPxrq
0bLwn9C5xm8L/spl9N8f7SfG+xF+gCFoq+A49e/COxpfc4YS+rlMzG1Iwp+j
70D9PCiFEtoFoU0m7gIxv8A+5raLcjfabsqd8Dr0JW4H2tfY38Be4vqhfYv9
HZRTF42fAZuxw+i/NTyOf47Y+dgr4aruEbRCxh6Jvx5/Axz1mjVr7QPRBykn
oz3lM3lG+Wao1oh2ENpg+8FzupN0x6A1MI8rcFV3A+2maL86OTPPyfv6RvpW
WfApdYcp//EzZ15nPwReoq8RWguaTf1ZtAiPOQuzsGdDic6mz9wpkS5zNpXz
wtFinHwR7JxhneUDtL1J6bZNv+p/D9p1t8lJyk1pmjP6RtXb5vuc8pq4j4n7
BLZS14eYKT7zX/R/knUH6xs7+bbIOas6s8orO9FeoewG3WEHsW9Sd59t7oeu
9DcOP81t+ohHK9MZ1Rl2zp7OYBZjNuk+0BmgfA22aa/Q3weUB8Gful8pt6M1
qoQdmpfP5OwxzjgaLxgt12PulDj6j7XNPjjkNfs9EhZTF+kx9+9o/HG2+T76
TmX6Vs4bRPe17u0l0GSb9Wrd87XXINu5k6+jTcd/i/68To5QrihgLqU6S9ir
tW+dbzpR+5Y2UTqrOjO2yWu5aOkuk8/jaJcDIdRddJl7Pdd5W1xzmTH1JliN
NhPtEn6ebeLHepz3lW3+udaW7zFvIr2NYtDCIR3/tNe8PTKgSrkIrQucx67T
fec2uSkB7Rb2ZOhB3WD84T6TO5VDf4f9XvMG0FtA9/9hZ43H0eMp37dN3lL+
0ttOb7xatBqtkZgcvdmw+9km72fjv43eDv835U+0N/A3QJL+PxSiJert4jG5
fSmxLWC4x7y/bjh58hych2InHygnJsIk/P8BaSZkZQ==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt0LsrxWEcwOE3iUwMSqcUyqVMZFQKWTApZKFsHJeJXDIY5BLJLWYhAwO5
DBwORQxuJ0X5D5T8A5TndAxP79v39/nd3qLuwZaBtBBCLhkcRUJ4zg4hQTQ9
hCdrQ34I43khzOeE0Ec/C7xoH4naV7Kl77EO6Tv0JfZllFJMXLvk2pX9h/ba
2syteZX+3rtuuOWOQ/MJ81XNNDOskTAvNN/QLLPEOrvm7+xrYpxzxpy2zXtj
mhbv/bROsq29pECzl/yf9NS9s9qHSOpfRhlhLLn3nAou3BvnMjv1zANtlnmr
fR31NJFpduVauXs76aI9eX7mjfxqVlnhh7P/8+zVDLLoe6qtw75nVn9sf8Ip
X/oas6n81NnGtDvWTV6TZ8CO5p03vqnV/wHqcE0B
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 6], 
         RGBColor[0.772079, 0.431554, 0.102387], Lighting -> {{"Ambient", 
            RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
           "Directional", 
            RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            GrayLevel[0.3], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxFm3fYFUXSxS/hXhBF3pm5cIMDiJhAEAQVFURUxAQGTOgaMa1Z17SGNa+6
pnXVFcU1gBFzAFExg5gTQVQkqCBZRUEk+p2fp57n+2OePtO3p6enu6vqVFXf
DkPPGnxm40KhMKhpodBE5bb1QuHkUqGwa7VQuC8rFK4qFgoXJoXCYN2fJzy/
Uig0UpuvVNe0baGwTPczhJsI36H2w9TmVd0fpPZXCzdW+YDqzxYupYXCCOHb
hH/T+0YJ/0d4PdU/KHyD8EN6dqTwUcKjhE/XWIaU3P5h1Z+v+n+ofnuN4VHd
l/TeJ1WepjaprkeEb1Gbuvpcp3YnqO5O1d2t6xTVN1X9pno20f16enasytXq
+3zVvyo8UG0uEh4n3FT478KvCzcXvkR4feFU+FLhQ/RtBeGtVL6p+haMTfUP
Ce8sPFzvf0m4KHyB6l8RbiK8tKFQuCfGw9wNF74i5udl4UbMufBdwtfEmJmH
d2IunlL9cNW3Sl3Hb2Vd7XS9XPL7XtRvS1X+rraPa41aCe+tcX6o+0z4Wv1+
mO67qv32KnuXtcaqX6n6aWrzjvB/hL8UbiN8u/AlattZeJKuL6LNbaqfKNxM
+A991/jo/3LVH6l+68LP6P3/oi/h01PfU/+syiFqs1Lz30XlO3q2peqvVJsJ
wvsKXyH8kXAn4euEr2a8umq6/171h6m8T/VzhTcSPkP4K+EZwncIfyO8ofBd
whtmnoc7hb/N3E8rlbN0zYxnt1bdG7r+UTKm/EK/zYz+71abTbR/Wqi+n8b8
neqnqL6odeylulnC7XXNU/0QlSPUfna8d7jwQuFu7HPha9V+G+HvdI0T/gRZ
KFr2kME99J4rVX6luq9ZUz27RnN1np49Q/VPq+6XppYN9v5oXXuWLVNFte1b
ttytUfudy5bH1cJ9ypbrVcLj9cyIkK9Bqr9X9c317H7C1wm3EB6r318Xrqrc
t+w9x37bJzB1u5Qt12vV57MqJ6r+34w5xtm65H39bskyM7DsPdxM/U+I9/N8
v7Jlf5362a1sOSqozSpdxwiPVf1q4V2FXxJeIXyE8GjhNcKbCr8s3ENzOE5l
C8n4WtX3Uf0ruv9DuAc6KvUYx8Q499P6dVE5RvUjQ87W6X5jrcGPKo9Tf/3L
1i2N1Ud71S8W7qj63cvWS40Yo+73Ft6m6n7GR1+7lq3f/mB+Ms/t5sI7lq0H
Vgh3ED6OvSa8WG02E35Y+EfhrYUfFe6qNn8TXiTcRfgs4YXCW5WtnxcI35q5
DTr6hZifv6m+rcbxkq5lTV1OKHo/PZ153bdVm+eEf1fd2chC7IHFwqnqd9Ez
K1WOZj3U5lzVj+Fd0efzwhuo/Tmq76ZnTxdeItw9xvaj8HZl67Rlwr3i25cj
p7oaqZ+zVLZX/Qmqn46sBZ6F3ha+TPhb4Y7CJwvPFt5M+AzkSHiHsnXpb6n3
NXtxra52qj8aOaK91maYfttZa7hN2TbrJ+ZHeCjzJtw51mK+8JYxzs81n5tH
++9V30m4mfr5Qfg3ffsjqn9BeKrwJsK3Cn8uPFn4FuEGPb++cKLy25ptypPS
gd9LbzYWnqNylq51msvZKuc2eJ6/U7mvntkOuVFZU58dhHsIv6Ln+6E/VG6L
DhLeXuWCaPOg3ttO+CGN8/bMOoT1Yt3maQwr1P8YPbu1njlE7bsltu+s3Z6a
p57C/8ls37cWPlx4ba49pzH9oWcXqJzR4O+dqXIbtblabRqr/Qz1/63q7lb7
6Q3eh+zHRoltZWOVaxus86aprOi3BuEmqi8knp9lDf+/Xxnzlw3en+zTrxq8
39h3wzKP+d3E88W8sU//qesfqn9N9fdXbOvvU/m/itvco/JuXW3RzyofqFgm
RqgcpauZnvufxr9Y37KP2ryluu00Lx01np30rS3V/7bCM1R+VPH+WaO2c3TV
9OyI3Gu9Prwmt73A7mB/9tN1eck28Wv9PlbPHit8lK7XAh8X+BVdfxEerfJg
lWei57Bl6Cg9207lpio305hq6nNbjbG18NFqO0/vPSb6oT/qXxVuqzZzMtss
7OAD+u1t9jP8S799rfI+PTta37UxslPzXmHPvFix7cKGYdu2rtpOdVDZV+PY
UXgzSl1bCfdOPCbGtqPev7vud1H9Fomfw87BCXjvdsytyvtTj40x/kX33VR/
BLKr+ulFj++7mvnDExrP0xXbllmq2yhxP9Mzjw35u1ffMkX3rdXm37r/WPgy
tanGvoI3/azyGD27E/OvcveqOca76jtXu+uFL0isB9GH8Ku2wfcuVv1xujoK
b6eyrvrNhZ/C/up+ucZ5RGJ5RU6Zo110v5/K/ipP1rUHcsdchf78Vc+eGH3S
9yGJbcHegVkD9uihuvYXPgwdI9nrqef7a573gCuj/1X+S9cOwqernKLvuU7l
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
MHkYYqn4qg+FneW7vtZ7plfsQ2BD8Wfv1LtOQTfouqlk27c45JF40LoG82Hy
IUuC190m3Dlz3oQcx1aZ+/9FuFPs2xPVdoXuB8Xew4axP8t690mh/9lvx8U+
uTQxbzg8vgvb1ifqiaUSUyV3dF3mtfi76q8NWYB3MX7W+n+JY6bERYmP7h82
kdgGnABuAG88KuSOnBe6mpjeJxXbRfQV/Ambge04JzGPYY91TcwDjokx/Gmz
hY9MHE+Eu8Jhz9Z1c8l7nlgkXBROCvffLWRgXtgp4o7EgvkWvgm+Ce9kvxLn
ZX+yT+dHG3QAsWBkHx1wkvBHsW/hx8jLTxXHLuGr8Nat1N9mJeuC01LnMvA1
4Bs3lixHxFXhyfBl4q3YDmwINmK+cLu6Y7JwYzgy+p+cAZwQbkaslZgr9gM7
AmdBZlgvuPb0wMQN8T8ZJ3E7uBd6AZ4GP4Onwc3WD9lhTdF96EDkZVb0w15A
xuD9xH7/9BFUtyy3HCKPcPMpIUeXZpZbMPx9cnAY/Iwh4Tfj1xLbPCJ850nB
W/BR8GWIB3ZRebB+m6j6Tio/CU5yA7orMbeHP1cT83/ixK2jnrjUrw3m+fih
czXWw9Ef6meDxP4mMURyk8gUskVuEllD5tYLfkKe6q6Izz6ote6m51+LuNkO
uroLH62yeVtzL9aO2Bncnlwc/eALkHNbrH6uT52b+zKx7JB/ODWxT01M78nE
c44ufCLx2qGbZ+vZa3U/SX1/0WBZw8fcObUt65M6jjQpc1yuZeK5Ys7Is+LL
4NO0ivrPMusIdEWmco6eWY0OUP/NE3MwcpvkjFlHdOqdajO1wXFL8pTkK8lt
rmywn07OFl8d/KjKmTXb1eF6bm7NfnR3jbFXxB6JQX4Wa3qT+nuk4lg08Wxi
N/jOq1SuCZ+LXCgxbvrnncR64CHEFYbFs/RBDJyYAPlP4gY9kWON4ccG54v3
17csjvgk+WS+l3eR24SH47cRo/5v6rwn+U/2GzEN8rfP6bdbdP97zXlr9Dbx
DHLS9AkfIXbRXeWCeC+ch1z0/BgDueufGrzfyI0Tl2eNyI0Tb8WPIR8+O/IX
6HvmgRgIudybY12wkw/mzhkQb2+nMdzIfk6dT4SPEfPrFPU5Ywx9SL5ocmK9
R75riZ5/X/dvqb+1iTlfNzhFxXsM3tQ17GMblc/kHgcxq6mJ9SQ5tOeKjk8R
97mjaF5H3O3awE1Sj4PxMN73EutD8k6PR/x0qfrcNLXvSeyuleTqAeRdY1ik
+wuLjo+9GeP/NbFM4cuQsxoXskMcDt0FB4b/bqzrbuGKyu66RrB/UtskbNM0
lR8k9tOJ101MrIfJlU1DXwh/ofJZXfcLP5M4Jok+mxB8F967J7mdxHoVbnKf
8KFF54Nuj3lpnDomDK+AT3VIzDfgRC9rHs6HJ2oefhe+OPW5iD8SxwTI+/2Y
W999X3PMC/0JNxyT2B49r/IhtdkycX6BmCd2k7zcyMTcEn5K/B070jrq4a5w
2L8mtqfk+rCh+Cjk6JAf9jCxpmdzx8onVryO2E1yfc/HGMjvfZyYz3/K96j9
a6m56M/Cj6TO7RaC8xCn/0n196TWFcgZ6zI21gJbg1/FHOIzsK/wwYnbcG6C
McMZ4NSc+UDu8DmaaD1mM1e546HERatV537IAX3LXtJv49GBNeczsCPEkF5V
/XPEcGqOjePLk4esVZ0zyskNVR2b/TZ3von9f6TKe3LzBmIv16iciiyofD33
3l2nPt/BzwmZRd6QO/ysP89YFB1HvCp1TI/YHuctiBUQc/0mMYcktzwuNz8m
/jw2N9fH39wi9f4/EJ2t+vl6pqT6d9FN2Py6x88Y+PYDoz2+YxYclfMLY3L7
APienNvAPhKjeE31LyTO03GuBT1JDJgzMehtYgqcNcEOEhu7P+zTU1qHvVU/
qugcCfkz8miN1f9uzJ1wz9S5tnFF5942qLq+QeVj6meHxLnavqn3yUB4BP6S
8CDeX3U5K7duOUPtf6m5nnh+We86N3GcYYDaTc8d619b856jT/pG76B/0rpt
FTaLOMqXar9T6voDVD6l+v/qGpY7D01u9DDVX6K639XfktxndzbizFduHdS8
ak5Dn8RdEv3WS/ff6PfnK+YqcIwNVd8Zm6T6XVVezrqn3ne8cw/6rXqu4Dnt
9b4ti/bjyJ3DkYiVLg5eRByUWAP8cmjq/QP/WFXz/rlc+DO9f0nNeQHOYrAH
yJ+9T/xD+ODE+ZpzwhYTG1is+5t4r8pZ5NGR34pzBvCc9yo+P4FfgF/OPlyi
fprXnY+BK+IfD02c2yNXNDTGeWjq/BE+AmPoHPwQnsiZM/x9/H5yzey318hB
5z4z1Lvu8aL38K0HJ/bj9k+c/2NsnA0ZlNgf2QddmNhPIb7yfO4c21cVn+eA
bxAP+qlm3XssZ67Yi0Xrw90Sz9uuifOS7DHOoYyNOXlJ5VO586PMySe5zxhx
TgmM7K1f9zfwLQtqjpuRIyBX8Lrquwu/ofJTtS+zBmp/QnAzzpTNjLME3fXc
h7ntIrmhz3Pnjb6h78T5evLdb+fOnSODyBb9b8U+yG3jl2InhfsIL6yZS+dq
s5PKbRLHMzmT9VFund6ibl+O9eIMF2csiONxngJdNE/3xbr9WHgO8Zit4r2d
E9uu/kXntV+omEPCJSfl5jSlqu0mfi7n1zhDQ1yI+NDU+Hb8g80Trws59Ml6
tgM8SM+2hB8WrW+oI8fWSGW/kC/k7GRdnxZ9jg4/4pDUtoP8NL4/eQjileg6
8gPvhR/4rsof1P6I1DYiq5szrMc5vrrPNsIPz4n9Rv64U8ln18gNz8xty+dW
rP8/LzpfTK6ZfYVckusgr0F+g1wWOS32R8vgTpwLI+aKHuBMwzRyrvg5Vede
OaM0VXW3hi9AfKuj6u4rWgdx5vCKks8hfFlxG/Z/Zz3bk7MHqt9L37lDyWdA
2YOci9tA5XfqdyW6VO13SB1H5UwcNvLJ0A/MBXOCDlxec776af2+Z+jwvZAz
tburaFsJL0XHvq1yma6TkKnEa8bawS3xxX7OLI/kcI9X/XnwrsRxJOJJ5FyJ
PRKD7Bm2pkfqcw7EjckHFtv6jEL/qmPjF+kb2xNDS53v42wgNh0fH18fPU0u
k/OcnAV9X88uyh0fJB5AjJA15IzEtKLjOPiexMNap+aE8BlimMSsiJ/tFPMG
Rx0YeQTOlxLXIm5BvK1n4lgGOexPg2uRUyeOx9oTd2+ra2TR9mOvmNv9gmtw
ppBzj/jHL+p+VWJuyng2YW5i3mrC+4a9xs7ic+IXTEjMV7BB8JdddD2BXk2t
Ax8P27plap+A8wiDg2NzBpDn2A/YT+Ti46LnmbgWsZQ34Fp1x14OrVoeyfu+
pfot6j6jS3xgfm7d16buM52cO/qBPmI/s6/Hx/7hXYN1jREekvrsHmeiONOH
vL6k+xVq27JufwFdcUjwEGxQl9Q2rn1qPgevY70ZE2N7O3PekPPAH2Q+14Qv
iU95dXA59AN8g/mCh3yXOHfA+UfOyXJuFo5F7pccMM8TJ0S3oGPgAw8WrQNH
4vc2dYyCvDH5Y87B7qO+HyvaT2kSMoIfVtEzB6Xmw/BYzif8VvFcMCf8xpmK
cfEtg2NOpic+e4bvydnSR8J3YG9slDp+yNlMMLqRM6fV2Hv4XPiG7AH2AjkJ
eCb+GTwWv5Jzr5yZ4SxKim6pOk6C3ZmjNpeiFxPPFfL7VmL/YnjovJlqd6/u
R+u7ltWcK/+04rMonD2ZkFsX4Zv0Ts1/z0UWVV6ZOBbK+Va4JeeusK0z4734
D8R1kYUZFfsU+A3jc3NIuCLnFgeEPufMBWPgnM575FKrtikbVs13LqZ9Yt8V
H3Y5a1T1OfSPc/u86KQvhCfrfQOK9os/DN+Ks5aFun3hXyo+U4UdJN7P+Tp4
B+eRpoWe/D4xpyM2y9neOWp/QdH29+fE5xk4t76uYr5KLOjBxHPIGWf8Btov
SKzf0fMtUscNaM9znOkktsA53DXwwqL1P+PEb34/4lic/bsmcRyBdW+eWv8z
b29zTrBuX3tFxfwMnsZZomK8l/PXC2I8C2Pt4GmcRx6gZw9i/zOuxLEy8mEb
pvblySsh2+xnODnnEoi5cTYWDn1t6KOHc5+3g3cRJyG+QXwEmzY69OSo3Gc9
4XKrY5+wjuxD5KJR1efEODuF33GjyoeLPkfE2TLOL52U+BwPviR+45xYL+wb
Z5NuLZqnMScLYw7vijFztvf1xH43552nxF7ijPBKPdO1aF/vuVhf1pk5ZW7x
+1YJL1XdB+Ebscc4U7e6YrmAk2N/sbET1Wb30KX9U78Xn52zyfA44hvEORrC
PmIniWHA8zlXzv9HmH/WAb2KbZmSO85JDJwzyOhqzmvtmJovIaNf57bdxCUe
VjkrZIf9TGwKLvBG7rUmx8F59kdzy+GPmr/t1cdDMeaLEscHOP/+f5vR5m4=

           "]], 
          Polygon3DBox[CompressedData["
1:eJwtm3W8FVUXhg/IOSqg3pm5es69HkQUARNFARFbxCLEDizs+gzs7u4AAxRF
UDEQOzCwuwtREFtBRVEJQb7nYe0/9u/sd3bMzJ69V7xrnQ5Djtnpfy1LpdLQ
JUqlVvz2bSyVtqZ0zkulLpQTslLpwHKpdE2lVBpclErDuTaMsgX1LSmDaD+X
9tMpb1LvzdiNKL9Tn0U5mXIebdsxfh/6r1wrlc6g/ib1GfVSqcJvmXIvZRzl
AfofQP9d6XMWuDX3WprShtKW8mWVZ6F9OP0+YPyRXFsJ/AnlAuojGTOCMpf6
PEqVcidtV1BWpr4+99+d+iH0mc34tcDzePGe4Jng3vxuRLmcvldQvm3i/vT/
iGu/0b4c/ceAL+f+X4D34/q+lMHgfSj7M+YJ2v9H2Yd6S/qfT72R+nv0/5Hn
PxL8B/gt8MqM/Q/8Cu+7Peu2ZnOptC3XMkpH6q/T5yzmPZE+//IsMxl/JfUO
jP+IthWZ/1Hw3uAfwW0Ycyx4U+Z6F/wxZRXabuBaW9r6Me8OlDu5NpqSc20U
bb2of07fo/wFr0EZQL8h4AMoT4MP5HcN7vcK9YOo/0T/U+lzCuV98AeU+6hf
SPuRvM/91Hej7Eq5j7b7XU/e5TTaT6V8Rv1hrk2g7EWfvSlrUUp+K8av7XfM
Ym+5x+ZQX4/7b0d9R9pmcf9RaW1uosygnjNXRtmG99+WsiT9L6dtda59SP+u
/N4IfoCykP7/NvBO3OtESjfmnJTFXM75DfXhXBtG+ZNxsyn/VONZdqTtZebr
w/qtz30WgVtTf5w+j+WxJ9wbbbn/XfTvwbVP6X8P1+6mLEFp5bzMd3J69ldp
P4Fruzi/z0T9RsY1gTcALwNuB6675yntU3Fvu8dte5t53nKdeKZulCMYczjl
JdpepozIYu5bKG1oP5K23xm7Lfgo6q9R3gV3Ab/uPuSdrgU3MPYznm8Wv7+7
n3y2IvaN++c2ymrUf2A9F3KeXgKfAF7A/c6iXq7Enl+K9bgd/BDXJzPf0czx
D3gg7f/zWfM4bz7DedR/Y32O8XzT/336n8u1ZcCn0f9QzxelBWUJyvVcX6ox
5vP9lqa+AteXz2NPrs3vLJ6vQn0uz/g59X5cGwseR9khD7mifLmEMox6i1rU
68qpdiHP9gIfxvy3ca3CmHN8H/Ao8FLg68D3g29XrtH/UvAE8J3gW8BHgA8H
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
y3wZ96oxB2MPQ4uIHRlDehs8pIjYgDGCp8CnFRHrcn5jWecWwd3L4RuL1waV
35eT0zZVV8s1y9HK1RoTNTZqjoK5DcZodkvjjQWY82FswDk+zyNGaqzUnAFz
B04vIvdC/9LYmbEa+S1jfsZsjImOTv3NTTCfQ39NTt1YozlC5tKYU/N6HrlQ
cq1yruZELZ3ajRGYL2E80limOQTG/83ZODjNJ1dvTon8qBy8XLwxVf0tcxb+
yiOnRn9Mzt7Yhfk85mKYo/RqHt/Qb+M3Uo52qYW/qd/Zpl3EGtyr7ll9QfeE
e8M9aYxnO8qdlci5M/duXtqP+g/GX5QvA6iP897tIpcjqwTHK9drjpS5Utr/
RRG5hjek8+G9rymCqzGGba6KOS6OdY7WRcSo90nrY26JOUET0vsaqzCnRz7V
GEeL5FOMTPtBX8OcnvFp/cw9MYfo8NTf2Ii2mPFpczrM7bgDfEclYkTGisxR
0r825rEgj5yMsWl/mQtjTPDadF4X54sUEWvQ3zMXrUviN30//WNj5vK15rCY
y2LM+YCEzc0xBj4kPY+5KuZ7Gbs0Jmdszpyvgek8Gc80/+0Kx4LfycOmuxJ8
bBG2Xpvkm6zpeiGH2yl7s/BrzW28g/qe5TizxyUsV+MZ9awa79QW9kx4NtYG
b1wOmaBskKP0/HkOtZ3XysL30EfXV9cfND9RH1RfVF9z2XLkh+hzfpd8NzkY
uRh9NeMPcmhyafq3cpv67Nr/5nPI98jRyNX82RDtcnhyeb+mdv1d8yGNB5n7
Il/Ztghb3viL/qw2vfHN98uxRnMaIp/I/aw/o19jfMf4x9mVyO/cObWrU9Qt
crzKa+W2vvkZWZwNz4iy+4y0Xsp8Zf854L3LIfOGpPn0JZR5yj75cnNj1VPm
gi72mWnvXwmueazcaBZy+tQ0X8dyyGRl8x4Jb66MKSJ/0e/rHjE/sjELXacO
UZcYX3cvaVPod2hjKSuU6/o62tDa0uawyt9OZo3ycnAcch0zGoIPkWPrnNbf
XNTXKAPZ+7fJYbQKn1zffJUsYpXy7ebtamMvov2XhrC9a0XkxmiPm/sxI9nq
cjhyOX5Dv6UcdCvmap3F/Rf7i0XwnXKjfjPjca7lWuXQ+a6peR/awsp0ZfuY
9D3Uea6pZ8N4mpyPZ8S4m/txsf9aRM6r+0m+2Nymx8BPVsJfMP9KjsX8IjkQ
9/vBeXDfco5yj8bwnNO5ehWRL+TausZyveen/SiHJZc1N623/rF+spy8vpic
sVy9Pozro88j9/9zQ6ynnKnc6e15cG1yaqPy4IS0neRY9b/lQORCjAEaa8mz
4KfkkOWSlRcdysFZy12vkEV+kxyrXKv5YF+Vg5OWm7bPFmkd2yX+Tm5Mjk+u
z5ilsUv9d/14OT65Pt9HLtyYhHvEvWGs4sUiclfbliMerM5Sj6pP1WXmJJg7
oD1kLoKcifHw/bLgUvQVtd+MQekzmnPjt/ab35mFj+BZ90xrH8vhyA0ekge3
Y46CskcZo6x5wXOXnmdeQ+TkeHYHp/kmc//GcvhY+lqvgjdNtqi+kedL7vTE
LHwb/UFjHfpY+lrm7HiWPcOeZX0c594lC9+nRXrf/uke5gxp3+nPy6/LWZmv
q4+rrytnNLwS9oZckhyWsszzIbclZ6MtJicll6M/7FlafKZq4RN7FuV05WPk
RN9K8tm49MAicoO0r8ck3s/cN/eIPrk5XOZymaO8sCFyfrZP3+PcLHLA3Ivu
yQUNkaPnWfHMyOkbs1aXqFNOzyLHTl2hzpD3M6dwlfR9HP9fU/he+tz63pdl
ESuSz5LXMsdJWaBMMF/iCdZgt3L4d9Oq4YOpG9QR+mbmkGgvmlN3XxY5ANoX
+qfmKpsTqn0pP2s+w4KmiP3ps+m7mT9mfEj+SR7KnBpza/ZM9qE5qtqT8rmH
ZZFzqz1uvNd4rjm02odnpvubo6v9IX9kPHhRU8Te9Bn1Hc3JHZye33iNHItc
i5yE3ITxn/vL8Z8I/W//I2HuvhyEXIQ5Ov3S+bg+C59S31Kf/9Hka24AHkTZ
nfrsIrglczrM7dBm1HaU7zJHeU5TvNupWeQPynFuUw7OQO5gVrJfXA991Of1
CdUPrls9cpS0d7SntWefrMb9fQ59397JV5UvlTftmnx7Yy63ZZGDqq2hzaG/
+Fey1/ZN621Oj/6eOVfGv+Vs1U3qKLnctRK3oP+qH2u+v7aUMlpZbY6ettDG
aT/fwvO1K4fPqu9qTvrFqV3bSa55cT5FOf6foK88B3ndGTyV+fetha9tTEK+
9Oem4Jr1mfWdzbE111YdZ7zNM+hZVEepV+TqlOXKdOOJj1djfu+jbz66Gv83
+CHpW3NO1RXqjG8aIneuVyXluGhLZBF76ZLeyRiIsRD72HdGEbmX3k9eXc7d
s/ltQ+h7uQVtSW1KOYbfwJen+c2lkR/XH9Av8P8C5gS3T/KnmvS7/zdaIWE5
7qYkT+S+5d5PSfJQ++2zJH/Uwdfl8Q39lnIiciPmMKvL1Gk1z0SST+ac+v8I
9Y25R16zzZzES5N+ML/c77NuWm/5EL+L38dv1pb6L9zv71bBocil+P+elysR
f/b/FK6Xa2lMy3xVc9r3TPLF/yZoM2k7tXD/NURO8tAkT43/+p8EbSF1vv/H
eLgI20AbQdtMjkXu5ZOG4F7UUeoq+U95UONrfivjbdoD/melSxqvf/BFU8ja
T9N4c6C1tZdIz2MO7sS0/+VLzKnS39HG0NbwPwv6CvoMxgfNDVLXq/O11/4P
WEWeZA==
           "]], 
          Polygon3DBox[CompressedData["
1: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
+cafo7WwXhbcejT3HdrHPmOc5zkDeWf/A7DB+ds=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlzj0vg2EUBuBbpbY2tBI0NdTGymRgajAgwWrQMJEK/0H8AR+/QCTMYrUa
JSYsYiURHwkS4hLDlec89znPed9Ga3OhXUhSoou7vmS/JxljlD0+B5Lx/qRc
TQ4qySE36mXZk17TzDZb7HJtR0Vvytw0M+zIr+RFecO9gwJDlGq+LR9W1xlk
hLL8x/4Lb19545EPe77l5+oJc6fFZNJ5W0+O9fI3252888WR7JI1+QotVnm2
o7f2/3aeOWap+pcHuxbVZ3YvOe/Nd5p98WZD3aapt+48MfsLKRwstw==
           "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0b8rxGEcwPHn/LzzIwaXH5tkYrGY6Iork9TRXUSJTTkLsYgsNhMZlInF
P2CVEiYySXEuXSaDwWAgr6cM73u/v5/n2/f5fp/rXljJFRMhhGVMtYUwyHVY
6whhoD6EjN4yH+ddnudRnOohTiRDuNY7+oa3+Zav+BIf+ok/UYWUzSrxHrxh
EyVc4BgvqMWw5+5zhg+4wCdcxlfcN76nn1eu2GOdJ9zzrPd0Tpf0WfwuPcLn
cU+zAk+blXVWT/rOPB+5HuND1zW84Qyyuk8vWWvnH4ezqDv1r7Yc0pg3a+YH
s7xO6Uc9qxv1Pd5RjW/coQlz1ht4hlu5BUXdy8nY3iFtk554PuZdvMr9///X
H1uJNaU=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/G3I9zJ7zvuEF2cTTLorGRQCmFRDE4yOO5fuJAo2SwmVpMU
s7JKGUz8F7Jg8LgMr57P9/vz/Xz6vD/ffKmyvF8XEWX5TkfMKLrkMRuxkIyY
54VMxBqOYRkXZZ7PYV9Kj5/zPTzDfXzFF7ngnziSiGjDDUzKG6/ae4rPciOr
6s7aZaxfYQKvsQFvsRknpZWvY5OcOP9QXbK3yi/5Nj/gD3yHL+CTHOtt4a7e
EV/iFTOWcFq9gnfqjtr35t/kRd5pbRgH1Sle4EO8G/PSqJfDr+aIX2+Y4T88
od/LP6TFXduxiO+YlXrrPbV5cQD7JcMnMC2pXMR9S8Q4n9Ufrb03TtX9/6s/
rRorTg==
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrh2EYh/HbzyBhpChFUsoh5/Pyc0wm/gLJ+RyLxIqJ2aQUymSREJGY
DCaDiWQQCwsbnzJ8u677e7+97/P0Fg7O9s+kRMSUHGVHbCUixiU/N6IgM2KH
P+sP8Q2vcU/ScyK28cszpfyVl+ELlmNJakSx9PEabJRhu1aslzIZyIp40hXx
FKk2j5kr8Bsr8Qd7MM2+TppkSNeCtdLj/Y/mpGeS/JN38HaeZd/Fd3V5vFt3
ynt1nXyftzn/Cf662wGumUexwP1r+Aa/s1vC94yIG77MP/gELsqVbg4vdcd8
it/ycz7Dq327QUZ4M1bJLL+wn8YzXMB5uefrOCk5zpDqDKs84bwr+GC/mfj/
V39nXDbP
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0csrhFEYgPGXkQ3jPsrS/yH3e2wkkkQjoUSRIgqxYslWUcrC1kJK/gAh
yspK0pAlkeTyk8XT85z3nO/M9zWV6amuyayImEBvecRMIqIB6YqIm2TEol41
X+cN3uZlHOh53i+IONen+oJP+JKzcyJ+9ItO6hLUWJdzEXKRKow4NvvCLTLu
qud7vuIHvuZvvuNCz5SiWqe4AM/uP7R+c+Zen+kP/aAz+lMv8SuezLY4/G5G
r+h337jJu9ZrXOV8HY/4/kd7Y3rSXjfvWI/qnr/zupG7MGzWzrNmfbpZL+hB
3arzvWcxanUZ56FND9lv4QHu5A5M6zQ3od87HLlnSO+Z9/Icjyf+/6tf2L88
MQ==
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrhWEcwPHn6BhMziD323EtoWOVySnbWcgplwwycjD5CyTERC5RFinn
JCWTyWqwShks7vdRBj4nw7fv9/m97/u8t/j4dH8mEkKYxHdpCKloCDU4qAhh
qTiEtG4uC2GCO3iOh5HSAzwaC2Fab+kZ3uBZvuFrrOsHfkUFPvGMW1y4do2v
cIod62re5Cxvc45P+Iyf8IZyfOARK/Zf5axz5vW+PtIL+lwf6yG+xLJZJn8v
s0U9onPecYqT1mP8ZV3Fh95/V/fqmGOdPGhdpBM6rWu5HYVmTdxm9uMb1uuE
jpg36Hu8oBLvuEMjChyP869rWrkFJWY9XIc9zzBln27dZ96V34OT0f9/9QcL
3Dqa
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/H3FZcocc4d5QbTlVIKZUBSokzMMpgUTvgDTJTJZJBBpBik
5FcZLPgTlE0pKZvfv+Uhw6vn8/3jPp/v93v1I5ODhURETMlyNiJfHPFaFHFb
G9FQGdGkPtHvxHMcwBa54o14b+eDz/BPnMIvPMQ9yddEFCUjhuXRuUdYI8dm
Q6mIAu5KVm8RDzAt4/Jifx9TMiZz5lU4jz1+u4QZ9YQ82D3Easm4c9Ssw045
n+VdvIKv8G7ejFuS1uvDXr0Ub+X93qkXL7xHGy6on51/55u08zq9bbMSDPUm
L+UJ/mYvyTf0fvhVhTv5B7/ha/yLn9nJedYnPo2n6m++bv6Jq5j4O192eAbf
9a89Q5V70upL/bK/74y54v//7xdryz1F
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{5204, 5205, 6751, 5234, 6748, 6256, 5232, 6746, 6257, 6842,
          5223, 5221, 6740, 5222, 5246, 6263, 6753, 5245, 6754, 6264}], 
        Line3DBox[{5206, 5207, 6733, 6246, 5208, 6731, 5209, 5210}], 
        Line3DBox[{5212, 5211, 6732, 5214, 5213}], 
        Line3DBox[{5216, 6735, 6247, 6730, 6248, 5215, 6734, 6249, 5230}], 
        Line3DBox[{5219, 5218, 6737, 5217, 6741, 6244, 5202, 6738, 6250, 6736,
          6251, 5280, 6775, 5279, 5278}], 
        Line3DBox[{1790, 6317, 5360, 6314, 5201, 6729, 6313, 5359, 6318, 6255,
          6745, 5224, 6742, 5225, 6254}], 
        Line3DBox[{5226, 6253, 6749, 5235, 5227, 6743, 5228, 6747, 5233, 5231,
          5229, 6744, 6252, 6739, 5220, 6750, 6258, 5236}], 
        Line3DBox[{5247, 5248, 6760, 5244, 5243, 6781, 6271, 5260, 6780, 5274,
          5264, 6764, 6315, 6312, 5356, 6841, 5358, 5365, 5257, 5363, 6779, 
         6259, 6260, 6765, 6268, 6756, 5252, 6276, 6771, 5275}], 
        Line3DBox[{5255, 5256, 6773, 5276, 6817, 5282, 6280, 6777, 5283, 5281,
          6776, 5268, 5269, 6843, 6319, 5361, 6311, 6840, 5364, 6270, 5251, 
         6755, 6267, 5273, 6769, 6266, 5250, 6833, 5271, 6768, 5270, 5345}], 
        Line3DBox[{1943, 6273, 6763, 6272, 5272, 6770, 5258, 5253, 6757, 6269,
          6758, 6262, 5242, 6767, 5237, 6243, 6728, 5200, 6752, 5239, 5238, 
         6261}], 
        Line3DBox[{5285, 5240, 5241, 6761, 5261, 6778, 5284, 5326, 6810, 5266,
          6274, 6844, 5286, 6782, 6245, 5203, 6784, 5254, 5249, 6265, 6759, 
         5259, 6766, 5265, 5277, 6774, 6279, 6284, 6828, 6309, 5346, 6832, 
         5347}], 
        Line3DBox[{5319, 6806, 5318, 6294, 6800, 6293, 5293, 6788, 6282, 6803,
          6275, 5267, 6783, 5287, 5288, 6785, 6277, 6772, 6278, 5292, 5262, 
         6762, 5263, 6283, 6789, 5294, 6831, 5342, 6827, 6308, 5336, 5335, 
         6826, 5340, 2132}], 
        Line3DBox[{5320, 6296, 6802, 6297, 5316, 6295, 6805, 6288, 5310, 6801,
          5317, 6286, 6791, 5298, 6804, 5295, 6790, 5296, 5291, 6787, 6281, 
         5290, 6786, 5289, 5305, 6807, 5297, 6285, 6824, 6305, 6821, 5338, 
         6825, 6307, 5337, 6304, 6822, 5339, 5343}], 
        Line3DBox[{5321, 5322, 6835, 5314, 6797, 6291, 6836, 6316, 5362, 6320,
          6845, 5324, 5323, 5303, 6794, 5304, 6815, 5309, 5308, 6798, 6289, 
         5307, 5306, 6809, 6299, 6808, 6298, 5329, 6812, 5330, 6823, 6306, 
         6829, 5344, 6830, 6303, 5333, 6818, 5334, 5341}], 
        Line3DBox[{5349, 5325, 5299, 6792, 6793, 6287, 5348, 6834, 5301, 5302,
          6819, 5331, 6302, 6820, 6301, 6814, 5328, 6811, 5312, 6796, 5313, 
         5327, 6813, 6300, 5332, 6816, 6292, 6799, 5315, 5351, 5354, 6838, 
         5311, 6795, 6290, 5355, 6310, 6839, 5353, 5352, 6837, 5350, 5300, 
         5357}], 
        Line3DBox[{5370, 5371, 6865, 5400, 6862, 6331, 6395, 5534, 6958, 6405,
          6332, 6861, 5390, 5388, 6855, 5389, 5412, 6338, 6867, 5411, 6868, 
         6339}], 
        Line3DBox[{5372, 5373, 6851, 6324, 5374, 6849, 5375, 5376}], 
        Line3DBox[{5378, 5377, 6850, 5380, 5379}], 
        Line3DBox[{5382, 6853, 6325, 6848, 6326, 5381, 6852, 6327, 5397}], 
        Line3DBox[{5386, 5384, 6854, 5383, 6856, 6322, 6392, 6383, 5520, 6940,
          5539, 6328, 6393, 6384, 6957, 6381, 5545, 5446, 6883, 5445, 5444}], 
        Line3DBox[{2335, 5385, 5367, 6847, 5368, 6330, 6859, 5391, 6857, 5392,
          5551, 6410}], 
        Line3DBox[{5393, 6329, 6863, 5401, 5394, 6858, 5395, 6860, 5399, 5398,
          5396, 5540, 6941, 6385, 5533, 6394, 6948, 5387, 6864, 6333, 5402}], 
        Line3DBox[{5413, 5414, 6871, 5410, 5409, 6888, 6344, 5426, 6887, 5440,
          5430, 6952, 6398, 6388, 5523, 6944, 5530, 5549, 5424, 5537, 6953, 
         6334, 6335, 6874, 6342, 6869, 5418, 6349, 6879, 5441}], 
        Line3DBox[{5421, 5422, 6881, 5442, 6923, 5448, 6353, 6885, 5449, 5447,
          6884, 5434, 5435, 6889, 5423, 6870, 6343, 5417, 5541, 5528, 6959, 
         6406, 5536, 5439, 5544, 5529, 5548, 6877, 6341, 5416, 6932, 5437, 
         6876, 5436, 5508}], 
        Line3DBox[{2482, 6346, 6873, 6345, 5438, 6878, 5425, 5419, 5542, 6942,
          6386, 5521, 6396, 6949, 6337, 5408, 6875, 5403, 6321, 6846, 5366, 
         6866, 5405, 5404, 6336}], 
        Line3DBox[{5451, 5406, 5407, 6872, 5427, 6886, 5450, 5491, 6918, 5432,
          6347, 6892, 5452, 6890, 6323, 5369, 6893, 5420, 5415, 6340, 6950, 
         6397, 6387, 5522, 6943, 5543, 5431, 5443, 6882, 6352, 6357, 6928, 
         6379, 5509, 6931, 5510}], 
        Line3DBox[{5484, 6915, 5483, 6366, 6909, 6365, 5459, 6897, 6355, 6912,
          6348, 5433, 6891, 5453, 5454, 6894, 6350, 6880, 6351, 5458, 5428, 
         6951, 5429, 6356, 6898, 6407, 5524, 6947, 5547, 5505, 6927, 6378, 
         5500, 5499, 6926, 5503, 2663}], 
        Line3DBox[{5485, 6368, 6911, 6369, 5481, 6367, 6914, 6360, 5475, 6910,
          5482, 6358, 6900, 5463, 6913, 5460, 6899, 5461, 5457, 6896, 6354, 
         5456, 6895, 5455, 5470, 6916, 5462, 5538, 6956, 6375, 6403, 6390, 
         6963, 5527, 6946, 5532, 5550, 6377, 5501, 6374, 6925, 5502, 5506}], 
        Line3DBox[{5486, 5487, 6934, 5479, 6906, 6363, 6935, 5513, 6936, 5489,
          5488, 5468, 6903, 5469, 6921, 5474, 5473, 6907, 6361, 5472, 5471, 
         6917, 6370, 6408, 6960, 5526, 6402, 5494, 6954, 6399, 5535, 6391, 
         6945, 6404, 6376, 6929, 5507, 6930, 6373, 5497, 6924, 5498, 5504}], 
        Line3DBox[{5512, 5490, 5464, 6901, 6902, 6359, 5511, 6933, 5466, 5467,
          5546, 5531, 6962, 6409, 5495, 6372, 6955, 6401, 6382, 6961, 6389, 
         6400, 5493, 6919, 5477, 6905, 5478, 5492, 6920, 6371, 5496, 6922, 
         6364, 6908, 5480, 5515, 5518, 6938, 5476, 6904, 6362, 5519, 6380, 
         6939, 5517, 5516, 6937, 5514, 5465, 5525}], 
        Line3DBox[{5557, 5558, 6988, 5588, 6985, 6424, 5586, 6982, 6425, 6984,
          5577, 5575, 6976, 5576, 5600, 6431, 6990, 5599, 6991, 6432}], 
        Line3DBox[{5559, 5560, 6969, 6414, 5561, 6967, 5562, 5563}], 
        Line3DBox[{5565, 5564, 6968, 5567, 5566}], 
        Line3DBox[{5569, 6971, 6415, 6966, 6416, 5568, 6970, 6417, 5584}], 
        Line3DBox[{5573, 5571, 6973, 5570, 6977, 6412, 5555, 6974, 6418, 6972,
          6419, 5636, 7014, 5635, 5634}], 
        Line3DBox[{3052, 5572, 5553, 6965, 5554, 6423, 6981, 5578, 6978, 5579,
          6422}], 
        Line3DBox[{5580, 6421, 6986, 5589, 5581, 6979, 5582, 6983, 5587, 5585,
          5583, 6980, 6420, 6975, 5574, 6987, 6426, 5590}], 
        Line3DBox[{5601, 5602, 6998, 5598, 5597, 7020, 6440, 5615, 7019, 5630,
          5619, 7002, 5620, 7008, 5612, 6439, 7018, 6427, 6428, 7003, 6436, 
         6993, 5606, 6445, 7010, 5631}], 
        Line3DBox[{5609, 5610, 7012, 5632, 7058, 5638, 6449, 7016, 5639, 5637,
          7015, 5624, 5625, 7021, 5611, 6996, 6438, 5605, 6992, 6435, 5629, 
         7007, 6434, 5604, 7074, 5627, 7006, 5626, 5701}], 
        Line3DBox[{3207, 6442, 7001, 6441, 5628, 7009, 5613, 5607, 6994, 6437,
          6995, 6430, 5596, 7005, 5591, 6411, 6964, 5552, 6989, 5593, 5592, 
         6429}], 
        Line3DBox[{5641, 5594, 5595, 6999, 5616, 7017, 5640, 5682, 7051, 5622,
          6443, 7024, 5642, 7022, 6413, 5556, 7025, 5608, 5603, 6433, 6997, 
         5614, 7004, 5621, 5633, 7013, 6448, 6453, 7069, 6478, 5702, 7073, 
         5703}], 
        Line3DBox[{5675, 7047, 5674, 6463, 7041, 6462, 5649, 7029, 6451, 7044,
          6444, 5623, 7023, 5643, 5644, 7026, 6446, 7011, 6447, 5648, 5617, 
         7000, 5618, 6452, 7030, 5650, 7072, 5698, 7068, 6477, 5692, 5691, 
         7067, 5696, 3398}], 
        Line3DBox[{5676, 6465, 7043, 6466, 5672, 6464, 7046, 6457, 5666, 7042,
          5673, 6455, 7032, 5654, 7045, 5651, 7031, 5652, 5647, 7028, 6450, 
         5646, 7027, 5645, 5661, 7048, 5653, 6454, 7065, 6474, 7062, 5694, 
         7066, 6476, 5693, 6473, 7063, 5695, 5699}], 
        Line3DBox[{5677, 5678, 7076, 5670, 7038, 6460, 7077, 5706, 7078, 5680,
          5679, 5659, 7035, 5660, 7056, 5665, 5664, 7039, 6458, 5663, 5662, 
         7050, 6468, 7049, 6467, 5685, 7053, 5686, 7064, 6475, 7070, 5700, 
         7071, 6472, 5689, 7059, 5690, 5697}], 
        Line3DBox[{5705, 5681, 5655, 7033, 7034, 6456, 5704, 7075, 5657, 5658,
          7060, 5687, 6471, 7061, 6470, 7055, 5684, 7052, 5668, 7037, 5669, 
         5683, 7054, 6469, 5688, 7057, 6461, 7040, 5671, 5708, 5711, 7080, 
         5667, 7036, 6459, 5712, 6479, 7081, 5710, 5709, 7079, 5707, 5656, 
         5713}], 
        Line3DBox[{5719, 5720, 7106, 5750, 7103, 6493, 5748, 7100, 6494, 7102,
          5739, 5737, 7094, 5738, 5762, 6500, 7108, 5761, 7109, 6501}], 
        Line3DBox[{5721, 5722, 7087, 6483, 5723, 7085, 5724, 5725}], 
        Line3DBox[{5727, 5726, 7086, 5729, 5728}], 
        Line3DBox[{5731, 7089, 6484, 7084, 6485, 5730, 7088, 6486, 5746}], 
        Line3DBox[{5735, 5733, 7091, 5732, 7095, 6481, 5717, 7092, 6487, 7090,
          6488, 5798, 7132, 5797, 5796}], 
        Line3DBox[{3489, 5734, 5715, 7083, 5716, 6492, 7099, 5740, 7096, 5741,
          6491}], 
        Line3DBox[{5742, 6490, 7104, 5751, 5743, 7097, 5744, 7101, 5749, 5747,
          5745, 7098, 6489, 7093, 5736, 7105, 6495, 5752}], 
        Line3DBox[{5763, 5764, 7116, 5760, 5759, 7138, 6509, 5777, 7137, 5792,
          5781, 7120, 5782, 7126, 5774, 6508, 7136, 6496, 6497, 7121, 6505, 
         7111, 5768, 6514, 7128, 5793}], 
        Line3DBox[{5771, 5772, 7130, 5794, 7176, 5800, 6518, 7134, 5801, 5799,
          7133, 5786, 5787, 7139, 5773, 7114, 6507, 5767, 7110, 6504, 5791, 
         7125, 6503, 5766, 7192, 5789, 7124, 5788, 5863}], 
        Line3DBox[{3644, 6511, 7119, 6510, 5790, 7127, 5775, 5769, 7112, 6506,
          7113, 6499, 5758, 7123, 5753, 6480, 7082, 5714, 7107, 5755, 5754, 
         6498}], 
        Line3DBox[{5803, 5756, 5757, 7117, 5778, 7135, 5802, 5844, 7169, 5784,
          6512, 7142, 5804, 7140, 6482, 5718, 7143, 5770, 5765, 6502, 7115, 
         5776, 7122, 5783, 5795, 7131, 6517, 6522, 7187, 6547, 5864, 7191, 
         5865}], 
        Line3DBox[{5837, 7165, 5836, 6532, 7159, 6531, 5811, 7147, 6520, 7162,
          6513, 5785, 7141, 5805, 5806, 7144, 6515, 7129, 6516, 5810, 5779, 
         7118, 5780, 6521, 7148, 5812, 7190, 5860, 7186, 6546, 5854, 5853, 
         7185, 5858, 3835}], 
        Line3DBox[{5838, 6534, 7161, 6535, 5834, 6533, 7164, 6526, 5828, 7160,
          5835, 6524, 7150, 5816, 7163, 5813, 7149, 5814, 5809, 7146, 6519, 
         5808, 7145, 5807, 5823, 7166, 5815, 6523, 7183, 6543, 7180, 5856, 
         7184, 6545, 5855, 6542, 7181, 5857, 5861}], 
        Line3DBox[{5839, 5840, 7194, 5832, 7156, 6529, 7195, 5868, 7196, 5842,
          5841, 5821, 7153, 5822, 7174, 5827, 5826, 7157, 6527, 5825, 5824, 
         7168, 6537, 7167, 6536, 5847, 7171, 5848, 7182, 6544, 7188, 5862, 
         7189, 6541, 5851, 7177, 5852, 5859}], 
        Line3DBox[{5867, 5843, 5817, 7151, 7152, 6525, 5866, 7193, 5819, 5820,
          7178, 5849, 6540, 7179, 6539, 7173, 5846, 7170, 5830, 7155, 5831, 
         5845, 7172, 6538, 5850, 7175, 6530, 7158, 5833, 5870, 5873, 7198, 
         5829, 7154, 6528, 5874, 6548, 7199, 5872, 5871, 7197, 5869, 5818, 
         5875}], 
        Line3DBox[{5881, 5882, 7224, 5912, 7221, 6562, 5910, 7218, 6563, 7220,
          5901, 5899, 7212, 5900, 5924, 6569, 7226, 5923, 7227, 6570}], 
        Line3DBox[{5883, 5884, 7205, 6552, 5885, 7203, 5886, 5887}], 
        Line3DBox[{5889, 5888, 7204, 5891, 5890}], 
        Line3DBox[{5893, 7207, 6553, 7202, 6554, 5892, 7206, 6555, 5908}], 
        Line3DBox[{5897, 5895, 7209, 5894, 7213, 6550, 5879, 7210, 6556, 7208,
          6557, 5960, 7250, 5959, 5958}], 
        Line3DBox[{3926, 5896, 5877, 7201, 5878, 6561, 7217, 5902, 7214, 5903,
          6560}], 
        Line3DBox[{5904, 6559, 7222, 5913, 5905, 7215, 5906, 7219, 5911, 5909,
          5907, 7216, 6558, 7211, 5898, 7223, 6564, 5914}], 
        Line3DBox[{5925, 5926, 7234, 5922, 5921, 7256, 6578, 5939, 7255, 5954,
          5943, 7238, 5944, 7244, 5936, 6577, 7254, 6565, 6566, 7239, 6574, 
         7229, 5930, 6583, 7246, 5955}], 
        Line3DBox[{5933, 5934, 7248, 5956, 7294, 5962, 6587, 7252, 5963, 5961,
          7251, 5948, 5949, 7257, 5935, 7232, 6576, 5929, 7228, 6573, 5953, 
         7243, 6572, 5928, 7310, 5951, 7242, 5950, 6025}], 
        Line3DBox[{4081, 6580, 7237, 6579, 5952, 7245, 5937, 5931, 7230, 6575,
          7231, 6568, 5920, 7241, 5915, 6549, 7200, 5876, 7225, 5917, 5916, 
         6567}], 
        Line3DBox[{5965, 5918, 5919, 7235, 5940, 7253, 5964, 6006, 7287, 5946,
          6581, 7260, 5966, 7258, 6551, 5880, 7261, 5932, 5927, 6571, 7233, 
         5938, 7240, 5945, 5957, 7249, 6586, 6591, 7305, 6616, 6026, 7309, 
         6027}], 
        Line3DBox[{5999, 7283, 5998, 6601, 7277, 6600, 5973, 7265, 6589, 7280,
          6582, 5947, 7259, 5967, 5968, 7262, 6584, 7247, 6585, 5972, 5941, 
         7236, 5942, 6590, 7266, 5974, 7308, 6022, 7304, 6615, 6016, 6015, 
         7303, 6020, 4272}], 
        Line3DBox[{6000, 6603, 7279, 6604, 5996, 6602, 7282, 6595, 5990, 7278,
          5997, 6593, 7268, 5978, 7281, 5975, 7267, 5976, 5971, 7264, 6588, 
         5970, 7263, 5969, 5985, 7284, 5977, 6592, 7301, 6612, 7298, 6018, 
         7302, 6614, 6017, 6611, 7299, 6019, 6023}], 
        Line3DBox[{6001, 6002, 7312, 5994, 7274, 6598, 7313, 6030, 7314, 6004,
          6003, 5983, 7271, 5984, 7292, 5989, 5988, 7275, 6596, 5987, 5986, 
         7286, 6606, 7285, 6605, 6009, 7289, 6010, 7300, 6613, 7306, 6024, 
         7307, 6610, 6013, 7295, 6014, 6021}], 
        Line3DBox[{6029, 6005, 5979, 7269, 7270, 6594, 6028, 7311, 5981, 5982,
          7296, 6011, 6609, 7297, 6608, 7291, 6008, 7288, 5992, 7273, 5993, 
         6007, 7290, 6607, 6012, 7293, 6599, 7276, 5995, 6032, 6035, 7316, 
         5991, 7272, 6597, 6036, 6617, 7317, 6034, 6033, 7315, 6031, 5980, 
         6037}], 
        Line3DBox[{6041, 6042, 7331, 6065, 7329, 6628, 6698, 6201, 7326, 6237,
          6202, 6684, 6715, 7328, 6217, 6058, 6056, 7324, 6057, 6077, 6633, 
         7333, 6076, 7334, 6634}], 
        Line3DBox[{6043, 6044, 7321, 6621, 6045, 7319, 6046, 6047}], 
        Line3DBox[{6049, 6048, 7320, 6051, 6050}], 
        Line3DBox[{6052, 7322, 6622, 6695, 6185, 6228, 6186, 7400, 6678, 6714,
          6197, 7416, 6187, 6229, 6623, 6062}], 
        Line3DBox[{6055, 6053, 6218, 7401, 6682, 6175, 6697, 7417, 6619, 6694,
          6680, 6174, 7402, 6219, 6624, 6696, 6681, 6230, 7323, 6679, 6224, 
         6106, 7346, 6105, 6104}], 
        Line3DBox[{4353, 6054, 6039, 7415, 6693, 6196, 6713, 6627, 7406, 6191,
          6234, 6235, 6199, 7404, 6188, 6232, 6059, 6626}], 
        Line3DBox[{6060, 6625, 7330, 6066, 6238, 6200, 7405, 6683, 6712, 6061,
          7327, 6064, 6063, 6236, 6177, 6190, 7325, 6233, 6189, 6220, 6198, 
         6231, 7403, 6176, 7407, 6192, 6629, 6067}], 
        Line3DBox[{6078, 6079, 7336, 6075, 6074, 7350, 6640, 6089, 7349, 6719,
          6205, 6703, 6093, 7421, 6702, 6688, 6241, 6180, 7411, 6195, 6242, 
         6087, 6211, 7423, 6630, 6699, 6692, 7433, 6716, 6638, 7335, 6082, 
         6645, 7342, 6101}], 
        Line3DBox[{6085, 6086, 7344, 6102, 7377, 6108, 6649, 7347, 6109, 6107,
          7422, 6704, 6181, 6717, 6096, 7351, 6721, 6204, 6686, 7432, 6240, 
         6639, 6720, 6203, 7408, 6193, 6239, 6637, 6100, 7340, 6636, 6081, 
         7392, 6098, 7339, 6097, 6162}], 
        Line3DBox[{4489, 6642, 7338, 6641, 6099, 7341, 6088, 6083, 6221, 7409,
          6685, 6178, 6700, 7418, 6632, 6073, 6718, 7434, 6194, 6223, 6068, 
         6618, 7318, 6038, 7332, 6070, 6069, 6631}], 
        Line3DBox[{6111, 6071, 6072, 7337, 6090, 7348, 6110, 6145, 7429, 6212,
          6643, 7353, 6112, 7424, 6620, 6040, 7354, 6084, 6080, 6635, 7419, 
         6701, 6687, 6179, 7410, 6222, 6094, 6103, 7345, 6648, 6653, 7387, 
         6676, 6163, 7391, 6164}], 
        Line3DBox[{6138, 7370, 6137, 6662, 7365, 6661, 6116, 7356, 6651, 7368,
          6644, 6095, 7352, 6113, 6709, 6691, 6726, 6114, 7425, 6646, 7343, 
         6647, 6213, 6091, 7420, 6092, 6652, 7357, 6117, 7390, 6159, 7386, 
         6675, 6153, 6152, 7385, 6157, 4674}], 
        Line3DBox[{6139, 6664, 7367, 6665, 6135, 6663, 7369, 6656, 6130, 7366,
          6136, 6654, 7358, 6120, 6226, 7413, 6689, 6207, 6705, 7426, 6118, 
         6706, 6182, 6722, 7355, 6650, 6723, 6206, 7412, 6225, 6115, 6127, 
         7371, 6119, 6214, 7431, 6672, 7381, 6155, 7384, 6674, 6154, 6671, 
         7382, 6156, 6160}], 
        Line3DBox[{6140, 6141, 7394, 6133, 7363, 6659, 7395, 6167, 7396, 6143,
          6142, 6125, 7361, 6126, 7376, 6129, 6216, 7428, 6657, 6215, 6128, 
         7372, 6666, 6724, 7435, 6184, 6711, 6147, 7373, 6148, 7383, 6673, 
         7388, 6161, 7389, 6670, 6150, 7378, 6151, 6158}], 
        Line3DBox[{6166, 6144, 6121, 7359, 7360, 6655, 6165, 7393, 6123, 6124,
          7379, 6149, 6669, 7380, 6668, 7375, 6146, 6227, 7414, 6690, 6208, 
         6707, 7427, 6132, 6708, 6209, 6725, 7374, 6667, 6727, 6210, 6710, 
         7430, 6660, 7364, 6134, 6169, 6172, 7398, 6131, 7362, 6658, 6173, 
         6677, 7399, 6171, 6170, 7397, 6168, 6122, 6183}]}, {
        GrayLevel[0.2], 
        Line3DBox[CompressedData["
1:eJwN0MErg3EYwPFnvc2W/QPMSUk5c5I/QJFkJQenndTKjlI4SDlQO5Di6LDa
XdqBlZPtNLuQy5QVc5KUw1J8Dp++7/P8fu9W73ixvLKZiog1Eu6zEU22eB6K
WMxHvGiXBc+P+kSPV5bsPnQkEzFKjlW7Yf21H/DJst2XvtPnh8Sdgn1aq/5v
jzaT5gnWnY1pnqb78+aWTptn2DGXtcQcs1yybV/TKb91pXWt0GXffMCFO396
osd6RMP5GW98mzscOn/QxK7HKTekyXHrvK/n3LFBlgwlrp23vb/r2/4DUEs0
tA==
         "]], 
        Line3DBox[{1790, 2250, 2169, 2208, 1791, 1778, 6737, 1779, 1771, 1773,
          1808, 6743, 1806, 1793, 1792, 1801, 2251, 2170, 2209, 1798, 6740, 
         1799, 1886, 1873, 6757, 1872, 1878, 2260, 2181, 2221, 1893, 2218, 
         2178, 2164, 2228, 6779, 1833, 1831, 1967, 1890, 2257, 6840, 2177, 
         2217, 1889, 1884, 1885, 6784, 1973, 1947, 6772, 1927, 1925, 1980, 
         1978, 6787, 1979, 1998, 6798, 2026, 2025, 2070, 6813, 2083, 2102, 
         191, 222}], 
        Line3DBox[{1813, 1814, 1950, 6775, 1951, 1811, 1810, 6750, 1829, 1835,
          1840, 6751, 1744, 1745, 1847, 6752, 1839, 1838, 1867, 6781, 1902, 
         1900, 1853, 1851, 1955, 6817, 1957, 1956, 6778, 1963, 2071, 2048, 
         1983, 6788, 1965, 1966, 2043, 6801, 2044, 2052, 2276, 2205, 2194, 
         2273, 2031, 2033, 6836, 2239, 2199, 2165, 2242, 2153, 2148, 2028, 
         6795, 2027, 2160, 2157, 2243, 227}], 
        Line3DBox[{1841, 1842, 1856, 6760, 1862, 1836, 1837, 6773, 1887, 1888,
          1904, 6761, 1845, 1846, 1964, 2039, 6800, 2040, 2041, 2042, 6805, 
         2023, 2024, 2036, 2235, 2195, 2274, 2032, 6797, 2034, 2240, 2200, 
         2279, 2149, 2156, 6839, 2158, 2159, 2161, 2244, 2202, 2281, 201}], 
        Line3DBox[{1860, 6754, 1861, 1891, 1911, 6763, 1909, 1905, 1871, 6756,
          1870, 1917, 1941, 6769, 1865, 1866, 2136, 1919, 6766, 1920, 1990, 
         1986, 6789, 1985, 2012, 1997, 1995, 6807, 2060, 2078, 2062, 6808, 
         2063, 2068, 2069, 6811, 2072, 2086, 2110, 2109}], 
        Line3DBox[{1875, 1876, 1937, 6768, 1939, 2139, 2145, 2129, 6828, 1988,
          1944, 1945, 6827, 2125, 2122, 2118, 6821, 2014, 2016, 2100, 6823, 
         2080, 2081, 2073, 2075, 6820, 2098, 2066, 162, 2111}], 
        Line3DBox[{1943, 1910, 1912, 1942, 6771, 1874, 1877, 1938, 1940, 6833,
          2141, 2142, 2128, 1989, 1948, 6774, 1949, 6831, 1987, 1984, 2011, 
         1996, 1994, 6824, 2119, 2015, 2013, 2077, 2079, 6812, 2082, 2074, 
         2076, 2084, 6814, 2085, 148}], 
        Line3DBox[{149, 2067, 2065, 2097, 6819, 2096, 2087, 2088, 6829, 2121, 
         2099, 2101, 2123, 6825, 2124, 2115, 2114, 6826, 1982, 1981, 2140, 
         6832, 2143, 2144, 2138, 2137}], 
        Line3DBox[{5, 2029, 6796, 2030, 2018, 2017, 6809, 2064, 2007, 2006, 
         1976, 6786, 1977, 1991, 1906, 6762, 1907, 1974, 1901, 6759, 1864, 
         1863, 1868, 6755, 1869, 1918, 6765, 1834, 1832, 2227, 2187, 2266, 
         1936, 1898, 1897, 6770, 1908, 1859, 1857, 6753, 1858, 1805, 1804, 
         6749, 1772, 1770, 1789}], 
        Line3DBox[CompressedData["
1:eJwVz78rxHEYB/DHJe4/UBZdRv8Ak11ZbnIymeVW3AlRuhtIsRkQMSgdw9VF
GQ2y+NEhdeoYZUGyeH2GV+/v+3meb32/uclifrojIia4ZDAb8d0dsd4bUZDj
PFHVH2WblpsNGrzpm3ZX8pAjLsy30o4BTs0W3NTkMkuc6y92a9Q5M9tlxnxH
linRtKtQY06/lSscM+V2Nn0rD/oqJ1T1CkX7YTlELv2L3idv3MyzT3/6ZrnI
Ngd0mmUYc//VFfFD3vOn/OCXPwpmPe6uvVNij5b5K8+MpH+U77QZ1e/kPU3+
AUNhPXs=
         "]], 
        Line3DBox[{2132, 2117, 2116, 6822, 2120, 2134, 2133, 6830, 2106, 2093,
          2095, 2108, 6834, 187, 2135}], 
        Line3DBox[{164, 2146, 2003, 6793, 2005, 2107, 2094, 2092, 2105, 6818, 
         2112, 2131, 2130}], 
        Line3DBox[CompressedData["
1:eJwV0L8rxHEYB/DHwm1SNwlh9A+cyW5SSpRBoTsTmwxyXeq65GQ2HKUoSpdC
x67O707y68og/gLK6PUdXr0/z/v5fIbvt296YXS+JSKmqDCTisiw0xnx2xYx
wSQDum3dt/MnNfMmH7yY6xTt95KkxBYF3Zm8a424Z8V86k2ZJlW7Dcpc2L3r
1jnhQHcs13glZ56j6lxztySfmdU15CqHZM1HssgT4+as+0NykF56ONfd2i+z
S79uX+Z5oMvcnXy/e+2ygzQpxpK3vueGH/6oe7OU/CeuzMPuVJwXueRa98WI
/k02eaTBP8j2PJ8=
         "]], 
        Line3DBox[{229, 2163, 2282, 2203, 2245, 2162, 2151, 2150, 6837, 2154, 
         2058, 2057, 6835, 2054, 2045, 6802, 2046, 2050, 6806, 2049}], 
        Line3DBox[{225, 2113, 2061, 2002, 6792, 2004, 2126, 2127}], 
        Line3DBox[CompressedData["
1:eJwV0LsuRFEYhuF/iInZWyJR7YzjxDQkWoeOuAHHiEIiEzUtJlEKGgqFhum4
AXQkZBoNVyFOU4nGIeFRvHnX961/ray9S5W1mdVcRCyj3WI2jZjDfhLx0xpx
W4xoKkTkcGP9qftCXm5BXdfGwxjBIO50A9yNd/dsuG8dF9abfM693GF/gYc6
I3Z0l6jKiX6eD+RvpHKGfpTN/uoO0UBiroAT6xWucYUnzU7g3lvGuFl3ZG+J
R+U333Btr8FT8jSe5D3exuL/23CFR32dx51/4GPUkPeWTBd8Jp8ilV/5w5kX
7pJ7UEZmrsol9GELRd2zuV3//g/93jCz
         "]], 
        Line3DBox[{2335, 2336, 2324, 6854, 2325, 2318, 2320, 2351, 6858, 2349,
          2338, 2337, 2344, 2906, 2709, 2816, 2341, 6855, 2342, 2426, 2413, 
         2919, 2723, 6942, 2830, 2412, 2418, 2926, 2731, 2838, 2433, 2832, 
         2725, 2697, 2850, 6953, 2374, 2372, 2506, 2430, 6870, 2429, 2943, 
         2746, 2852, 2424, 2425, 6893, 2512, 2486, 6880, 2466, 2464, 2519, 
         2517, 6896, 2518, 2535, 6907, 2562, 2561, 2607, 6920, 2619, 2635, 
         459, 2644}], 
        Line3DBox[{2382, 2383, 2397, 6871, 2403, 2377, 2378, 6881, 2427, 2428,
          2443, 6872, 2386, 2387, 2503, 2576, 6909, 2577, 2578, 2579, 6914, 
         2559, 2560, 2572, 2568, 6906, 2570, 2680, 2687, 6939, 2690, 2691, 
         2693, 469}], 
        Line3DBox[CompressedData["
1:eJwVzDFLgmEYheGnEKKaHcohGsQQ+qhAnPoLDv6DHBIUC+kHRIKDEhEfBFFL
c0O4SyDU0CBNNQgJDlG70N7lcLjPfd6XZ7t2Wj1ZioiKHK1GfGxG1PBcUpnw
a7yUpnzyBt7K2XrEYC0ityDfwCfexql/x7a6NGwV2y8O8M7Wwke+lYvI6ve2
mUwlz4feLnDuzpetq49sRfzjPXzhu/jDC/jMO/jNM+7meYmPMcUyFiTRX3HP
n76+s7gjB/obXmGCK973sczf8QYPsSoP+gRjOeIfBoorwQ==
         "]], 
        Line3DBox[{2415, 2416, 2933, 2737, 2844, 2476, 6876, 2478, 2669, 2675,
          2660, 6928, 2526, 2483, 2484, 6927, 2656, 2653, 2987, 2787, 2889, 
         2801, 2886, 2884, 2783, 6963, 2983, 2550, 2950, 2753, 2859, 2552, 
         2877, 2773, 2972, 2634, 2986, 2786, 6945, 2888, 2805, 2617, 2974, 
         2775, 2879, 2610, 2867, 2761, 2959, 2612, 2980, 2780, 2882, 6955, 
         2632, 2876, 2772, 2971, 2603, 2957, 2759, 2865, 430, 2977, 2808, 
         514}], 
        Line3DBox[CompressedData["
1:eJwV0L9LglEUBuDTaK1ORUMEQeISlUQ0CNFSg+DYaLvW0twgFP2AxHYjKFxC
dLEhEBqN9ijKCBT/AMHVx+HlOe+5373Dt1Qo5YszEZGTViKiIlVpSm8+osgT
OZ1zPhuxyGe9IcmFiJJd027IHI95JD3nbfn3xsv0e2cD+2V3Lnmmf9uX2dFX
OdIv+Kan2ddX+Kpfyb75QNLeONT3zH+sc+zbc17r71IxZ/jEX+5yiyl3M+YP
c5XbrPGTWa5zg13ecpOP/OGNrLl/p++YH/jFez9wAiLuMAE=
         "]], 
        Line3DBox[{417, 2770, 2969, 2604, 2864, 2758, 2956, 2602, 2806, 2881, 
         2779, 6962, 2979, 2631, 2970, 2771, 2875, 2622, 2872, 2767, 2966, 
         2623, 6929, 2652, 2887, 2785, 2985, 2633, 2807, 2893, 2789, 2989, 
         2654, 2892, 6946, 2788, 2988, 2655, 2647, 2646, 6926, 2521, 2520, 
         2670, 6931, 2673, 2674, 2668, 2667}], 
        Line3DBox[{273, 2565, 6905, 2566, 2554, 2553, 6917, 2601, 2955, 2757, 
         2863, 2544, 2543, 2515, 6895, 2516, 2947, 2750, 2856, 2529, 2445, 
         2923, 2728, 2835, 6951, 2446, 2513, 2440, 2922, 2727, 2834, 6950, 
         2405, 2404, 2409, 2918, 6959, 2722, 2800, 2932, 2457, 6874, 2375, 
         2373, 2849, 2744, 2941, 2475, 2437, 2436, 6878, 2447, 2400, 2398, 
         6867, 2399, 2348, 2347, 6863, 2319, 2317, 2334}], 
        Line3DBox[CompressedData["
1:eJwV0E0rRGEYxvF7vDQzXpJMeZmxUBZWdpYy2dtYTNRE2AobvofXKQ2lWFA+
AQuxNHwBu2l2lGIxyoz8zuLf/76u59yn85yJ9e3FrVRErKBmWOiJGEBrLGI3
G7GHbzTlL26hjVQ+os6PeMK8nRd+91yNz1HFh/zK92iY77iCExxjszfi2m6O
p7zzSHeDHflWP8JX8iXe7Je5hDl0Ozv1zLS9VfOsbo2rujQX5X7uw4XuExvm
M55M7sUd8rj9irlsHtaPYsl8oCs4a/NQcnfeR8nZoJzHn3yIZV1BfvaNM9yJ
ruQ8E/GgC3MW6eR/yU39D37xD+1yNdE=
         "]], 
        Line3DBox[{2663, 2649, 2648, 6925, 2651, 2665, 2664, 6930, 2639, 2628,
          2968, 2769, 2874, 2630, 2878, 2774, 2973, 2641, 6933, 455, 2990, 
         2809, 516}], 
        Line3DBox[{432, 2793, 2994, 2676, 2540, 6902, 2542, 2897, 2795, 2996, 
         2640, 2629, 2873, 2768, 2967, 2627, 2638, 6924, 2643, 2662, 2661}], 
        Line3DBox[CompressedData["
1:eJwVz80rRGEYhvFHSWdmimyosZlJspOyQ8reaspqokkpNqZ8ZCOJvb1siISU
lWQliymFjX/BinJ8W5CP3yyurvt+3uec95ziRLU00xARYzgUFrIRI8h2RDTz
fCZiEcNyxuxX/sYL7vCWj7jgbezgBKnZbX0niXjFg36lL+cizrynkw/0fdw7
q/GS2amzAr/zmlleLrjzWJ+VV8ymeU9v5VW9nY/0Ks/pU7yrt3CXZ8tmoxhC
o9mGs3Ee1G/cXZE3zZo4QSrneIsnud/eAK7t9nAv+tCNS7Nn//dldx0l+096
W/3b8Sif20k50Wvyj/yHT3zgH8BON14=
         "]], 
        Line3DBox[{2688, 2689, 2692, 2563, 6904, 2564, 2678, 2684, 2679, 6935,
          2569, 2567, 2573, 2589, 2581, 6910, 2580, 2505, 2504, 6897, 2522, 
         2585, 2608, 2502, 6886, 2495, 2496, 6923, 2494, 2392, 2394, 2439, 
         2441, 6888, 2408, 2379, 2380, 6866, 2388, 2292, 2291, 6865, 2381, 
         2376, 2370, 6864, 2353, 2907, 2710, 2817, 2354, 2490, 6883, 2489, 
         2935, 2739, 2846, 2797, 2356, 2997}], 
        Line3DBox[{521, 2695, 2694, 2682, 2681, 6937, 2685, 2595, 2594, 6934, 
         2591, 2582, 6911, 2583, 2587, 6915, 2586}], 
        Line3DBox[{520, 2645, 2598, 2539, 6901, 2541, 2896, 2794, 2995, 2657, 
         2658}], 
        Line3DBox[{614, 3433, 3434, 3432, 3015, 6968, 3021, 3020, 6967, 3012, 
         3013, 3025, 3024, 6970, 3031, 3078, 3079, 3065, 6978, 3064, 3050, 
         3048, 3037, 6972, 3039, 3029, 3030, 3044, 3057, 6975, 3059, 3093, 
         3090, 6985, 3081, 3080, 2998, 6964, 2999, 3106, 3107, 7019, 3167, 
         3163, 3115, 3113, 3218, 7016, 3225, 3354, 3236, 3186, 3188, 7051, 
         3312, 7044, 3196, 3195, 3299, 3265, 7032, 3264, 3316, 3318, 3324, 
         7078, 3419, 3321, 3320, 3422, 7080, 3263, 736}], 
        Line3DBox[{3052, 3053, 3040, 6973, 3041, 3033, 3035, 3070, 6979, 3068,
          3055, 3054, 3063, 3060, 6976, 3061, 3149, 3136, 6994, 3135, 3141, 
         3157, 3155, 7018, 3096, 3094, 3231, 3153, 6996, 3152, 3147, 3148, 
         7025, 3237, 3211, 7011, 3191, 3189, 3244, 3242, 7028, 3243, 3262, 
         7039, 3290, 3289, 3335, 7054, 3348, 3367, 802, 3378}], 
        Line3DBox[{3075, 3076, 3214, 7014, 3215, 3073, 3072, 6987, 3091, 3098,
          3103, 6988, 3006, 3007, 3110, 6989, 3102, 3101, 3130, 7020, 3166, 
         3164, 3116, 3114, 3219, 7058, 3221, 3220, 7017, 3227, 3336, 3313, 
         3247, 7029, 3229, 3230, 3308, 7042, 3309, 3317, 3301, 3295, 3297, 
         7077, 3415, 3420, 3414, 3292, 7036, 3291, 3428, 3425, 3424}], 
        Line3DBox[{3104, 3105, 3119, 6998, 3125, 3099, 3100, 7012, 3150, 3151,
          3168, 6999, 3108, 3109, 3228, 3304, 7041, 3305, 3306, 3307, 7046, 
         3287, 3288, 3300, 3296, 7038, 3298, 3416, 3423, 7081, 3426, 3427, 
         3429, 812}], 
        Line3DBox[{3123, 6991, 3124, 3154, 3175, 7001, 3173, 3169, 3134, 6993,
          3133, 3181, 3205, 7007, 3128, 3129, 3402, 3183, 7004, 3184, 3254, 
         3250, 7030, 3249, 3276, 3261, 3259, 7048, 3325, 3343, 3327, 7049, 
         3328, 3333, 3334, 7052, 3337, 3351, 3375, 3374}], 
        Line3DBox[{3138, 3139, 3201, 7006, 3203, 3405, 3411, 3395, 7069, 3252,
          3208, 3209, 7068, 3391, 3388, 3384, 7062, 3278, 3280, 3365, 7064, 
         3345, 3346, 3338, 3340, 7061, 3363, 3331, 773, 3376}], 
        Line3DBox[{3207, 3174, 3176, 3206, 7010, 3137, 3140, 3202, 3204, 7074,
          3407, 3408, 3394, 3253, 3212, 7013, 3213, 7072, 3251, 3248, 3275, 
         3260, 3258, 7065, 3385, 3279, 3277, 3342, 3344, 7053, 3347, 3339, 
         3341, 3349, 7055, 3350, 759}], 
        Line3DBox[{760, 3332, 3330, 3362, 7060, 3361, 3352, 3353, 7070, 3387, 
         3364, 3366, 3389, 7066, 3390, 3381, 3380, 7067, 3246, 3245, 3406, 
         7073, 3409, 3410, 3404, 3403}], 
        Line3DBox[{616, 3293, 7037, 3294, 3282, 3281, 7050, 3329, 3271, 3270, 
         3240, 7027, 3241, 3255, 3170, 7000, 3171, 3238, 3165, 6997, 3127, 
         3126, 3131, 6992, 3132, 3182, 7003, 3097, 3095, 3200, 3162, 3161, 
         7009, 3172, 3122, 3120, 6990, 3121, 3067, 3066, 6986, 3034, 3032, 
         3051}], 
        Line3DBox[{803, 3369, 3303, 7040, 3144, 3145, 3274, 7035, 3273, 3284, 
         3285, 7045, 3256, 3223, 3224, 3356, 3234, 7023, 3233, 3187, 3185, 
         7024, 3235, 3217, 7015, 3216, 3180, 3179, 3178, 7002, 3177, 3199, 
         3194, 3193, 7005, 3118, 3112, 3087, 6982, 3085, 3089, 3092, 3058, 
         3056, 6980, 3043, 3045, 6974, 3038, 3036, 3047, 3049, 6981, 3077, 
         3022, 3023, 3017, 6966, 3019, 3028, 3026, 6969, 3010, 3011, 3014}], 
        Line3DBox[{3398, 3383, 3382, 7063, 3386, 3400, 3399, 7071, 3371, 3358,
          3360, 3373, 7075, 798, 3401}], 
        Line3DBox[{775, 3412, 3267, 7034, 3269, 3372, 3359, 3357, 3370, 7059, 
         3377, 3397, 3396}], 
        Line3DBox[{769, 3413, 3368, 7057, 3302, 3143, 3146, 3355, 7056, 3286, 
         3283, 3272, 3257, 7031, 3222, 3190, 3192, 3210, 7026, 3239, 3004, 
         3005, 7022, 3232, 3198, 3197, 7021, 3226, 3159, 3160, 7008, 3156, 
         3158, 3142, 6995, 3117, 3111, 3086, 3084, 6984, 3088, 3082, 3083, 
         6983, 3069, 3071, 3074, 3062, 6977, 3003, 3002, 3042, 3046, 3000, 
         6965, 3001, 3027, 6971, 3016, 3018, 3009, 3008}], 
        Line3DBox[{822, 3431, 3430, 3418, 3417, 7079, 3421, 3323, 3322, 7076, 
         3319, 3310, 7043, 3311, 3315, 7047, 3314}], 
        Line3DBox[{821, 3379, 3326, 3266, 7033, 3268, 3392, 3393}], 
        Line3DBox[{832, 3870, 3871, 3869, 3452, 7086, 3458, 3457, 7085, 3449, 
         3450, 3462, 3461, 7088, 3468, 3515, 3516, 3502, 7096, 3501, 3487, 
         3485, 3474, 7090, 3476, 3466, 3467, 3481, 3494, 7093, 3496, 3530, 
         3527, 7103, 3518, 3517, 3435, 7082, 3436, 3543, 3544, 7137, 3604, 
         3600, 3552, 3550, 3655, 7134, 3662, 3791, 3673, 3623, 3625, 7169, 
         3749, 7162, 3633, 3632, 3736, 3702, 7150, 3701, 3753, 3755, 3761, 
         7196, 3856, 3758, 3757, 3859, 7198, 3700, 954}], 
        Line3DBox[{3489, 3490, 3477, 7091, 3478, 3470, 3472, 3507, 7097, 3505,
          3492, 3491, 3500, 3497, 7094, 3498, 3586, 3573, 7112, 3572, 3578, 
         3594, 3592, 7136, 3533, 3531, 3668, 3590, 7114, 3589, 3584, 3585, 
         7143, 3674, 3648, 7129, 3628, 3626, 3681, 3679, 7146, 3680, 3699, 
         7157, 3727, 3726, 3772, 7172, 3785, 3804, 1020, 3815}], 
        Line3DBox[{3512, 3513, 3651, 7132, 3652, 3510, 3509, 7105, 3528, 3535,
          3540, 7106, 3443, 3444, 3547, 7107, 3539, 3538, 3567, 7138, 3603, 
         3601, 3553, 3551, 3656, 7176, 3658, 3657, 7135, 3664, 3773, 3750, 
         3684, 7147, 3666, 3667, 3745, 7160, 3746, 3754, 3738, 3732, 3734, 
         7195, 3852, 3857, 3851, 3729, 7154, 3728, 3865, 3862, 3861}], 
        Line3DBox[{3541, 3542, 3556, 7116, 3562, 3536, 3537, 7130, 3587, 3588,
          3605, 7117, 3545, 3546, 3665, 3741, 7159, 3742, 3743, 3744, 7164, 
         3724, 3725, 3737, 3733, 7156, 3735, 3853, 3860, 7199, 3863, 3864, 
         3866, 1030}], 
        Line3DBox[{3560, 7109, 3561, 3591, 3612, 7119, 3610, 3606, 3571, 7111,
          3570, 3618, 3642, 7125, 3565, 3566, 3839, 3620, 7122, 3621, 3691, 
         3687, 7148, 3686, 3713, 3698, 3696, 7166, 3762, 3780, 3764, 7167, 
         3765, 3770, 3771, 7170, 3774, 3788, 3812, 3811}], 
        Line3DBox[{3575, 3576, 3638, 7124, 3640, 3842, 3848, 3832, 7187, 3689,
          3645, 3646, 7186, 3828, 3825, 3821, 7180, 3715, 3717, 3802, 7182, 
         3782, 3783, 3775, 3777, 7179, 3800, 3768, 991, 3813}], 
        Line3DBox[{3644, 3611, 3613, 3643, 7128, 3574, 3577, 3639, 3641, 7192,
          3844, 3845, 3831, 3690, 3649, 7131, 3650, 7190, 3688, 3685, 3712, 
         3697, 3695, 7183, 3822, 3716, 3714, 3779, 3781, 7171, 3784, 3776, 
         3778, 3786, 7173, 3787, 977}], 
        Line3DBox[{978, 3769, 3767, 3799, 7178, 3798, 3789, 3790, 7188, 3824, 
         3801, 3803, 3826, 7184, 3827, 3818, 3817, 7185, 3683, 3682, 3843, 
         7191, 3846, 3847, 3841, 3840}], 
        Line3DBox[{834, 3730, 7155, 3731, 3719, 3718, 7168, 3766, 3708, 3707, 
         3677, 7145, 3678, 3692, 3607, 7118, 3608, 3675, 3602, 7115, 3564, 
         3563, 3568, 7110, 3569, 3619, 7121, 3534, 3532, 3637, 3599, 3598, 
         7127, 3609, 3559, 3557, 7108, 3558, 3504, 3503, 7104, 3471, 3469, 
         3488}], 
        Line3DBox[{1021, 3806, 3740, 7158, 3581, 3582, 3711, 7153, 3710, 3721,
          3722, 7163, 3693, 3660, 3661, 3793, 3671, 7141, 3670, 3624, 3622, 
         7142, 3672, 3654, 7133, 3653, 3617, 3616, 3615, 7120, 3614, 3636, 
         3631, 3630, 7123, 3555, 3549, 3524, 7100, 3522, 3526, 3529, 3495, 
         3493, 7098, 3480, 3482, 7092, 3475, 3473, 3484, 3486, 7099, 3514, 
         3459, 3460, 3454, 7084, 3456, 3465, 3463, 7087, 3447, 3448, 3451}], 
        Line3DBox[{3835, 3820, 3819, 7181, 3823, 3837, 3836, 7189, 3808, 3795,
          3797, 3810, 7193, 1016, 3838}], 
        Line3DBox[{993, 3849, 3704, 7152, 3706, 3809, 3796, 3794, 3807, 7177, 
         3814, 3834, 3833}], 
        Line3DBox[{987, 3850, 3805, 7175, 3739, 3580, 3583, 3792, 7174, 3723, 
         3720, 3709, 3694, 7149, 3659, 3627, 3629, 3647, 7144, 3676, 3441, 
         3442, 7140, 3669, 3635, 3634, 7139, 3663, 3596, 3597, 7126, 3593, 
         3595, 3579, 7113, 3554, 3548, 3523, 3521, 7102, 3525, 3519, 3520, 
         7101, 3506, 3508, 3511, 3499, 7095, 3440, 3439, 3479, 3483, 3437, 
         7083, 3438, 3464, 7089, 3453, 3455, 3446, 3445}], 
        Line3DBox[{1040, 3868, 3867, 3855, 3854, 7197, 3858, 3760, 3759, 7194,
          3756, 3747, 7161, 3748, 3752, 7165, 3751}], 
        Line3DBox[{1039, 3816, 3763, 3703, 7151, 3705, 3829, 3830}], 
        Line3DBox[{1050, 4307, 4308, 4306, 3889, 7204, 3895, 3894, 7203, 3886,
          3887, 3899, 3898, 7206, 3905, 3952, 3953, 3939, 7214, 3938, 3924, 
         3922, 3911, 7208, 3913, 3903, 3904, 3918, 3931, 7211, 3933, 3967, 
         3964, 7221, 3955, 3954, 3872, 7200, 3873, 3980, 3981, 7255, 4041, 
         4037, 3989, 3987, 4092, 7252, 4099, 4228, 4110, 4060, 4062, 7287, 
         4186, 7280, 4070, 4069, 4173, 4139, 7268, 4138, 4190, 4192, 4198, 
         7314, 4293, 4195, 4194, 4296, 7316, 4137, 1172}], 
        Line3DBox[{3926, 3927, 3914, 7209, 3915, 3907, 3909, 3944, 7215, 3942,
          3929, 3928, 3937, 3934, 7212, 3935, 4023, 4010, 7230, 4009, 4015, 
         4031, 4029, 7254, 3970, 3968, 4105, 4027, 7232, 4026, 4021, 4022, 
         7261, 4111, 4085, 7247, 4065, 4063, 4118, 4116, 7264, 4117, 4136, 
         7275, 4164, 4163, 4209, 7290, 4222, 4241, 1238, 4252}], 
        Line3DBox[{3949, 3950, 4088, 7250, 4089, 3947, 3946, 7223, 3965, 3972,
          3977, 7224, 3880, 3881, 3984, 7225, 3976, 3975, 4004, 7256, 4040, 
         4038, 3990, 3988, 4093, 7294, 4095, 4094, 7253, 4101, 4210, 4187, 
         4121, 7265, 4103, 4104, 4182, 7278, 4183, 4191, 4175, 4169, 4171, 
         7313, 4289, 4294, 4288, 4166, 7272, 4165, 4302, 4299, 4298}], 
        Line3DBox[{3978, 3979, 3993, 7234, 3999, 3973, 3974, 7248, 4024, 4025,
          4042, 7235, 3982, 3983, 4102, 4178, 7277, 4179, 4180, 4181, 7282, 
         4161, 4162, 4174, 4170, 7274, 4172, 4290, 4297, 7317, 4300, 4301, 
         4303, 1248}], 
        Line3DBox[{3997, 7227, 3998, 4028, 4049, 7237, 4047, 4043, 4008, 7229,
          4007, 4055, 4079, 7243, 4002, 4003, 4276, 4057, 7240, 4058, 4128, 
         4124, 7266, 4123, 4150, 4135, 4133, 7284, 4199, 4217, 4201, 7285, 
         4202, 4207, 4208, 7288, 4211, 4225, 4249, 4248}], 
        Line3DBox[{4012, 4013, 4075, 7242, 4077, 4279, 4285, 4269, 7305, 4126,
          4082, 4083, 7304, 4265, 4262, 4258, 7298, 4152, 4154, 4239, 7300, 
         4219, 4220, 4212, 4214, 7297, 4237, 4205, 1209, 4250}], 
        Line3DBox[{4081, 4048, 4050, 4080, 7246, 4011, 4014, 4076, 4078, 7310,
          4281, 4282, 4268, 4127, 4086, 7249, 4087, 7308, 4125, 4122, 4149, 
         4134, 4132, 7301, 4259, 4153, 4151, 4216, 4218, 7289, 4221, 4213, 
         4215, 4223, 7291, 4224, 1195}], 
        Line3DBox[{1196, 4206, 4204, 4236, 7296, 4235, 4226, 4227, 7306, 4261,
          4238, 4240, 4263, 7302, 4264, 4255, 4254, 7303, 4120, 4119, 4280, 
         7309, 4283, 4284, 4278, 4277}], 
        Line3DBox[{1052, 4167, 7273, 4168, 4156, 4155, 7286, 4203, 4145, 4144,
          4114, 7263, 4115, 4129, 4044, 7236, 4045, 4112, 4039, 7233, 4001, 
         4000, 4005, 7228, 4006, 4056, 7239, 3971, 3969, 4074, 4036, 4035, 
         7245, 4046, 3996, 3994, 7226, 3995, 3941, 3940, 7222, 3908, 3906, 
         3925}], 
        Line3DBox[{1239, 4243, 4177, 7276, 4018, 4019, 4148, 7271, 4147, 4158,
          4159, 7281, 4130, 4097, 4098, 4230, 4108, 7259, 4107, 4061, 4059, 
         7260, 4109, 4091, 7251, 4090, 4054, 4053, 4052, 7238, 4051, 4073, 
         4068, 4067, 7241, 3992, 3986, 3961, 7218, 3959, 3963, 3966, 3932, 
         3930, 7216, 3917, 3919, 7210, 3912, 3910, 3921, 3923, 7217, 3951, 
         3896, 3897, 3891, 7202, 3893, 3902, 3900, 7205, 3884, 3885, 3888}], 
        Line3DBox[{4272, 4257, 4256, 7299, 4260, 4274, 4273, 7307, 4245, 4232,
          4234, 4247, 7311, 1234, 4275}], 
        Line3DBox[{1211, 4286, 4141, 7270, 4143, 4246, 4233, 4231, 4244, 7295,
          4251, 4271, 4270}], 
        Line3DBox[{1205, 4287, 4242, 7293, 4176, 4017, 4020, 4229, 7292, 4160,
          4157, 4146, 4131, 7267, 4096, 4064, 4066, 4084, 7262, 4113, 3878, 
         3879, 7258, 4106, 4072, 4071, 7257, 4100, 4033, 4034, 7244, 4030, 
         4032, 4016, 7231, 3991, 3985, 3960, 3958, 7220, 3962, 3956, 3957, 
         7219, 3943, 3945, 3948, 3936, 7213, 3877, 3876, 3916, 3920, 3874, 
         7201, 3875, 3901, 7207, 3890, 3892, 3883, 3882}], 
        Line3DBox[{1258, 4305, 4304, 4292, 4291, 7315, 4295, 4197, 4196, 7312,
          4193, 4184, 7279, 4185, 4189, 7283, 4188}], 
        Line3DBox[{1257, 4253, 4200, 4140, 7269, 4142, 4266, 4267}], 
        Line3DBox[CompressedData["
1:eJwV0csrpnEYxvHbeG2mKYdxLJKNFFaalJKFhbJRNsqOIqVMySFTZjYzZakI
9bKwGP+AkMLLRg5ZWJA1GjnNlEPULPi8i2/XfV3X/XueX89T0f21fSAjIn7g
KRGx8jliFUN5EX9yIuZKI27oNSrlw/I1Oiu/kF2iih+Vr9O/fFt+xD2t5Wvw
avebftP8KC/MjWgyT8nOaBH/EfXmO7sT8iNzMd7s79I+2QfP3aaZNEVfdCld
0plefgcJ3YO8Wj7Gb9ACfELCOw7orf19+kv/E/1YQItsnuakd1Buf9FuCW3k
J3Un6XvxJ94xozulNXyrfFF/RWv5QXrIZ7vPir0eWRe+oA7TWJYnaYm9JTrm
zLG5wJkRvpTPKnOn9DeUN8j/yfec+07H8VuXgWbdOb+DLf02fcQz/uNS1uEZ
r+YXdKb/ryxlHsiKeAfVgVC1
         "]], 
        Line3DBox[CompressedData["
1:eJwV0T9IlHEcx/HvmV3lIJd3nGAndAltolNEQ5NDJRyUFxiERHOchot/sFrq
iAjCLZHISbR/t4RgEM1xFBSYLdfQFHGpg4JHoK9n+PD5vt+/74/n4XmKt8ev
VVIR8VBSJyPaZD8T8SkbMdcV8acQMWhucbuSN1+QJ86+6k7753XT3mPujpTw
Eb5bD8lzrqFPcHVdxed0Gi+6d0xfl8vyj192vsNfNV/iSvKeG8M3k139Cldk
wnxgty+5b37B/dZF3JmL+Izv4iU8qes4w9/A2/h4b8QqVzaPcnln3/AMHsEj
egVv6TJe96xuO9+52eRdufv6Bz7FP8Xv7EzrFr/G39JTuKp/4TP23uIHeBMX
8Gv8wb0e8wZ3z9kb7pFu4CL/EQ/oJp7n2737T+6Z+S/X72wz+R96Dy8k31i/
1P/1Rf6LZ2STf2Tu4GtyFteO+n7caXxFD0suHXEIkfdMJA==
         "]], 
        Line3DBox[{4371, 4372, 4967, 4798, 5121, 4496, 7346, 4497, 4369, 4368,
          4934, 7407, 4763, 4384, 4388, 4393, 7331, 4317, 4318, 4400, 7332, 
         4392, 4391, 4419, 7350, 4452, 4450, 4406, 4404, 4501, 7377, 4503, 
         4502, 7348, 4509, 4615, 5021, 4857, 5179, 4592, 4529, 7356, 4511, 
         4512, 4587, 7366, 4588, 4596, 4580, 4574, 4576, 7395, 4691, 4696, 
         4690, 4571, 7362, 4570, 4704, 4701, 4700}], 
        Line3DBox[{4394, 4395, 4408, 7336, 4414, 4389, 4390, 7344, 4438, 4439,
          4454, 7337, 4398, 4399, 4510, 4583, 7365, 4584, 4585, 4586, 7369, 
         4566, 4567, 4579, 4575, 7363, 4577, 4692, 4699, 7399, 4702, 4703, 
         4705, 1466}], 
        Line3DBox[{4412, 7334, 4413, 4442, 4461, 7338, 4459, 4455, 4423, 7335,
          4422, 5109, 4785, 4954, 4465, 4487, 7340, 4417, 4418, 4678, 4467, 
         5110, 4787, 7410, 4956, 4468, 4536, 4532, 7357, 4531, 5159, 4836, 
         5004, 4556, 5170, 4848, 5013, 4541, 4997, 4829, 5152, 4539, 7371, 
         4849, 4604, 4622, 4606, 5014, 4850, 7435, 5171, 4607, 5173, 4852, 
         5016, 4612, 5017, 4853, 5175, 4613, 5181, 4859, 7414, 5023, 4616, 
         4630, 4653, 5035, 5036, 1554}], 
        Line3DBox[{4427, 4428, 4483, 7339, 4485, 4681, 4687, 4671, 7387, 4534,
          4490, 4491, 7386, 4667, 4664, 5197, 4872, 5038, 4660, 7381, 4558, 
         4560, 4644, 7383, 4624, 4625, 5191, 4869, 5033, 4617, 4619, 7380, 
         4642, 4610, 1427, 1555}], 
        Line3DBox[{4489, 4460, 4462, 4488, 7342, 4426, 4429, 4484, 4486, 7392,
          4683, 4684, 4670, 4535, 4494, 7345, 4495, 7390, 4533, 4530, 5158, 
         4835, 5003, 4555, 5169, 4847, 5012, 4540, 4996, 4828, 4719, 5039, 
         7431, 4661, 4559, 4557, 4621, 5196, 4871, 5037, 4623, 7373, 4626, 
         5192, 4870, 5034, 4618, 4620, 4628, 7375, 4629, 1413}], 
        Line3DBox[{1414, 4611, 4609, 4641, 7379, 4640, 4631, 4632, 7388, 4663,
          4643, 4645, 4665, 7384, 4666, 4657, 4656, 7385, 4528, 4527, 4682, 
         7391, 4685, 4686, 4680, 4679}], 
        Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/GvWIRy3KKc8mdgMUkdwxlO2chCGegsGFxZZXATo8lgok4i
lM1iJGUxGIhiwHJK3XUGlJfh0+f7fn9/v+fpeTpz+cnlmojISbUuYrc14rcl
IpOMeExE9OsS3uJrUxFP3I75i0vb3eJe/Y779JtO2g+ab9o9FA+Yy3qbv3J+
U7/gHv4Sv5oP9RpfcecOt9kdcd36GW/YneOCfsAd/AKu4FM8rX/cXeTWzfdc
ypkDPC9l7oSb0t/OjXDj5iJX0hmclQnzp/0+/2Ee5VZkxnzG1fsHCfOYdPF5
fc03eVcBz8msHHvGkh6WtBTxkG6UBtnD1Wb/1/1V9y/+vx2H3R8/hDyT
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D1IlWEYxvE78FDakKYOcjIIhEKHwholULCpIdsaGjKDMlEh/IAEU+eM
dBCDTDgWjQUOR22pTh82lYpBToaJVhgNUpgf/d7h4n9f/+e5eT+ONbZdbN0X
EU/keSrixOGIcyURecURT2W1KCJ3JOICNsgHeanP4rxUubtuZ9DdBf2UvqFv
ujPMHZVRfj+f45v1B/oEhtTxab4W9zDDTTjP2s9gDb/Fj/Fd+mWc1P9ghz7l
Xok7H7lu7jE3LCnuFXed23VniGuXtJ7v7IC8dV6Ab/Am3yLF8ky/hDv22uxc
M7/g9rBP38Fp/Sr26Fcwq//D2/ouFpRHzHBN5jKp5tcxw53Hcr0OR/QvOOZZ
S5jm65P/hqs47vyRrJgPybJ8lZTzZv6TeRAf2p8z303eo9DzzL3m17it5/CO
/t290+a/3Mnk/bmDyT/S3+M7GeDOYD/ekHnzhr1Sz1ww3+Nq8Ied49ipZ/Gn
fhbv659xCBexCdfsrzmf1n9jJXbzM/hLH3W+jBX6LX4y+U79m/wHwrdrWw==

         "]], 
        Line3DBox[{4674, 4659, 4658, 7382, 4662, 4676, 4675, 7389, 4650, 4637,
          4639, 4652, 7393, 1452, 4677}], 
        Line3DBox[{1429, 4688, 4547, 7360, 4549, 4651, 4638, 4636, 4649, 7378,
          4654, 4673, 4672}], 
        Line3DBox[CompressedData["
1:eJwV0T9IlVEYx/FHI0nMymuDhCIaEkmLg0i0GNYUId7BRUoQKhq0P6SCiCVB
gxguFiJBcRG1qCEFo6AhJQoikzDKNJRAEqfMoT+U9HmHH9/z/Z3nHM57b1nL
hXRbVkQ8kIHtEbmFEQ2piANyfG/ENj4mOSURqwUR9ZKWY/ay9aOyz+xcccQH
/SH9Oh/Qv+c3cY1X6l/zCvzK+/TPeLZ7r1sv6krtDelycIaf15dIl65fssx2
83l7RWbu6zJ8i9fyxT0Rk/wy349LPJzpsJ7VpcxknCnEd7xTf4234FP+F6/y
J76lwMxb3RVdu9zR5yXfoNuJr7BV35Z8vzziP/C0ubO46Y7nujDbpNvQPeSN
eIo34xT/hb8lJeM8jX+crTFz0npEt45VfA0z/AQW86N4m+/CYVzBe84uYytf
Td5mrhYH+QLewnz8InfN5tufte7TH8bdfA77+ZHkXbwOh/gS7uBv8AavTt7u
js9+53LrS7oJXOBV2JP8pzgtL+Qc75WX1v/MfJSfzpfxi/rH+En3XYb137BC
d8beQVzhy/If3UllNw==
         "]], 
        Line3DBox[{1560, 4707, 4706, 4694, 4693, 7397, 4697, 4602, 4601, 7394,
          4598, 4589, 7367, 4590, 4594, 7370, 4593}], 
        Line3DBox[{1558, 4655, 4605, 4546, 7359, 4548, 4668, 
         4669}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJyU2wk01G34P35RSIlKkoRKOyGFClcqLUqLdom0IxVlKRFalJQtS4Qskez7
7rJlX2fs+87slkqU+s33zDzP9P2d0+/5/5/TOa/m/Vzdc3/u+XzuZdTKS7d1
r3JzcXHNW8HFxcNU63ECl8saOrDMgydnpKN5lzWAmFizg5TLELJMYzv013zW
272Vct8H2KbAkgLahmd8I/C//1wa/Fc7qrz6tRv3JiBLB+TTujkpz2DAUnb9
Unb9Mnb9URfhq7xcXcgyDj+X6BrrbKX+tX2NjWmXe671I8tkfD4aEt51kvTX
+mrZTW9e7yIgy1DEAk1z/Qg6dO4+Ipi8agBZpqB/2KKBXXkj/7/HbVsA1T12
dT+yTMZ0pe/rvJ+TIPH74qPKbr3IMhGvq5x/diOKDHmtNwyKizuQZQyO3foW
oepMhUMxetbvHrYiyygUOF3Lf/IoDdzO2CzGghJk6YObDsXG3rZlwCnGjANl
qA9ZJqF6inn15TQSKMyfyqN8b2YbCUd6I+7TQmgg9zs8b0M4EVmG4SKUSzl7
iw6+N6/uuv/oM1tvIM+EKFW/+PvnNd+b1+WFbT6ydMdmPx+ZrCwGzDjzbnSW
eYksz2OIUip9728GrLDqPR7RnMjWEYQWS90opjDgwB4dFT/3D8jSEosWZJAD
vzPAMvn18aHNWWxdQH5p5tCFBgbEnauyOF5VwtYHzj9cdGniAQPsjS6oqpm2
IssoPPk6xXf9CRo4375mMDZNQJahOEYuNnZ/QQdR9nWJ/l/XZf78UOXg2T5k
mYQXLCXLBCXJf/3cFzNsXdt39yLLRHQB3ssd7WR4+ihkXMagH1kmo1SLu1Tk
eRK8yDrSbnyVgCxD8d6Q4qei93Qw2FI4S62wAFl64PnY3++c4xmwZLCZV2Us
Hlk+wtJBymAF8zlKlvg1OEu+l20ivNyj/aFk5O/9XO3kfSpmpA9ZJqHjW3d/
kVQSOBvkJMaeaUOWn7BxnC/w5woanDuR5PhsuAlZRqCeoBJvWAsNrHOiN17K
JSDLUGxTTF+j7EUHelTwJvL8PmSZhN3bGzLfnSADzahxr5JZM7KMxI7YpGuQ
R4Nt5+pjanMJbEOh+mKJ+BpmO9I7R/YKVPazTQadUufj8XNIoP6ztXqrQTzb
R3Bub1uvwejf78+85AexOzr7kGUSfll2dkNgLgkGLk80f6wksg2DuoF39i3X
6bB3wy8r/41NbCOgY6eY5OefNLBSGeZVye1hmwCVC2Qi1RUpYNydpuxkSWAb
Cns2dkgeCaL/dfz1j5zb47KpmW0kqKTXfjpUSYM7L9V8B7wC2JrCO/tK8x8/
GX9tp+Z5WMvDyDK2fnCM572X/BXm/SA69rRsMAJZWiE37/qJmEkGNJRdc5Pd
TWWbA0vgQeF8hc6/tj93QdTMNJ3ENhNoV4I+f7Hqg4qrIsLWjp1sYyHxgbyy
1GkquH7y/rXKvBdZJuJa39ESs1wySFx1kxIbHWabDhXj6g80eAehyXvZZV69
QWSZisKX1pQYxQ9DmrROc8uOTraxMLVV3ijuBhVuXxZ6nGnWwzYBWt9EkHUu
UWBXx6jawwQisgzD2dU2807cpEPWHs8jaZeq2QaCxMc92dkr/z6eYRv4bUfG
B5BlCppcG+RWnD8Cfc2CwdHL+pBlEj7yU1JM0ybDh+jQxSpcBcjSA+njajsP
pDHgbOuDPcbt3Wzjoc5sy/aUOArobbdKuio6xDYNHEw8hE7ODIFJmk7/nOV9
yDIJZ5sc4i8+SIYJ46dhEYoDbFNAIflVWmfiCAgeE07/MN3HNglA9e6hwEgS
bIMR/vP8/5gJBxUlEtrj+2GFeUJc9GEK22ww0JbeX32mB1zNNZaklPezTYaT
IXobC3lJYHPhYHXpjWG26fDoVbwlMWgQgqYo+7R0epBlAj4evvx2ypIC3Jqa
+w+tHUSWqWjx/mz16a5huOGv4/TapR9ZJmME7yyLL6okqM5q4U3r72YbDzfP
0Sb2xVDgS6ZBupJ8H7JMwuj30j3+O8nwroS0sL22FFn64oHNdeV5t/7+Oa6e
vWujUnEnsozFo+KtYxf3UsHD1lPlOKUJWUbg/J36tYPNNGgJbqs7opqNLF+i
/t23io11DDDb1h7o9LgPWSbhtz22d8x/k0Aqws3s8rwBZJmCD2m3nljUj8CI
gc3PO94EtqEgdyFn/bW3dDg6nus+vKgHWSZgVv4F4UY/CrzPqMlcKF3PNgT2
XtJ78LSODtdDAl+cIqWyfQppVx6+s+5lgLtK/UC3diJbR6i3vyH1m8qA4qcy
z45tb2AbDrSaHfoOp+iQUlM8sNC6ke0H4I6Wd+5YQQfPNtljaa6DbFMhWeeG
5BuHYeAa1Ery2dLDNgG4sXPOr6cUCN5frHXGcJhtOnxRc1RXiBqEw69zpX/4
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
f0XTCUsSSKVuLadWD6J1vHfuU6JoMHAoeP0zLibsrJq8Glj2GSWY2PjL3CbC
g2/q6o3RTBjS/8U4t9SKwhWAz3UUD+80gl7+JtIhUdO560D0O/QFHfmuI0wG
eGzlEFVEg8uDti9fQyJEgM/dFU5/mfi7jCq9psDtLXU2P2ur0YuiL5mWdjQ4
UHYuSEqDDDfzRkYr3OqRznR8bG0QHXjkbNZtOcmE+ucCKeuv9KKmfU5rG0Px
oDiWf6dgiA71jyeWE0R70YfO/g2/coiwL964YvcUFa68e0zd1deN7HSS6G4S
FBB9Ml3mGU0BVm+SRfRIHzKvq3Q8LU2Fs58xt37KMYC26nkRI92C8JYBT2TX
kWAuwfyVzAwd9jXv8uzdVIvO1T/oE/9GggvS+UmkVCoc1MBZ+EwMo5KsmwnL
CZx5epEzPoLCwcWCvTnlY2jJlL8uioNTfJJHXYSzqaCkMVc2b8eJ/3Zr6cuB
ZFBinBHhSZiEr/ZLD35NEVAK9oZL6SdOvUZ7iVbvIMDVCz5aSeN4lG+8YxCU
KCCb6vBSUpsADqqn1Y/ZTyL/k4/HVkyogHvXGTYQPwHsAPLOW3fwaCVniPZC
mgbxUg9SPakEyODNl7R4MoGQxUTJeX4qJLU31xU+IkL3EwEFVxUy6nYMF4p8
hoetYhj7QQ6u78wcvW4zQUZdF8cNm3F4YBk9tDQqoAHXP/v1pitl6NDOmY2X
fSlwZV409HgKAUzZ3DrWm0mo2DL22K8mIjx0MHhnrEMC3kpfx6IBPGpk7tDq
P06CdJf0q1rGZEDjuyODOTjzr++szbkhIoChV/faXiKIK9Rsai4nIjFpHsJa
ChGeH1leqrUjQ8XotRvJ24ioJ+q3O8Li4fi7pf0eSxSwwq7ho/KmUKPS4rqN
ggSIoZgL8RhSYEw56srd4kn0IYEeHniRCP/sgy6cayNAblJF+cWbeGRcnsWm
M8kg/rDyaIQ0CbT1HOVNVwcR1cdtkPyaBjjX2M0N5wmwqUBXR+v6KNreewpF
+tKA26fHJTZ2EiZ9jdyUXMnIDJv3QdmJBFsHi1OlFyZB9cqXzZGyJJRoAhbf
bpPhNoW76yQVDw2Wg4rLt0jok2QjXX2FCFPX19U2pUyBjsHYtds/iehu8v64
my5k4HrCbo7ZNAYbVZQqj4sSUGnCV/UoznNTb5g9uiTeDp6lnoVRIThEUJWy
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
WBs9dZ8Bsxamkz9oFLRkAZodOSKhtY/2n/dzQnKn5xYPEloyD23xsnLfep4B
5jzrf1/YQUJL5qEV7/pbs18z/vN1CJdPxNU+paIlCxHn1ee49+FUMMsvnfI1
IKIlcxHHwzGPjJ3LuiurywSm2tGSsSj9VbKEAjcHTqt5K9hyx6ElHyBNo7Mv
LP9wQClO9tro04plg+H6iIVGQS0HxOIsvtelty8bC/EbV9335ueA5O7qnb0d
BLRkDlL6FhVe5oXluv32usWetctGgmTLb+6SSA4csT6rIBzUvewXGEWKyVnR
k/Cmqv+0xb1ktOQj1DImSNP4xcHOpcaY6VdEtGQuiis0vcg/z4CpiNzg/TpU
tGQherD/scEt7HyRW3ekzu/KyLLpIC6x6VlWPNZrgk0q0u2rlw2HKWV72cup
WE/c11WZJF+BlgxGJtuC983VcaA3xGvXr8RutOQXtMlo7uPg2/9eb+tTZm66
/a5GS4YjPktDhmACBzYesY0b6xtASyajmzerPLalToDZ33zfkltVaMkwVBnC
/WMmlwNxiV7lYjVEtGQuyvlo0T7XyYCB1HRZ/rXty8ZCylm/8D4RDogs34/I
8v1sXb6fLaF7ZKwb+tGSSShop90O/NgErO4cbgy4SUVLFqJF9c6pDUXY+vQw
qNpYTkZL5qOniXmeNip08H33JOPJHSpashB1dOzSFc6iQmnU6zKvhxS0ZAFi
TDe47HhLAxXHVatfLdahJd8gXkP/K+rPObBGXE+/8SARLZmLtGNeqiqoMEHy
6sBtv70ktGQe6k71j5B4zoCO38pf7bB8u2Q2yEzFRzdJsID3Pez0EeldNgGC
dWzuHjH+7+diLphln2dHRUti7w+H13U45X8/96z+buYKftlsSJo6YWH4gAVT
FxrcSfq0Zb9BvKBBZVshBdL9dVl+3OPLZoGd1wrzBSYLrHD+DUwdyrIFcP3k
76kHJTRo45bW577Rt2wiPIzWD98qNQlHFSQ78tqGlk2FXZpm0ZqnJv7z/req
VdJsj1PRkoVoJVO3mD2CnWvRo53U1q5l48A5Yf/Mx2+T4LhdLs2+ErdsGlhQ
vYty10zA0fL0icv25GXz4USB/MlebyyXZuhta147jJb8iuRf3k+XmGFDmCtf
zIwLES2Zi2pmNuhMcTOB9rWo9rQqcdlc8OD6k/fnEBNIIXM2kdh5umQ+vH9H
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
CDZefuZu02ssfsodp5vT2ex5wNG5+2wUBfHPKkVRo/7yh+81U17uIaF3KZTt
oRF/7VmqU94dIk9CaOfF180f/nJ/12Cl5QokZD1YF1wS9pcf61oQWpAjISOO
bPNnn/7ys/pcDQH0UTTLPYWyNP76uXDds7qxAyS0zVSA1sg2j5N52Fzj92Ek
qrdGOW7H3315V60SLsfGB2kl7x1nG29rtKc2DvNDXPNpqjubHwI9sh57Y34+
dF+U9oHNz09nNqxtx/Yl9jjANoZtX+0bfzgbR/Sjz+8Xwy6y3VNyudiFNZ/6
kXnair5kNu7CJ1BchY0ffjzLo87GE8RpgkmlCD09crCrmu0+vnM/YqNdhhBF
eLc5YuPtnfrvfwb3o6B15tP7o//O87MkWlbRpQu99NvyyuvH3893ztMdMUD/
4ZqXb19n467ntLWTp4ZR4HUZa1E2v92e3nGWD/NPjpagzSCbfzarymhH3+tC
z7V8eDh//p3HWe6e8+YHXciloFymkG1+yYPbNSu/IhSix2u+ovyv/U5tWflv
V7UgjhpyqxffX66qPDKq+LMZjT3azZ+8+i93p99TnXLoQk+O1DRy/Po7/0LC
K70DmB8KZAYUrrD54d5RfQ5+zJ8l93Q16tj81lvnNncSW9fuqJuuD9u6PR8J
K0ZWtqC3Hcdf+7PxkzKPpdYva0GSiYp3Ftj4jsNfQz5g/vTLGDx7m22/Sxqx
5XxY3rbhPb5vT9Rfe5wU3Urs8xF6MmHeMchmj7aQ6Mvdzl3I0HupkXv27zyn
e7LSpAoRsqk9Qsazjed4lm1Qz+9ailv6z7+//G7QzVI7wlSphu7o//D1V+nb
H9zpQsI8BPw1tvPiy84bJWBcxMyq+ywbP0f7tRBZjNDNA7kLTWzrbjSM/NZe
glBGlKDCNzZ+jtMpX3MzXn0jfeF/1vU5xHF9/Vwzmot2V3RnO8fP2+0o4Zwt
SOBW+jQXGz+3MzJwBUcL6n2QbyjOxtf1T3Mq8LagRfXej25s/g+tKPc/jN2j
ap5Oo8ts98iydMhUBztHu4MbD35gG8+D7OvUb3ch8QOm52PZ9tv20eEW//0u
dPEF9QqT7RyZZ+3JGovNqHxvwc1DbPZcfORQ252HUKdH8AYCmx9IK98evydI
RnHCe08vCv/N2xmpBnXTGFcxoqA3bLwvv/tCogAZ8TQdikvf8JcPnveyKlze
ghK1tm0ksdmv0vu8KRfzz4yj6rF1bPbsc1l5oJ+7BfmvDubKYBsfvm0NbgeW
N5yd7BnseaNAN6sDsHuRsIr/SS0bN3ASugJYPWBaF+vex8ZLBtfWHqZPqvdN
MP7nfOM4PzZrMUjqY42//ocfVfDWfoIQZKx5+ayCbZ4pLvcdrQUIFL5IHO5h
4/uoUzur0hC02eSYcbLlh+472c/NRwXgoCZxkX3+d27DOmuSJtXfPWH+z7rc
rQKSIRJz6htMcf/Dd+Ve+UwrQnBSLburlW1dHZtv2lXFCPiLPzmyx/mWecmt
zZj9MuGKJ8rZ+DZqlI4VZudmv3OUZWx28u70uWb4oAviC/gOp7PFT3aUu/hT
ly5IsXtx+gEbl7i6rew11v9Lu4ay3rHF4YWJl7Xn7nVBdKWWHD8bP29HLohb
1QKKtlRnT7bzHQyKlNuy2AxtHmK9R9jiwcPmWCg/tq+b+Hl19v2KkS4rZXC3
QKMXKSuLbR76q0xzPE8LXDdddTaajQerF52WXtkCC1rFNh/ZuCWXAOs0Zg9n
gMka9vwpm8GsCspBcIQ3byedbd0sFzvq0t0uuFYnqSXBtq8tVbs1rzt2gaDW
yMNCtrwXbxmxchfmn9lkzkPxbOMZbp29lzlaYPtxmwgRtv1Gl5fNa97sgqzc
U9sPsM0zXGtRFlWCnbvJ9nn2fDVp+LxCDuMLybSaBjZ+M9ntqLbqQOmvxN//
Ez8cUTe0NtF+l45UNPwPV9dI4crD/NxmGx/NHj88GnvknvK2gO6DM/X32fzj
Neq9OIDxaz+vsJzZ+D77QGMrzM+3rmbnhLLxorSJrxew8fU0SY2HbNy4XYN1
/n4XqFPdmgbZ4opeULZZGLvXhPJhWfb37qB5ZhqvcxfgJnq/r2bzTxinoIjx
rS5o+Rqa0MLmZxnRR5KeWJxwHCvyzGVbN86W1kda3gLr38s8HWbPw0Ytag+w
uK1QkqOuZJvnx7OF03exc39whNdRlY0LvWyyeIPtq1X56Og9tnle/Hz6/Cg2
/4XD3zPpbPzZ3F7yfz5ZF/f9f9+XvRcdan+IzpXKX/vf+y5Zavo1ELu/J0qm
FNjzD/lw+cqgXASXObj2UNj4hbQjceswHnCOKkNl47v2eTcaKI+W8r/7+T/z
c42/Uun93QwHebvHDdnicIxTXvo+vq+0e/Z/40f/Kud0TzwCzXNnxrey5Y2V
OWVml5e1gGyAQcYs234XuiJzAiaaUc+THub6NWzxhmRXxuYi9HjLZiaZzc4f
YnFdP7D3yDjQLWKYjQfOleAysXNZ4edZssAWJydXPLuShMWPYpK+aQsb17y8
XC8d838tGfLZ3530xlaZKiyPVTzLfuXA/j76pzhFYfN4b1qm3MbGZ11fXD+M
8SDxrVIjbHxPTHnCfcweZd7NXKvY4uH50zzfg1j+PLh9UDOHbfzYsOEpZyx+
1q7Zv+cQ2/jAcGW3F5g9BZWy9HvY+Pth0F8ewkTdHSGFsxVxqOLi2amw8H7o
W0V+r0FhovzQHUuM4A7A5bWFuJzogICKq4El61iooUeg8LhVO4ycfJtUYdMB
e4RH2pRUWSimItH4lFQznLq+VKJ4EgdGpoGqbllU1Lyv0IRnpAJJKdgMfv5G
gv6btc+51FjIX4TecMXWB2nuevx4YbEH+gXbvj3E+EnD4rwyfxfkIb8o/Gap
B7L4U1rfTTJRLd+zj/tycDDcu1ZPxbcVVpxW3yo1x0Tx1LZLWp44KD1+L13G
vxX0DCeDwzVYqLAiJ6G4vgNqFEVC5vNbIVX/Xvg9NxaaW3vQW9ywHaY27FrV
3t0KzzqqRnVfsVDYnMKk41gbVB0+0M4cbgXKEeFxfxEWSh0KS2B8weZfu177
P/cvUtbrYKcgCykNbZexbMIBQ6PJawQ7f58XJncdL7HQLnG6ApW/E7gNUkNw
Ri3gNqG2KcKMhWwicy/zCHdC4EMJuwbDFgipUg6MxMbXbFVMtqW1wQbBdyIH
17UDv95S8p16Jmp8uFTWFYKDjOlP/vP5bRDxfrWkaTUTQeizaLtP7ZBGHTpo
ONEJyxffTum9ZaKV3S/41vF0gkLem69X6zuhrcBr6WgCE73X5yyJ2YID8VGD
V1JiHcB7Jtp33IyJTi66JE5p4SDTO5yOj++EPELUT/X7LLRHUNj17q0yUKfo
qXgG4yE4ccWFV6+YaCF3+7w8owFOcwWF5lv0wEOTucL92DxByqqf1dRaoMis
0yFTqQc+CBPCpzE7vy9sjRGurQGNdfLNx4J7oF746VPrpywk4LkKt2VnM2Tv
+kE0/doBv0McVpVWstB3PYLLQblvMDd8+7d8dwckKD2bub8GW5e6VWUTLw6O
XBEtWvaoC54rpKkrhjIRdTjvtr55G/ySHFC9Q+qCK04q2yXGmcjD5JvqKuEm
CC2+upchhYdF21z56e0sZLuO4/LuzjoIvpkqFmKKh5kMx0dGaSyUY1Ubf7K9
GXQ0WVdwWu2wSe7igeZZJmp2Mo5Ms2iEO9wu1qv24mHyidesJXbuyPd+tLxP
EaT0vj8Z2d8DirdyL6ZPM9GLg1PPvJIb4WdKgcDcLjyodpzmQkpYHFZqnmys
joNLrfHmQnM98HV5j93DO0x0QNLCNe16O5TEyheK1nYB7bkx7kYsC+3vmtAV
yc6ALyK8k+75ePBZ4Xvh6kcmWtXa/d6EKxz8FJw/OXzqB0Np3ts12Dw6WtdP
DMYVoa9kiyXT+/3w2Nm51NObiVTeTz13Z2Qjc0d0YduLfigNK5LeUUNGvO3n
vsZcGUITljx+HY4ESHLoDvg2T0bBsc3g5DCIeIWvndAPIUAG00xX1oeJHMqP
5UjbZ0J3RZe46rt+EA3cUld9m4FoQolvE5or0ept0b+8LYdg76F1bnxWDESN
sKgYqahG37juxX88NQTSHkr7dhIYaNejrNZ57Q7ok/q+lNbYDQFlBdkrjJgo
dHH9wElKCzTR+azc9/XAgceTv4XWMtDGwblNQ2ua0MSKduu68UEgfU8pyBZi
IJI/x09CfiO6kigk5DA1CCM3qhVqKVT0Wjh7mXVjBnqjdvqn1S8SiFGIFovb
6Gjc747p2rN1cPbx7mufbxAgMrZ47pc/HYnIvuJtjk+Ag8Ga4fnVBODrGNda
4mSg77sL8jwjmoBus+Se+XMQeBTk4jW2MJG3bFbkMnwtWKz1excv2w+eP53e
+LdT0YcE2sajg8VIy4R4EQ2S4M0P79apISrynpMYim/F+m7e5bE7goehPKN2
47oxKhr/afbyNtY/ZnjoWBZEDUNexaBN9wc6OkRgyke8C0VHcY+et1QSwGrm
/D7nVAZ6b6rZx3MhF9Te1h+cih6CGZmEq3pzDLQU+bHiJL0eWj8f2+q81AeZ
eTPr22epSOz2aGGewEPQ2KONjJeNQPNaPUeOaAb6VCupWsUoQO93aVvXYPMs
eH72LH5LQbOIzm/p3od+Ktr1fFpLBM3Oai1ZZQo6nPXzKU27Dm14c08wQZkC
Jnfuf6FfpaBcy4fmG8LLUVSVl7PiDQo8qjdOVitnoE4tra3HVD4jKmHOnFI2
BBTDGx/iqhlIef68477sAKhxtuzVqxmCws+nW4wZVBS8nCV/900G/Phhcz9g
mgRe3jJT40GjKCc9dIoqjUOG3GH21UNEkFA4037w6QiSzztei5b3oYIwO0kz
7xF4/N1kavd1OtrLehC1erwEzY9aBGskEYD/rdLtvFd09PA4YdXB2Uw0kal+
VqaAADgv3tBH4TRkk//pUrBlG4TbcWr6biFAGWyZMBSgI89LxBFtyXroDdB+
MXCZAAoKCwqyyVgL+Hs3Lce8Fe4X7cAtpPSBnqRcq6ozHWW+aVpaxSyBd2Wz
SdUxBIg/t1RyOJOBtghxsXTUs9DRQNPi8owhiOUpT9Z3oKPC6laOopYOEHxs
fGtUEYurc6JjNW9piFZvLBba1oYq33huLRIggHGDd4BjJxW5iA6mK90rhBDy
+QQcjQRxvsd9Q7+xEClp6OnqoHIwnfC8GJOMA2ej348E6rC8GkNPN6kpB39J
z+uhiTj4sb/u884YFjrBtZ1VU1mNcZPQW/442HB6UAydxeI/22i9c14Fkjw1
uMctkACDKw7EvyqiIWTga9dh0Ipk9XOf6+4jQHHtXaeUXXTUYiFYmvekFgnw
ux0zvkeAASNL4Do6igIkZ86/uo9H9lfxx31CiSBP5G3hKyWj7niLlQavhhDT
MYXpYkOAmvUrOSxMqehaxFxcnl8j2tY7Y3DrCQnSTuMFWipGkNKGA88POPSg
LE8/s6bqEcg3M95je5iMEpL7U+8JdCFZn+nL74AMC4JWn13diUjYlqKzRbMN
HW5WdbX6QoUIpxsyL5YIaN+ysOTbEl1I8LNao/gqKqRIh+JsFAiowNp3RO9S
P9Lf/PjDzhkKICZLdIqDgl7OBxdc125CS2PZ23nXUOCcf73c9hEiMsjZTtwf
SUBjZpE6h4lE2O87cmo2iIKutL2uPPL2OQIW1TU3hQIJZaLmn22H0ZLe7WhK
6DCq7926dYFMhqrK93t+kIfR68SchxSnQXRf4AnfGk8KbLGgGiykENHugPWp
5940IY2pIwde0qhQV+U2Y1s1hKqqn0ApDxGdlMsf27mNDNqbu0pDp5rRTqL6
B+bedLB7fe855+8xOLiyKnBBDKHNsgXdC+kMRGlvPNkqNgShKYe4l7Sa0cHz
mq8/LjUgqfvLTI1Pj4FQs6DG7/3NaO+eiLbLOc3o60uu7NvbxqBV18VmjtyJ
TE0lzO6QySjU66Dpm4ERqCAWbm8YwCE55OV0PnUErW/avj+5iwzmzxxaxQOI
SKM39cUphVb0sZ5/VVI1FU5cvfY1pKUbJZsEf+7qGkKKwS77lXDYuYy9+i6R
040yuxiChXuHUepG0p4D6VRIs53OsR/qQoWH5rsqj5KQf+SKzeQ+CpTo7G/i
DOpCZbsSPUc/k9BOjYsb9MMowC26r+jAz35Emc4X/cBFRuUvrUvbdElwKPBO
6/GkCqTrljud+JmGSi/9+vTenwjrFVSXm7l9Q2GvBa4cv0hE8Tc3iMc50WDm
cWoKX2gdGvzyvUmFQUIKBWIb4CQVbof7GGzNbEM3VuEou+Ro6LbW1+m+BAI4
PuZ9f0K8Clnb8xf036Iivh7uazY8I7Dl4rkbbi/6kORWB1FXPQoS3Szo43iJ
CImBW48j20E0aLf24O1AEhLUbl7Woo7589PJzUcLCAi9JR7XHCEhA9uaKyVY
XpJ+OHUhN4eAcn/yt9/E7Ol7+j1NOYcAHYlBLouyvYh+YOjwSadRFE4x0O64
SQBPPvVflIRW1MnLd4y0AnvfNvLtHIkfhmVqz2b9s1rRKosvIXXzNDSnO9v+
K3sYPvB95UgM70R0GTWH84oU9OtJ5ILmxxHo9Paci9DtRPFXbhhlv6KgxQ2l
E9nGI7DTyKWxa7gZeQrxL6yqyYGz+D2iLuNjcGmeXzvYcxRN3+m2l47EoS9N
u693tRLhGa/InU2NtWiTGbeY6tcR1Bd6y5o3bRRIlx5H2aTWozvXPl7r+TaM
fu+MpXTY08GYln/Pa64XRSQuHj3qhUOnLYk6c9/p8ED1USEhtQ95xLc9d9Rv
QdderdlyqpoBGd4Le2RlmtBKoF2UK8ShkevEYDFFFkwUJ55dqq1GtBeHQn8S
KEjVvzlKM5MMTVZuEgph/ahLRrXNhxAFuPOpcfHhTDDZpui3XaUfRf54YWrZ
UgGyl71/3DnHhPU2Z8Q4bbCvLz2+fv98OchvMik1taeApWu9ksdNChL34D0Q
kIhATxZEalwoIHvUcuaMBAmd2aNQkjuYA9NvLB4JPqfBNXvZliIpEkqK3dB3
2SgaqQ/Qsjs+0eCBSOm+4FIi8ogOM+M0rIeq5q+2phto4K3N2+OyQEZrnT5y
K+3B6o0f+By8EAWkI3bnGGzsR59yh2vdBKshdfD3FlktJuiVZX+fDKGgj58t
dxuIf4IWsTPlYZ8pgLNCt1ziiAgJRSYpzjZAl86UxOXVNHhk98XV4nY/uu5O
Yk7RstE3cZ7ZvNdM0GlS3jd9mYZ+9Nhvz1vZAbWTio3hywhQKsxRVX6SiroC
Dm7Tym2CXp4FzpyHJJB1lqg+8XMUSbzDr7v3qw1eXI7ky1Qkgfn8QR8TfDNS
Ofy65Na7UuRyuuKGQvsYmH8+S0odbEbH3Z44LNuZB+e7TKXCGGOwbZLgHWPS
gfLpN7tRzCiqf7cjOVybBBVDw4n7TBDS9ORa3xzBQI0utSdzLw5BY/fPi0bv
KtHIea71SUQq8hC7k3XmOQn2L3K4bssoQ173xy/tn6ajr7FqXSeKh+HeEyeR
NawydOqBH3WwB+PmBs+/EIeBOLLDO0epEt2V5Ml5Jk5DlyIe5U4fJoGhUswH
28ZypO7jHP5Fm46WzS6vKcwiQLv5tjuFmxEaiZrLO4W95zutA7ec2TQEX/ed
uEgMYcLoGv3Fe15xkFC3Wq4d65c1LqxQBrMxiNmlQ08PeoBsX+VXOqh3AgUn
qLTj4hgEpCfRzlj6g+7hXTRt6IRjL3OTpAXHwImfZ/3Iog98f0DKmyLhgLZ6
w7rm2lGIceNuveDbgTYc8Tmwcw0J2huydY6vYUHbP1oC3qOhZqGdPWBxfufb
QSEWfLt37BCHfhEkOelsHOnpgcsv0kL3Fo7Busp23Pz+JHB4KXBFL6ANum9o
eNfnj0E87/CbrxtSwN/RqU//bRuob3TOOxiPcT1h9+rtueAYs+tQqWcbvBnw
1YkLHAN/vfs7GvHFcIPw9padSxs8fSpR/sR3DDz+0VLI0vv+ieteGxxAJzh9
6segi2vpztUTeWDx1rAm0rEVvqRsV3RvHIOXpjPeN/xyITcq7+bWG60QWHNM
5HjmGLz7R0uh8dabGmVLrO8+kVETjnGyVLqtT3gp4MLTfEwwXjHNIy/9ZAxu
84vPkM2yoPR9hl10dTu8vrBm/6H3Y7A2WeR9s4sHJE1nbbfqaIfJ6VO3tVaN
gWvhfbvgmATkKO34eqoPB7PSCzv2L7DAKv2n6Y3+TOT57rBJRAcOWJajtmMm
Y3DCYEnUZUc0epFwlVPiSCecG137OJjFgu2LUcf5CvLRRWf3B5ENOBjN0LiS
nMgC/Lii0qR1CojHvL+/GuHheuDJvR7cLNgiEyGlIIBQxRuhHN+mHuAwidti
SmfC+anKIjneSnS70Fg8IKcH3M/eqx2UYgE0P1T3Ns5GR40+XZVn9MC9ql/b
zp4YA78m3oKDxZkQtTCd3CPfCaanwVZOBvNPcwL+6pUSOOe+pvTY5k5YSiT6
fDBkwRoije6eXIUqt70UPOqOhw+87zedD8TsXH/bXSsqH0107rw+n4SHZsr1
WvtUFjjfzZrGWSSgZpmhYIVSPCg935zGysLGpx3MuSrxGj0T/Dxd1oCH/QqQ
Ym8x9kdLIbpfhPU6vR3aAsb0bdNYUFVY3X7/TBwqXtaQ+Bvzg/26jsD4Iyx4
3N+2NHHhMRpbY4cbWNYLvrubury+suCAatiO15FfkPn5R50B2Pi2AEZb4n4W
ZH1FpKbFVLDuI/yOm8b6a4snwTrPWfDe/Zob41wJejTBu/1QFB7mNwY8+u7B
gl//aAn06K1Y7RiBBymH4jNWH5mg8NjlqIFUONolxHA7j/XLp3es1J29wwTV
7Ggk6l8EbqOCV0ewfvni24/3A7yZYG9LNJYiZ4Ow8INBVaxf3no3aP3NISqo
3HaL2TGcBzveimySxupw7S+SvruYVDge5bDbxDgTJjXljSonSEA6mVv19RUT
GvxZtVE5meirqlk/T1A/2H1aI5haxYBEk7n81xFRsPMWw1mtZAgUQzOK1MoY
MKpSPGndmQAKtbQtBnlDICX59vn0eyZsis+8v45Wj94ER1s/d+wBzcZS1RAS
E15Pe7IoFZVIfgZ/RTSjBwp/zaGYTwwo+keLYCyZ80tQ8BAc2qEeYx7FALNu
ze8q04WwYnPgqz0Yn6Y8tti1exSMwz4YW3fj0W4es+pbQUTgXxz/hV9PBUed
NMHvOn3o5tdCg1P8w6CPX+ooOU4DuXOPjHUXOlCgmbU5cWQYHr+53mq8kQ6Z
0uuGfKk49CuSZq9GHIC+5QraL0WZsNJYi6LGW4dqvK+KJEn1g8SX2i2xvqMw
UFOfkWWDQ37C5zv24onwOnHLlRxXOrz9R7F+x3s0jD+RAKMXnr22eEIHj/XR
nuOx+aDKc3VFXgrWp29Tb1pZT4PbXH7nxCJaUKvNhHKcMgHy7/EUP9zLgK8b
FX+3P61H7/3687MEhqB51aXmsl8M+L4v2814rh5dkdswVL3QB5FhlzQ6/ChA
duw+Kv+sD8V7nonx5SdCc2gcp1UlA2zJmi2ygaGoUNGxOPHbEOzhRg9XzVHB
jtwmtX+rG9Dbnh2v5BgB+fM+Ar4SI5CU9PiCnPIAQrxSdOkdI+B55vb8+BcS
NEzp7hJOHUIBE5P2DckkGCoosvyYwoAzphd2TZTnoHpeHzGr5CHotZjR+v2E
AWJpbrvWrKpAv7f5Xw2/NwQ8r+fHzy6SQS/66H6BM4NI0tjukGIEAdKesbw2
N1PhJvMnb+rxUmSusf3ldB8JXrzTaW+ZJQOrR4pLRakZjbtauG3kpIC84Wau
pWN0yPNd7DjkU4Ual08Xf/cjgK3y76bk9XRw+h3d3uH/DbHuZhiV22H9mh0z
dcfBUQiteDQjcHYI1Xgamr7+PQhepaRzIVOjwIUnEpqn+1CU7ure6bEhsMfr
yhQmMSDUdCKg36oV2R8Lkz2O9cuu8efi9pRj9f5z41O+r/HoYBbtdI/HMFbP
R/BolDBg7FuR4AGvRGRlo7rCDw3BN3CXaj9HA68k20AXjV4k+Sk6auhHPzQf
0/W/9YEOG3TPR3+K94Z0/1P6FbUEWNW+e29cHBnEhNsOKlGGUFjqb00fUwI4
h97WnR5ggcM/WgLiNXzKeoU4+LTE13Z1iAUpQlqP1j0uga3kCAjEuMyVGs7a
nyz4nTVZ1HE0Bwx7TnvsbsZBzY1Ln35a02FjQze5PLAMFT5yPCGI+d85/fMB
tXA6UFqKT1Xx+6PttzeJJ1QTgDmHr77tQQdbbVZ50sk89MAtwPhhGgHic08K
xzKwfhRnx8nhl4lqVAuSgrC80Xsg8/C+fuofzYeczy+3WlNJcC31LPWBNhXk
JNQcwmaaEEn6jE7ZbazfefqdaF1Phsq2lqeHfrSimuPGT990k0FBU2/ykT0Z
ZvMS0+VjOtFH5r3G7U5kEM6ltB2VHYIvXWvPx3wlIjNeU9Kh+hFI+P5pxazy
MDisPNURvZmAcLs6jpXFkkErPXPb1o0EkH8hrjg71Y+mRAKKCL1YnfnWLKP/
+ghYizxwPnGjDz08p7Re98EIHNm/HIX4U8C1glEwEhuPar0/Zx7H6lKTjfmP
DX2IIBU+55h4loi+/3a3rfIjwtsDn9Yq9RNAod9rV90dPCob3fP5TfsoBAuj
+ZdYf8Ov7YES4nrRMi5T0utTo9Cy4ORf8HYQ5F5lDT6/QkJW0rMD18xHwLJq
p6QWEGFfRA1iqHegQ12WEr73qcDlsZBlHVQKri9sJAo7GOjcgLP8h8RBSCo/
eXiAuwX2+OfyfP74Ca7nao7LrByHkbrVkiZPysHQ4sDRsId0FCmqNyyI2eGd
pSqp8L4cqHwxuxvP0xHl+tYTkVHYOb5I/ajxqhd2Kev1GLTgUQc/Z51CEB3q
38QHjQb3QFS1EIeOTT+SvUl5cSmJBsmII1RueBBijKd5d3ORUHfTtqDMkBF4
UVymEprTBTd2tVkvupNQ58a9xSczKcD5jCNJvL0LllPV5qy0SeiEgZlTQzcF
6m1HhITiuuF2SGKroOowelL3Ted6KhVceznxhMlu+Dzna8m4PoRmzY+/jxij
wsvIRgNhThIItGP/syhDT4yEw9Zfp4FA12rzJpkmCPJNvvD4EQ5t5gn+/hBY
cCmEz/vy9hpwKL3IufiOgoqi0EDMbzJYPjpvKc6qgR+SGik/LpFR4rHDHUsS
o7BM6tez+tv90Kvw7NXJ+XQUtSg4yxfMhDNGHBtE4hpAdOPArdVYPgwPV0tJ
jWDATX2D9VvlSNAR98VHJvwTUv54MWAojAYsz/aikDwifA/mq4rja0Q+d2Sq
3BaowP17r33BKwooRl9TOryQAw62NZKZvhS4o8bo0HxBgQf/aC5cK3qtxo3l
8dFpr/7QbSSs7vuPZkGgTmq13SsaWLbV5kQF9IP1P5oC9TxCohrvmGDJIak0
9K4fOm6yzuHVEmGxKkL/HWb/uuQFIfWyXvgY6kT4EteFtvW48pyooYP4+iMb
qlf1gaUN/ejiahzy+hI5NsTNgOuXtlC6r5TCb7uc4OM0BnI/oz7ANB8EkZ0L
pfOdVGjYnHZTuLsIybjt4wokkMDX++37k4m1kJdvOjuZP4LMWjuPdcePQlDH
3qAMzmoYLnkLYfdH0c+nR7LKxMhwPWJZ+i2zTnCfU/MRukFBF2r7NZ46jcCx
SomXt+w6oP119szlt6NocJ+U35pLJPiOOoMLkyvgSdsBv2URNCQ2L5KQHEaE
K4NZv74XfwOOGrEcPiIBe687dVJKaaCVJPkyCd8KxM3BT48M05CxweHWV13D
MHfxdJR8dwu4vese3PqejiZW4K9UDQ3BvrGQTVc1CHDkZVTedOYIOjMwu6ri
KAFsZB6pnLMiADC6+LjdRtAy793RelcJENt+uCGJsxc+WVrVR/uMoudTKib6
5wmwOn9uRvhNHxAMuwsiNClof+Ixf4oNEbT4506M3+gGiVrpce2vVHRf79qO
vbrDkCS0QvCh8zAUpRaocs2S0YmJ9UnKD4bhyvZTfrEZLSBEanQ/nUxHYS7D
fGsihyAwmy60W4EIfacPhGxYJCL3X8buBBUilG+zmuE26Abu1te/jeqo6Lbw
p/Ue+7F5wlvtxb61gbJN5hEVIRpyNRT4rP+NAN/o9cP9oxRwazHjFtIZRqox
vUK/wwbhp9zMiZBLIxBdmGv424uItDb1J7saDUNb7RBX+xAJsqJUaAJXSei9
u9ae6ZYhsFhifDcNL4PFPSreedwM5JEX8D4+chgif3BVypuWwvzsxUsrxxjo
6KUQ4NAbhMduZTcGC/vgqZzkZ5ZxM+ISMTFz7WCAfn+n2wwvlsc+PKas5/CB
SRlVKOcdB/HYOzEOOxvBpLffh6ewF4XWe8VtVmLC9es6/fX5zSCQa9d+aV85
alz7dVy8agwG1gYxHYOboSBg4w+XD5WIO/XZ0U1pY5D+MdMi+HUjyN9bZc+r
14OkfBTdfJ4zwSHe5pkrRzO4nQlRflrRgoTtYvR41o/BznZpOUcsr679RyPh
y5HYaDzPOHQt1H6It6eBH4PHRP5QHcRvyL476EqES2cKUhRFB1BdW/WaFYZt
wKnyhX5lJwOCA9/UfrNKg3KbhwsvWASImK3zWn3zP79XJTLrgeWP6X+0CJ6U
SGx+EDQEvDZT+Kva2P1L8nxkjb3v+80+d89jcdJnLJ76aVM/2l7adUxpXTUI
fXQkPdNkws2d0vLvB3qQmE4khxaxCgp2cJUtNTJBdK3KlVZXP7AgTn+PO41A
cEHnbVb5OETPpsbU6OJhnYW+4N2NmRCgo6/RmceCyO7E9LtYPgn5R1NA97Hu
CT0sn2jnBUs9HPmGyPyJcaWiuVDgkhtjqzwOOaTeCrf6ZlS3a0d7/8Y88Gs/
/mklawyEakSydJa3wFT1fzQSfvi3+fJi75HNlv4YbZtmsFy2SPpZHgl5LPvj
EYLjkICz9ovIJiKXMuFO1tpG6EmY/Oq6hNVVd7lb1c+RESm5kUgW7AA30aoY
Wj8ZrhzYapPyfQSxeFcW94W1wnkzl2Mt+RTo0S3feGpiFMX+ag1Qnm6DE2WX
yZHqJCwe5t8fud6HZJSKptJW94Kx7oPosFYayMY6Uu9vIyEdXPHDl17dEFNk
EHAGy7+JR+SPih2tQAVBjWJSF3rBbi33kd4mJsx1HLKu5qHA8VOEj3cE8oHe
PL/bcfkoeAqZ2++0pmHN3Yq35rwdIO0+XNS/OAxIsNAqLqcJHVMIN6l/gIcg
HwFB604mDHLg3wvuIP3RLHggPM+p85IGHDlWmxjHa1GYE+iaWOAhOUpdxUuZ
Bf0HlDemq9UjW8+Twj8d8fC5L6To0GoWyD789LD8IBVo6/fJ2G+ohRXxy46J
iY1AzRl32LSVjK7ZbP4ceQUHI7unJCu8ySAtn7v510M67PpHC+Hh9qGje5MI
cO1L5xqLu0Tg1q0NIn3sgM5AyYTaw1TYFnwuMPcCEwQFcn7wqZXAr4eOeg/q
+sH4/Az90ykGlOwXLdJ5WgG5TkoDh9cOg8J90x/POllwT55vyzrLUvgeM244
TMTBpQDN9K1vWJBcEVx+lFoGzNX8386vxPzhseSe7dIBZzxS6GTdHkh+ztf2
o4gBSSff6mzvpoOkWC9e3K0WottVPSRsh0F71xkKlzkDOlwuWU5FVGPnFOZD
sRiC/saezRobaYh/33z+HA8O3vwkhCv1DIPnK+uRzp9YnbHLSPb6zm7gYNx8
pksmw+PDl4hzmP/c/9ES2HdM8yQT1wOZ/PTuMg4WZLgpeaBXJbB2s9bTweW9
MEix2PHgLA6J3HGJDPhNgGGvKjqXKhVm9KZyz26hIdNL0iR+sx4w/L6Hs8xj
EAIuDJ0TIFIRd+bgyEXNbqBxb78Ha4ZB701PgcfTYWRg/io6rq0PlGsvP7SK
GgWk2iZ5xqAYbd4i12RkQIRew/Tt4px0sPmQumPfcxZY/6MlwFpxVUzlEx5+
iJ5kqNuxQFiOyNFWUwrEtZoeFWu64eajcD1h0zbkezu7Xxk3BLb5NVWzFnRw
Ld/9pKmahI5vswviNOsFHLeAxsQNMnCdunq4ImYUPBa5e/f5tELKLcL3J0wS
7FJ7X1oZwQQz3ttBbstqQKJfRd7PqRck6o8WnfNrR2X3106uFycBJT9SSI41
CmLOE838Q4PI3I+zQpqHiO0ft/PnfTKo6wSda/s5CLahKyIFzLthtxex0ECZ
BiUqq/l4jCkogItgJJw6AJ8KRuxd3AignHXup68yBfKJaxz7Z/Dw7oQi5zms
r7w/xkj1dW8CgfmLb+9nD8FkkjPldBMdZlpPf97ox0AUy0jTq+M4UGwXPluP
+cGwz3d5wXsaEo67H5hV0Q0fbDTXnbcbAI80+R2zQ6PIa1Tj4+ssPLy4RnLc
mIO9982v/T7xktFEmtPnKLUB0BAK+/ZhNwlmq898hUQGcu0srRgv7QRR+zp/
wTAsTyi8U9vsz4DavnGS9kQt2PANTv8+NAjha3WOqqhSkVhf7sqNCX0wt3As
3gaLTwVvCwV/rA9S+0fz4Syjext1lARGh192DhZSYadVvb3ljQIIKXl4t2ft
CPTsTJUg6YyASujpBKVVVdB6Uyh1GLuPiZwrKtKxdyaufGNP1rFuCMwtn4jc
PgqHW29kbU6jw4WDKVzV1xughk7Yu+3kMHxZajgcYU4Bu4bYWH/JTgjoWHmy
zm8Ebsn17lx+kg5fWHt5b/xqAeoGl1nb68NwNVcMN4/1lf9qCaguvNmxHesf
f1zLvhES2A/FzXoiib8GoIObn3vShgoT7Wr5zlUkINtp/5Ab7QWjlxvWPNYi
gyKv7OTkiz64cD0l+ZjSMOSkZT4bp45CsU2N/KahAZRuPcifP0UEmSLVxZdc
ZLB5sOqDbwz2nh++sTvZrA7cLrE2xuF7QEM6XapEZRQ97sre/3hmAEZm1oS1
bRuG6XNEn8nAXmgoe6OtdBbrtw59v3bo6ijMPTo8E0EjIJfXpsrvsDhUNFYX
TL9FgltXWtdYnx2F8Ik7ijgqHjKk8BaqF4lgOGdwpG+MiRqLRjRdFbrgVWXU
4bX0Frjzi4e6NWMMJvfjBYXqS6HS5sDA3NVW0EqZ6Ga00lHqyk+CIsp9WN7K
2GaO5TdzuSKvUA86uqUm+MSuow9G5QNV/EK7oANNlzk4UOHqwmlO1Q948Lwi
9oN7AavHOj4WS7uNwIxbx2yH5QDwrVscJeeRIFWpd22SzzAKC5TwuuhOBOvi
HLy00gicz99KfPqqHD0aStruupcMtQVKTbzvRyHOefK9cfAQ/KwvtFnaR4DO
JKXXBSQyZMdrenx9wYSzJha4iBMNMHgoTCo8qAfEez48Ch5ngFP1wBFHkzYY
fe5dyJzugY1xVsMR9xPRsc+715yaJcNCoKukutIoiIC81RiDBU93pFbXP6gC
1YtSCjPQCQMqrQuEWCoYHbtwqO5RN6zI0l+RazIMFWUryYOJLLg8hXt2ARt/
+TY8PZqHg/Tu2NO1b+nQW3na0+dYO2jpJRg8SB6Etfgl5TrJMShmHToeY14K
vCtFHY7t6oQG01QvO6kxqP9HS0FV91dl96ZOiC8tt7hsMQaf/9FSeJmice5b
ejsktY/M/+f79on/aCnEHdv+e9m9NjCu3HxM2GsM4n4vuxW7AcHuNhWt52Ft
8NLufnSyNg3EWdt7jAS6QLa0Xb1FeRhcpbqLv8/R4PXh6xU3CzrB+7fIgOjG
IfhSf1//Nx8LGTXKHB0axO7D43KdLbtawEbHpf8zPw32OwToVQq3g3FH+NXg
//zcMyOdlXx+CJn3f7yos2UElH7lNqeYkKDmqMuZD7UkFLD48PCjMQJELv8g
ovKZAE6/f146Hz+K9i29xrP8h2B/2ULbhYsDcIJ21eNYFRVVKqi3JeEGoeTS
Po1K3V6I9FhekbCaib5Hfp3PmcbD7yyd/g/mHSCXXUt80s1EG880v82dw8EO
ZyvT9sFWGHgfbtYtwkBC+9d+fPu4G25tXBf37TMeeEWNDQa66WiuUtq6G+uz
lwtvjuvW64ae6x8JP18z0K2UnhNXrnXDxT66gIw/Do4R7NUzs2hIfjF0+c3c
PmC+GSy4sK8XtHQ9zlzNZKKrX67cGu7Ewc3OtuygVe2QKXEiV9GYie5ufrI9
fkMXpIqsO+W82AEfxrtdAyaZKDtr2xa5HBxIHCykG/u2wpfwocN7PmJ9S27A
AQeDfrjbjJ9QejEAQvYvuiTqmaj5DXk4JAQHRnZjZdeK2oB0RUvHmkhHjc+o
yqXXe+GsJemL1/MuUHUMdZRZw0S7jW4bDa7CwcsMhexy9y7IczJ4djeCgS6U
FNopFHWBn8JSX/VcF8xk8ql+vcREyjV1SR7HcSDdtHd8T2wnaHdV4EWaGaiG
221mZEMPHIhJL+U+3wFvh32nCIIs5JiQeN++CQcyWi9u/VrWAqny+uP3JZjg
uGpn4NynFjCd8n1Dk+gF6Tmpb0+ixmBFsp/SAm8ZXEk8/qEivxXCO6PXW/HR
gSn57PSjMmzdQB3fPplBCLFb6WIxy4JsI1xkUGM1vGh8dxD/oQNKjvXkpg2y
YCAaAnzf1gDu4zJhl6UOMLpKnPGLp8OGjskDZXc6wUFlB1GL1g8qEWeKzTex
oNxTWr1hvAFuux3wFE/uAuWCTZISZVHwrLikXwTfDnZ7eg45+I/B99uTnJt3
EFA+zu2S0FwH3DkSxUjeTIPUpz7N82ojIHvh8xxv9TfY6uz87svYKFyZ7cZP
qhfCvlU6D8qicaB5czpkcZwFMp27l5Y+1qA9pV3WKacHQOHiBuEdRAa4zWZL
zcQSUff0z1we7H0yU76tH4C9c/GToa33kr+BvcbNEN3nA/A57UHDaAIDYve/
eOR0bgDCVWSzTB/0gdTTTxGto1Swfyvc2t7YCpWN9f4/OolQOyn32MGFCotj
VQ9PZo7B0j9aCmLPKbFSlq0w+/SE5w00jH5v1rp0awsJhEIbdqy6QwKWm+ZF
x5/tqDqt+LzkpgaI3/IrzbKJBe/4e54JydYj57UPag2P18PpEA0iHjs/Hkrz
2LKL/dCGT8DT/IshLn3VBZUHTAj2/q3y0nYE6tVOpIbcLwayzRexi9j7eDTr
9WDNyS4Iuum/UuR9O1wWz+piejHhxIzcutCYRnBQFOPVN+oE4hYax89HLAhZ
9OQcVG6BqnVZHJxO9WAeSz7kaTwGLWV+1k40KnwtCnHiXVkOCl9Xl/dGkWD+
zpUJieMk1BwgoGB6exAKhuRrZTxHwCVtKytvGRFso0LGuOc7YIvZsqocdyqY
ehW2cujnwBt7+YCkikFYn2tHPoO9B4JeOwnrnNvQqXM7Fw7NtYICr9qZwFAW
FB17WKp9rhJ2yrgHnpqrAtHzu1Wn5Mdh/a1y3NsLA1Ax0SzLWdAKpkddJLX2
MkDz52e91ZXdEPZYJW9dRQ3EhK26eWyaCcrmI9fMPhLRTL1e79zpLuAwzXTn
8B4FdWvn3hOxA2AYLbpGPrgD7LcoJKyLoIP5D691IeFZcE7f9lcRfw88G+HR
+nyeBaKnNDR6U/uRLm1z5G+nYSgMGRA+cn0UaPHjGUcUM1HBva0+S+IEqBYX
GD41QQehwdh7RppkWOXaGfFQtwNO5NJ0vAlkMC45OCWn3YBGDbhlrqiOgEmc
cV4qfhS7X66/728gAVHshYvazQHILDh40mc1GSxXuPWt6OtEJL8Zme+WZLjd
sHIT7RoZBB/nLHAl5sLWyVvrrT+SYd1LsVdzTqNw42Hhifq7BPhZanpKXhqr
TzqEOgojRuDGNjw0pbejkibcLbuqIfB9vGvPFlk6pOAjN0qkUyFsIcP7Q2Y7
+LqolyzfQIQnHxIjyVwVSEn12d71FiTw33aZ95YQDatDlTeJi1DQy5bpS30H
hiF12Q6F06+w+7S4rfsRdz66a/0qgLafDKdW3r7GUT8KKpnv5Ch0rB5Vs07m
nibA8qOXtxo/p4DVj7YNaVCBJKV0oxWwPvdFpMLJPqzPrVR6+Grt+hG0zr+i
rfJ6B/Tz/5S69Z0CpA5cg4x6ORhZX+8Rp7eBBnlid54DFp+iOy69nO4G56cL
rsKsNrj76kvldiEmSK/N+SrzdQAtZJmLnjjfD/srfbbse0OFitbXHn69I6iM
cWNn4PQgPM9KXW6SSYSFBjGTJyZEkLvrI9iZ0wGlK5rXWepRgV8xc+WL90RY
c3GLx/U7NbBYWhBs6EwDQ7PeX1dQD1rH8+qEzA0SRGqNbRlnkiEsutFUdjsF
eAvjakixPSDDe97QTZUEj31lc6709aNVr20kJrH6y47P3r8Eq8N9gvzJDava
0DlWMofIYD1EVhYWD4iOQSpe/cr3LALIbgq7JiWRC9cecu648ZwO5Vlrhj0I
Q8B/V+lcFvoG6m9VWu8t0GGjc3+b3ggBDE9EK7490QTvn9UmnXtKw+qWAIMt
aWTYcM9wR/eqAjjlHnxp3HgULpev2pia3wmDyeqOwdPtcKauL29fORN6nLkc
/Xe1g1yGu/let2/g9EXIkLp8DPA3xNverMXBa8JypfmLdeCwII1TD2PB5lXR
Skq2VUjex12mUxcPh3tVr+mYs2C1iZmjm1AHVHzfN69wvwv23J/CCV5jAuvO
icY4nhF0LLZe71QrDpjvz67Sv00B2dUqpsFyI6hv6nzUOH4AIl85vU7oJYH9
ru0dI3bfULlHOfq4hwAH0j92gTodbqYlXCKr1EPbwqvxdfcGQC3IjGz7mQE9
F6Xt7xm2orufqF2TQ0MwJvVyX7cXHXJkb6WUW+LRvxqPbhd+rh4rY0GwboHQ
J+069K+GItujJtPD18bhdbOBXM7Kb380DFbzrh7StRyHqSmx440tBPSvZqAH
wh/Hy93pMJcycTrPtBP9q58R41K80ZLBGDytqvzaB8PoX01HmZdKjvI9xurg
5gsK705T0L+aiw5Qd2nN1FEgXKqkwfXxAPpXU1Glyx0VmgkT3my0VczSJ6J/
NROxBh8YG0nRYUerxDPaigH0r6Yim8uj+bfvM2Efr7Q4aTP+j8bDr8biTKtm
1v/5d0ENY6gknd4+9K8mo7KnlTiBCiZ0DQ8/qbkxgP7VVKRv805urRkTtNVU
ObdKV6F/9R1SfcyjqBk6DgnEoDWX91HQv5qLrkkbNveMUCDbPpSz2b7jj8YC
RUTOpOcB1uf0uK62VRn6o2mwfL3qnuwBxv/594ELtec08m8koH/VBbXVFj/x
+jEOIxJhy1sjuv9oAgTdv7HO8AkL4nGncCmrSH80CyRls5pOf6SBdtwW8d4k
wh/NAB/FtQFdwXSIyzg0SYkl/9EcUIwL5aU4jALV4gdSvEv6o1nw7ugrb9dT
NHg6+JF0kkH4oxngNnrgItWBDqXE/b6tpwr+6Cto1wlZcRo/DmFhO0XWOnb/
0QQYEtrYxOXDgosLw4tPeYjoX81E6YTcu5fP02FI5ZzrYwnSH82C3MI8rqrX
NCh86HE4/gXpj2bBl4MsbrXDNDB4L58RtLcO/auhyMXgpelOh3E4MCm7y1Wr
Ef2rHxHX5H4RnwPjYLdwIBo/Q/mjubB8sFM7UpQCfhT7+qU3LX80Ehz4Cy6I
LI1B3sz+BgHLwT/6FUTD+GhOokyYudYS1nSX+kfzIUXk9kTbtRHg1BcauhGH
R/9qPMpoHx+YyGTBd0NG2kz38B9NB/cfOZvbJBhgzYfXGTPvRv9qAjqeeQE3
58uCJ1bo2QKWV//VXBCMlYxeOUEBr6tHgyP20/5oAWxKH+52dCMB7tWFQ/0Y
/1cLYGhbOXkzxvE7pOtOZ3xD/2oYsv5W3v3ZZBzCMzu0DNRZf7QE/h9d5x1O
dfwFfhlFUWZCSioZJbOMcsyGzCYpUVKRKBIhJXtnJaGhrMrIFt5G2fPa+3Iv
7r5ImvK73y+/3/f2x++v1/Oc5/2cz3mf817n4Zwrobr7eC99AHrX/dinlzqB
VpiPZm6K7zF/QQLtJ/NfQ9uxq8wDe3Q02EaKDCbOypyDLj1ohW8Qn0KB3QYj
GrDkfXlKuTSIVpiF7LduVX97hgqeI2HHhXX6VpkObalsqqGM97f41t/LJqWT
aIUfUYrl3SLaABH0P2wS/sU/jVZYjCxVLixkscxAgPbFTQFJk2iFH9Gpam+3
ShoRKEolhTudp9EKi5H6ibun7N9Ow1CWFEtg9BRaYRE665hOW+szA25WJD85
Q8IqS8Hlfp3FkWQ81NLPdKU+nlplEYR/FDnGGTIDxxPv6mC+jq8yF9wf+r+O
zCDDF9uyH4StpFWWg2W9G0e1yiQ0B/P+OmNDXuUnsBBQE9E9gAWxYp+h5wTK
KitAq16r+7XnEJwK8bI4f5iyygpo+qRt81t3FPZl9uy4X0xcZRlgtqXmh9ZP
wnaTMbtdGPIqP0HFaXf+/YNjcObQxsUPWyirrABrLzErnq5RiJGJEy/5RFpl
ObDmDzZ66k+Ac3sPp/kx0irLIerxdmss4/2iGZfbfbBpFK3wA7qi/N6MS48C
rs3PJsSXulb5Cnz4LK/dz6OB+5ldwSVbnVcJQJJKTZtdpgOrUeElebsetMI3
iBBGkThgQoMECmVXUmYdWmEsyrjb3ng0hQ5vLj2+ofe7Gq0wGg1xGFi4FjPO
E2GrWdmZHrTCNwjjUvPV/yANnnMp/BSJf4JWaIsSf21fU/+XDiXP0W3bDX1o
heko+P7OxGRWGqhUKxn/qvu8yjigdB3N+vKEDrs5u37tEe1AK3yB1pXxJCas
pYN8eZL+QbV+lLbBzVXGoQa+LTzg5nrIWM/Vn24700bBqtMovvtOPYoi932h
l5KBxdb2lHjrKKrmDPkrZFkPY00Knz3qyLCgunEUl40Dill8y5mHbSjoUl/d
tl0EEHR/+0S6FQ/iih5Dh5Q6EN9+yR3iXDNwSOHqtRHpCbBsFH5uWNmEmr9K
uT3UJMG6NcZtToGdEPboa8GbplLkLb/O8kItDWKq5g/Sc1qAtnHxhnJdITIl
XbLzkGTcF1/1lx0D8dDnNPP3VVM7uklKU+Y0m4EdXpqN5ZRhOJe8d3P43GeU
GZ6WLG/GiK+k0bpq1U70QXl+/UuzUqhde2LoaTsNzruUBDazFIG/tEDz/kcv
UKfkvTEfLOM8kdauoS8MIddts50FBz/DPakdmyziKFBrIzbyKj4fJPhkmu/Y
JCFE36JGJdLhwcXvvj3lGDjM/RVpbalAi79v98VdpYGnaV3hpaEp9NwrpqHh
SifYRczeCsRPQWKRaPNO9kykwBnXL8oWAx9CsG3F3+gAvXOhUfYTMIoczPpF
mlGYw8Kx39yk/28ftquHxZQT/QuR6EimEb4+FWJPPsHSJhhxL7TfpVs9AFvX
GT9XjK5F+Yo7ziXsosKx95EKCpaDcGCN4y48ax3ikdc+xLpMAaX58UkVXAEy
Jpue7uhJAR5noRs1ODqYLiFhXekp9PP3i51XKjqgvD3qZ2Ym4z3gR8nXKJ4E
vs+T6y34WhGtJKJL9C8B8sxvm73fjYOQX1kefqWt6OmWlivCKQSIIYyeXLtz
Co2MGHmHFHbAQ7jwSCNnGixKNwlWl8wg3eYNmzqbusCpcPlGXwQOXJ5tC0xk
5FMy0/ua8K9aEVlRzsQ5mwBajdu71sdPoovvc9Wjx1ug8pru1uOiRDhV8Qh/
UX0IaRnbOq59VwcKBuZZs18oEN12/j11fhDkRfV1lNzrkBsbapAYoECymIfH
yzw8uilTWDjL2QEj4yFap3bPgAu1JVJNB4uk8Ip9PbaNoPNE82bpBAmUh2N2
FS8R0LVdt54fq8LAsTWp1SIZE9C06ypVQCQUJQ1vmG+PcQXdsp1fDjPOB85q
ltiMc2OwNlo7p7KmHrXlyT7WSiSD28MW7i1KRHTuZSJXzBQGMm3e5p83n4C4
4mjvkC1YGOcb1Gjf1YiEVR5qJTDygurfzU/ypkmo65CFE/u+HtCPlzculh+B
jzuufPZhx6Owj3HpFWvboXGaUBzSMQP31IROnDlHRpYk0x++j3pAaN+T5Zl9
Q9BMLAhUmyUhS/raq7IqPaCcq7rMwzECL9pJjhL5BPRDdNZswB8DbTkxT+0l
JuGIxvu9dmdJqFDu0Y6W6m5AkgqPBh6Pwaj6XquS9WRkL2frz3WsB1wlNkel
Rw0DZwrbuSpuMqov0q2JPN4Dv87kejwJHAZWEbORhrdkVMt/aOpMRQ+cc6iV
6s0egAfJjrcFHpPRpSLeeJPXPRBY/OCQG2NdfuLEt5U0jKGwtY5DTUIN4JqZ
nVLnRoZcr/isLIUZ9HmrAvjadUGH+iHvC3p4CJTL4Pp24h1Ktznc8N0jDmgX
8t8XzdPBMX3X/ihGfF78LK4/69WMTHTUDxKHiGCvfeAF/ckEPLfpujVzvhm9
iiR25pGJEPjOLWSvfDUjrvvbdQ0yUYd/rD1LER1S+ZDRw2MYcEra5lp98xNS
Dz6ac82TBtf4dgpY9zDuvaTCrRFaTehZzObodE8SqBrsjWTbMQbTyq+yaxPr
kUR+TN2JLDJUKd3ccV5+ErYaSSoFGbQgCeOPb3ycifDg6qedB4rIaHt4axKh
oQcsdA5dOGs1AGW3tqZ3R2TAhlPxFdbZT9Ce+0KHxBjvZJX21NDzvRhkqkrr
WKddAfs8nbcTbGjA+6e6ayxkEHgqzcSv7alDf/l+GXbNU6DgaOwsjqMU6u/e
WnBgf42cDxK1a/roMKPxt9mzNAuk3mtZWBnGokkJsUfKC3Sw7Twft72mFY5v
1c/tZ7wrbsyYsVfw0qG96I7sFsvncIGzbzvGzx+NRYRUZP+hw22e7ned9u1I
yHDs4da2Yrh8V8pm0wINbsidjCx37Ebbdbx6n+6ohMUIuD1iQIMiR5Yq8/oO
aDJ7aFLZU4LOSj5SHxqiwU93rb/h/qWgNZhTdePKa+S+LzePs5cOJ8zsnha4
j4DGobD8tZZf0OmtEVVT0hSoD+f9g0/5AnE3uCsdD+QhnPEnmXRPOqDTNkT9
hQIk4ctrfY2WAvs9kxuiGeeYyt/jxIGiBpTx4HvO5cZ8yJfNPiRsTYeXVSLv
HRIK4WuKFOvLiVT0WMX+bjnj/HyHbVtDGclAftfPr8mfegJ5Re9NBxjns6q7
UGkIWx/K2sJrmOFXDZzN4XJqdVSIK/m9boilBOU3/QlI034FEtTwVIUhOljP
it87Gt+PDNzOPvuWWwPuAaF2Cw5U2Eyzrtt/GqE4pSDMTt8McEi0Cigvo8O5
51y2vIzznf1G5JPEpFLw5fjzcHcDDborA0kn5T9DxdbmS94GOShKN/j2ujA6
TJ0y2296qxVIWt5XPp0sQoVkwWeym+nALtUi6KSTgsIuJHbwzQXAo5jLgfsZ
8XpXlrFHkr8BoKUy5ZlxPnrwenC5yZ4Odzi+VqtjPoCIfrHZu4sJSLD8dark
LB2cRydfjUYMIkEpB3V72Tq4/G0HvmOOAhYLbBKxR0vh6HdWixzV16jEN5Q0
yojXSRYZelazPByotnZdFhZGdXtF6cz9K3a2n+FxSB1BIsKiBaeZ+iw1KLaI
7dk4hb5uDVs/ydRX0M519sdIFUKxf9+uZ+5jthwuY1rzh4AmrHiiM5j6+I3Y
Vs5tIs4g+4bx91f1/9fnbdDn+Q5hhlzu4KnEi0xyn03ZQ1mkGXRguSYnkakv
3PG1S6Jk3im0McB15z2mfkouIZgNOXxT6E7unVetTP2XLETTgEURh0TTH2YD
U5+30D9+U4ryOHQjTL/Tkqkf3aP2U2XUF9Po3cmjG02Z+i7y/eKIzGLIMY9f
qMQyyV++pKVfmMeiR4milmSmvmo5NlVZIt+wKNtw2leVqa+a7UVn3hQlhj2v
/yisZ+ovJ/3iwqccjz50b82ByFtM/TE2LdA3zbj2IY1QwYlTTP0xrots/SDy
fATFn+QokmbqP5a7c5RESB5BfQae3wqZ4qij5/H6FsOezqFIexYme7yp4bY7
aVjUqzP+NWLP/+SDFdx3JssY8Q39OcfcN1JqMmi3yoYOlObKHubI1D/ERF/l
ZTJnB3LvUlsTzyR/aG9j5eXWh2JN7oioMdk/uMYfkZ6NIFdPQVs3Jvu/7TU+
7r+mA/E0st5ay9R3ZTZW56cNwz+7euwlfZj8s+5btsAphpzy7kqlL5PcoqBi
+0+GHwKN3xLymPzA+iRUIZUhNxDZ+rqBSX66a7CGqxqhkV8F56qZ5luuGJgn
pFirpffh3z5s3s/yOHY49aHjDur3E5n67XBG+p+Xm5/VsuCh/TP+ZaUr9VQ8
ReuX5td/5F1jG3jNihEyTo48OMP03R1U4ddWbB3o6tZHa4hM/uRPYP8d+AlB
11lRWwzT+MbL2fHjWKKWZsi3f/T/dfx7If9Rb5WH4t9/5Ooly0EznxBS8do1
ztw/iu2WfDoqRiDR3eDJ3H/G1X8y4k4FgivbrQvameTF/hprrt/rA9/WyvZ3
TP6P+nHH4ThCkLnpu0Ud0/gklWYx7PoOuG8b1fJPf6QDB74tufdBr8WlXMSk
5+qLbLVKjg6YMOKaq2Uaf7hROjXfrQ/6LEXp+5jWVaUfPtuxuUvrQd2/841X
DuXYP15SdXnk3zjuFPAVucCYV/HBnTwdTHYa0zwXbasQfAiIXKxn9sPWVlxE
NYJfBcpHq5jk+SzfirFsHeAx4/CRuW/SG/o7I07GfG894z32gLmP1mPLAQvG
fNOlnV4x93cKNMiP07jbB/IfcAaCTPMyyZntW8/w85UQfYNKpvEcz66upzL0
I52sP85M+v8eY3mux7DTs/KUC3NfuJcFuNqX5QgWNp3+2cskrzV5UKvKsB+j
jbEmM+lZfPdMe5oRR5n7RVPM+yL0os6ZH55dVbHt//pZhtVNvZZxbmy4ju4w
938jPeN4ovCffj7ehaqBDPtjtMoHCMkUJPLS6oOgWSLsjJGI/JIyAtz9X5/x
/6Ug7UNZ5j8WO4FPWbiOZ1svRJ9PSTIKIyDtO+K4H78bUNm662yqaTgw36Xo
6C9LRd2n+a7FX+4B1TW3v09md8LNsNaPO4gUNNTF7UQY7wE3Hi+n4LYuQLqR
5Uc0qejB27MTn7owYGo/4my03AV0FatLctlU9BlTzb1LpgMSv1bQ7uhgwEN7
UwnXJSqaF50qO+jeAuzkB0pWl3rh9vgOc7ZwKppcyqIF9DTAUwV2gtKDXtgy
EcOve46KGvm37/PY/BlUHdM+nPXuh3qRd/Z7D1MQpfUjLWuoGwROcNyee9kH
+4ToW/c2UtFQyqlYYmsj8J3wVqEMd4ODScl6FR0qEiCzU5KEuyBhYHYq51E3
uHNwrVPfSUUutmuaN60vgvXfbp2Zpw6CEM+inSuOgnAHBQL0uusgN84vNy5n
EFRE/Z3KX1LR6RgxS8ktBcC3xmIdKuyH6+lCccOZZBTVkH1LXaoUMtSJnVXJ
4xCa+W4/lxsZ4d2UKgoc6iB/36vtpQ7jUNN8qvWqCwUJ1nxdfhFfgcKaGvh5
7o6ABMdINtaTglKbluO4ospA6UGcvrzPCIgsaa2dlaeg97yf7A7ydsF2vwZN
H55BOCG8NKOXQUYeXUvUO5U9kM9peepQ2gAo7LG6/mOegHIwYQkLfRmoL/ge
b9ZvHDjFe7N1mpKQmehN3/aYOjj3QMGXGjoBWPyImbU7CckZ9euos1TAz2Ph
fvvSJ+BDi2fzshEZabrWb1t+0QBzfg9zpTTGIaRvk8qZCxT055RE8xeBGsiV
f1M0eXkEyuB00OhzEoo9JOFfOhAKaXnNO/W/TMARsraA9TsygoJLuUk7S8Dh
V1MQ98tx8K7tEdl3l4yElbM0DELqUNse3Ywl23F4dfvqtc/RZKQoHvoTo9IF
ceIbZLtjhyHa8Ga3OCOfEjisLhv3qgtq/24hvQkYBj1zP5brvTPobpYyp51y
N7r4JJTjCz8OuCUvQMdGPMJMCW9PeT2K9htNDkTy4OGrsWSNXgsJXc3r/PWy
shMuGkxGtJaNQV3Z0VeTZ6bQgchC/p/6vWgunKw5ajEFY9zrMXH0KZRfuPym
lqsDleDfuuO/TwGP+26b2XoCKtv3Y7e6VxX4Jn08mYrDgdCn49y7OUjI6YPb
2KPFZiTPKXkDLk5AZcWbZaGcCSQRYJWahAZQXmGOf9/LGZCqK2/edg+H1iw8
t7mlh0U/rk4Em/sx9HiMbjH2n0aiiXsnjTVKUOHZdI/dEdMw55TRkpxLQClU
ET/TuDrYN5NxqLYOBxt5Nd7kkifR8j6bAoziZyTtd6T1pwkRVB5zfS1PHkPc
PglBBDMcOhe7LKZ1Aw+3jJTsXQbakbvNBr64rHLEMycU+g5LA/G/9sfq/w6j
wnnxjrukKZSs/gX+vJ2E19xJHcSpfgQnvProGRPojaBlkvToDNizHpbd9a0G
xb+6l/N8MwkZTA4cfPVrAkRGjFnS5zGo6ZLnrif8BGS93/fE595J4LYavXc2
+gvK0/MY/6s5g7YUP8g5emYKNHv/fu0ImkQjV7EHU89NokLn3EsWEZNAZs20
3tY5gYK3GcyyluNQYbSwyo+uCej98CdnIHcYfX0QsHuz/DQ6pD55TM11Ei5r
G11+pDiEjBSf3Si4OoOyO2oi9t6bAIrxadHtEUPo3dI3SQnxGfRb3aGmtXAC
FGwETRbMh5C4zN4Dm6gDSJrzAav2JRI8c9lQBGqDqHurU+RnsTGkdu2FL7c+
EXjipn+MnqlHl03jajYITaM/3cVLLPen4fYtXx9BxRZ0xJQcJvt8DCn3Cz7H
65OBN10+/UxlK2o1qVyuLx9AdVtTEl0Y7zQNOxHbRMa7c4dP88ZTW57DA2ra
vp5kCqzVcVNjF8Mh/IV7f+nYUsDtPeGt70UE7rgzL4M5cWjbJHqW2I4QS02l
u7YDEdawps6lmoygF/Ro13dra9GGA8rsLBYUOJESEFsmiUMav1u2n75QCA0t
vX7+AUQwFhh3xvhMo43hdtwBf8qhwYOkN+o3DVlWL8sbPAio8VDAlcOPmyDM
f3fCg+c4GLn5qv3L0RoUqDFy/GMKCdVUl43ra05A5ym1dhzD3t/2p8dwjomI
74w7Vy3j3tlL7Rg6wEuDjSNHuOYOx6GEIxxZ07heuKgtP07gJ0BVounxGZEu
lLlZL36XAQ64oics9+bQIDg4tVz/cgEIJlbfPxzcBTeSpK76xNKA8xk5q+NN
Akgc3YMz68bA3+3Fbn5BNAi577vW9n4ObJbJwLG1YmCP9MlublsaXKtM++7w
phKKqIYveT9iIJ5d6MBlHhokvHm5+5D/a9j91cz8/mgvZOdHiIauoYGIS/DZ
XWvzgaRRxDXS3QveXf5fWj9S4UPxbNq9qST4ZSeYzl3fz5gPSc7kBhUIpIRC
/l816GTkWM6DqH54eNZI48puGvj8l1WQLLGRNi/SA9oBWWsiz9CAn73xEkt/
GuyGC5L+Gj1wnbJho7cmFS6Ilv946BMDZE531SzWIfBcykzQU6JC452/6hXn
3qPfZqcAuzAIIee5CNlB//kdp765yX0V4PXqEHXoZT+4zmRbyDLypNGfHQHR
F1rQjzmOH9s5xuFdQnR3cg0JumfFfmvu70K/hPVn3yWPQbicU+FrFwqE/pcV
0NNkGergPgJ3hTidX3hSwLYeu9SQXYYcUdufNO8R8Jd2DPvQRgEPh1C1Z4L1
6Hb99riUpEEQqD/yafY6Bdpbn5h3yrYjllyXEEOjQQgqCf86sjwNgv4PgvfP
DqDa+SO12k6TcLffplDmNgHiZ3MPP7YZRMaLmCIWIyxsGzx4jb2bAHEtnkGK
O/rR5tzxjJcRWAiwSdp4JYAELfMm2IiN3YiHO+262skxiG4Ytp2zosB1pV/i
ptI1yCqCh8PSdgTu2Prf54kkAi7uvd35mS60XKp8P5VnAuI9TqfUy5BhqL3J
VAjfjO7Ost3s2jAO1Yheq/KFDNhvXXpSG17ArSaP588rx+Ety9DChWgyuF/r
veGi3oXOty0diIoZhjt1wUKKj8kw1nM3suZ1F3J2VWhK8B8GOznf6jMFBMhK
ykL2VnXI/CzxYXItDkL0a8iCatOApkULNEUaUPQW3dNzhtOgZXRdLqeFCAes
H746kdOPKOvtUy0jR0FolHqn2WQKdHSsc1WdetGnjTcbcIzzcFwgLm0+Gg9m
fttvb0wfQvHE4x8PxOHBdPa0rcqjKeAn33b4aIBFMY2BB3g0JkBVXUAwIIoE
vsfvPyzmz0NJcRd7SZ8m4BF/W4nYayysV75FTGbHoiHi/df790xD8/vZwtSb
0xDzTCWBHlSF0OyacOKjaRg4aXC62hgH4lw2y+0lWJT0S3p76TEc7Pq7NXK3
2hTkZrLE+M9g0ZqPabfO/MBCefoH4TSzUVC0Eb8v+xKPiqwc+UcScGDYEzXL
zrg3HNhKd63RbUe8dmwm7JME8IlbDI4MqYaeb2ycESJkVLJF+dXyIyx8eM3W
zCmDA4XUpAT2Nx8Q+8MdNdzRRJD6qjTiVdYPhT8+P5cbmkABI6e+dtTOAOYk
yWOhrw22nePefrGjCylODD3f2UWF0mDu8XCuEXDukteqbWhAwuY7JoR2U6DA
mcAdsLYZdhrDlhCZCTQiSV4KPUCCG1juDzpPp0Hi4Kup8BeP0fqDn045Z03D
kzla38moaQi6t7DwybAAjB0VHv6Ingb9PXdyJhl2LuuoDmnfS0M9X+M+7ntG
hEnNVL73u3Bw9tX57ZfUPwJBWJLDP5QIjoLZF5f34aDkzjkub+4MOH+dc3pb
LBHsHb4EWgj2QtTQiZyIjCl0P7fRQ5N/ivHOjBnNO9cHPpJuqYsb8Kj50dxV
LuNp8K3oFx6QagK+45jrl1hx6CRssjRbJIC+fIXR3N3PYPTO25NPhoCks43L
H1viIW0/1wdFgToYPebvRJEnIu/EeLYsaRwg2/UuNyc7QUb2jXt1LxHZcD93
pOCwoNrawqMyNAiU5h1O7JkzqOXmpPDyYcY9znHno0DvCKhvKD/qKDiFvltr
sZxjrIf3TtRqBV0MHGsaqHSMJ6AfAuN33p6dhLV8SWRL0SGQ+rzlm7TnDDqi
YyX28SrjnhWIdZdgvDdPc0HUcWU8qm0M5dwQNQHkOKH3z8rx4FPAXftwZAKB
Psnv/lMsPF9IKuG82Q4aAfu0A/MaUddts4QWdxp4hVWFXOyfhNm0I9bbjLrB
MbMqz395BipcujvG8rqRC88u3W6PHmjtvMC2+J4CjVxtXWZqXYB7kVFgXYKF
eZ9Qw1A8ETiEGmZdhGrQNcd64uJIDQgqvVrouEqHn8bfvzlFj6FMqPlhrNIK
8OWZjPNBMvi6Yw6J20/CPbNNXa/KC0HTygD7nIcEnpeeoT9fO0GLWri8zqkT
sihafxyrqLDe6cPrpMEZNGgrdU1Togd+781RWds5CRsk/UtTgqaB978sBhll
vXXvwqfBa6fIckeKKRLCit+jcHeAZ0Ehmykjfywo4Pd/UTYJVlECWI+CTqD2
XJDIfUKA2z87D8mJkkDVSrY01bMCbGDL3keyk2Ci0sG1PNON2Cn3lAw/jkOc
tb4J6zcihArJ97Qyzv+w/7ICqnY9D0GMvONwwnGBV1ZFkLCjTCrm1zCcebz1
13wGBXZC9tWilimUURVgvV+jHyzhQ6keY12NBGDP/bhKQnZ2BJ37rd1w4LuQ
2P4jY6B9MSa/9sIQ0nJrO2KQNgGS4WJ4Y7UZCEjcOEkTm0G7tPTKdb2GoZJq
j0k9PwFxunSDRkc86rimfGX/+1E4tiT24vA7HBz/u86r7dYUelc7Yq6rMgzD
Mg/1Br1wkGzs3K450Ik899+XfLR5AoJ9grMFiomwGCuPOVZFgnhhB2WHrgaI
0JaQuxOMBRL7YwPzUQIKJO9ZmursA6ktbRqsSViYkXBU9JMmIk6MG/z174Pn
d65VlOpg4d5gUq+3+DSITYfrmln0AeeZm5uVtfFwt+pOxUMCAXyfqH3dOtkN
k0PDJr/cJuB5aXec2G4Sot+++zgc3wdVFE38hbkRyFm/cZcB471QfMB6dnAI
C4d38Y9eu0eA60dkja/eyEe2JynpFqdwoHx6Oy78BhEWjtWfb+whoOsCUD6A
HwIeb0UxcbExOBGeXPf5LAG4mgrYz7p2wen9py2KhiZB5sMN3sFSfzQ2HHFZ
WgkP0O+cOdRFgMiPVhxDGmSovNpx0GpHB+AuhdlxtI7Cx3npCo7jjEejvxb/
G+kJ0BNr9bswgYNfAo9U5MqJSB27zg4+DsL6xzdOEPhHIOuOyjZvWRI07jRy
leTvhp5j7D2NAePgafvl+2caGe3+ElTO1zQAO53OFur8xUBbqH5ylSUVOE4b
/9ziUw/HlZP7sif7YNgE457f+xkOnDGlrXfEQ4Dtwb2SQgSQ5iz7U4gosMWC
mpwh2Q5nS8yk95T3w68LLfnDjP1qxn1re1F4K6jekwyQjhqAi7dNFzsMcTDx
vPtv1zYsvHL5nCzXioNrilfNFtWocOVm9V4emS9Q9Fuvz6OvH2Is7OcU19NA
ZvCNglA5AmSyw8k+rgd+hHgYf4mlgnTjbWz72i9wzaH64wx3H4w9uOyfYkkD
E92U95F5VfAsq1f7aAMGwkq+v+STp0HX9yXcteJqSCtr+LPpSTc8WDCykDrU
jpJK3cXuL+PhmyhmPyt9GtYdzvNaKz0AH7YlDfvexYFnzOFzRyynIf9CxsF+
OxyartzRsS19Eg5KbsxCJyegI7IpO898BhVsb5hK9MQCZiy4XXt6BOB7c0D5
Ehkl5Y7tiBUegL/1dxvjgruBSNfM5swmo5eyoul75AYgojf8gK9GLww1YXtc
uGfQe65vSg3nx+EWT4L63VvjcEpmfZc6kYiIDd92EFVHoKR3XVpR8wBc8D9R
JulORgPzzvtyYxn2puWMsbf3QpijWzrWiYRuR+txOWUOwsLM7u891oNwUs7i
xTEWMuIyzB+Cxn6w/n1OzrBxAOjFfQPSUVSIIpsa7+hrhGjcVnONnb1Amgmf
nrf4gLbUJ7tdd2oE/i8ab0qt6JCA4+oi6U7AgaGcgUXFRojFGIaRdUjgduWN
yEhLNXrp0J1MInaD0/XN6Q3baEDNXCvfuTwKYp/23TRpboaooslDh9zJcLf1
UMW6OxNI6mzuzn30blALiZL+NkMA9iv1VyzYhlCC7+scEct+6OGocdRvJ4F5
tMvl+PJcdG7p/eQa9iF4h84J3ZCjQoGMn/2dyH4k0IHljv4zAuf407yk/hCh
XPOtPSXqI9qh8zMgfPsEvOYrWlykkeAJAa8/24ZFwjFlBLceLFg1ji92XZ+C
5gP+fTeeNoNv4Atk7TgKsjXbC869IkMWRiXjxFk8XGzieZbJOFcjcn+lKV3E
g3yoQeYYXx9qlWZ5FK0/BQtbuljXH5gC/NEOvuS8CZBO/ZVvzj8Kv6+Ykfms
puHF+sQaJzSJvm5fCp8njECsWGzdRNAUSI/7DX+sxqBtHXWd9Ru6IPVRusa1
y1RQYFXCpEx2IE+6es49qx5oZj2Y/taACjVPDW4l8wyhP9ZFCZdwLdC4Lsna
/zIFfCnF/maH+uBkhtaW9JftoJBbv/YyGyM/6fA8SMMOIqHrRa7Nd3rAp0VG
x+YmGbw2xQqwS2GBiy/7eNt7DJzPD3suz0KCSfPa7GbpYZQ79UCleGEMxksW
y7ofEECuyIyvm78W1V0a2Wt2aBRS5mlPZ0UpIElp7SjMH0F/3XV3nneYgMcR
uNqWPMZ80//S+fYNgsXOi99jLwzBYESc9SVjElxtPrRDg+Gfpp/Xxdkz+yAw
PTRLYhcBcGVeSUspWPA7+o6wlTIIk3vk29IFCZAypNnS6I6F3NM8L+XWMfIK
eKOVajANWP3kvzaDGHied/KzTfQkdPw6rCBlTIDn6XaVj6qrUff4j1yp31OM
+/voEWksY1/LsIlm7ngHR7a5rbGsmgLrhRKpHIcZUIo9Wma9hpG/6sYTpz8N
w+kU+wpS3hTEeWonkOMnIC1xfkON4AR4c2eJcT3Bg1XpoEJ5zwSy0hFKaSxn
vAPUzFRlBhnnAakD1Lw6kRXrkeIK3374qX7GefEZBRTeGd1nX2pHu9dUjA6N
d0KDV/xj5Qkq8FXax4lQn4GRwC9cx/4GUN3xxKLtLh1KfU+VX8nPRe8XC7L6
2YZgyxa+B96MdX7ktLXGWkEcuhZQ8u5a2QjkFQyWyRpPQWZE/eGAj33A1W9P
K8oeBYOYku7530So6f675VrDAJzZkH78xkQ/XCnGYGm/SBC18dEp0dJpqE0/
iqG86wJT9bMg+gkPQemKtQZ7+pHDvQIu324sGH//M+vymgB1X0IefAtkvPNN
1eoF3bCQst7hi5gkGR5XXcM8U2uBxYHZcW1lHIx799FqPhDAP+tJuvb6CiSJ
zCsPmuNh4dShcD5PAizuLpVuEx5AvFs9LplY4eFRTcdZ04gpYD3zyneZswk+
0DwTMBumwGsiC3/06AyUryveaTMyClfWbTPezri3SBO7OO77zcBx1ZADPIy8
cA1sLVS2moCNRtEPWJvwkHtEevil7Aha4XtUufSyUS6HAqNE4coX79rRClOR
xBnNySc8dHh9tiFwimMcrTAXheptTWelkMFjydFn9zQerbAQZYuOXb8rTAC8
uAJ7QeUUWmER6tHqaow7OQPRjj9TuzqxaIV5iJQdxTfPyOftpXQPX/2GQyss
QKRg7us3cQToTfJ2ClzCoBW+RovHeTZJh9DA+2fuY4PlCbTCfEQSDAkWvkiC
LJMDg7ktuav0BXNbJ9osnQ5y9+zbde8NohVmobnIY4Z+ZlQI7rh1vLoFi1aY
h7zbqt7ukCZDRTHWcpq3YZVPwXvbEbuGe3TgnTiNP2vbgFb4FKWOmj9kdaPD
pw9eZl4COLTCAiSZcPz+RBwRLjwRMXfNRauMgrRTrO84qulQ+2Gv/LxgH1ph
Ojq4qOvSzUKDaj7Mpw+kYbTCd2hk25bIdVUUsOflOwu5GLRChh+wd69fj2fc
93bt6cGfEFphFGLj93jTg+iQN/XqyMd142iFuYjMoZ7+kEwGvdmDBXw3+laZ
Duu1OL79mKXC9e6gym29eLTCQpS0fnLEQYoAlxz4cD//4tAKC5BjN0/l82EC
8JeYuG5eh0MrLEBs+xw+QCoRjqnJCyCtwVVmwZXN+muIF6hQyInhc1qaWGU+
uLu8WLK2JsFy2HnJ9k7sKvPg2W85vQXGenjKei4sl4xbZQHIdDcUm5MJ8Ebb
LLjYr32VqRDEwpMjwUuHwFQkoyqoh1YogIZSY9P+83clnOP3dXLLE6vMB0vh
BbwMY51oWm8LqCuZQissQmIKzVRFixnwbKhx4PmFQyssQAXuNwtejhMgK9H2
6xIbbpUFEBoUqBz/kgiSl/WMlHfiVlkAr/es05wPJkJCTEahYkc9WmECktK1
Duq6T4cNrjf99U6MrzIXMmT9lE4PkME5JjHP4N3UKovAVkOH++eVGTizY/Zt
W0Y7WmEqunHWXKGDsR87q1KObyonrrIMsDsq1kXWTMKIUdPFchx+lYWwfsYw
K0GEABvZJTUCzo+s8j0I+FsQ972mgA+/s3KA1MwqSyC6QzKsa3oK3jpO3RM0
GFnle0gyrbwUxciPcqzz8ukYPFphIUrNveZxWpoAptnnDUiW/5elcJ5tjPNS
CB7Uo6qmnKun0AqL0NOWx6Q/pjOwdduH9YffILTCKGTwO1JYmbEvxjGVoHi5
D60wHaneMjM8Ok8FGkvgYFz+GFphDrp16+vDV2wUqE4W4xDn7F5lGhhGRAZ5
BdFA/cNVTj+3QbTCLCTOq1kobk6F3ro1t+UFJ9EKPyK3TYOYMBMS0HaN/7RW
a1jlUyDfUUyhM+4Xjo/CdjMHOdEKB6piBBz/+/fKpV37slxNBleZBV1t0dz3
GfnAeyGDNwuL7atMheHBH1kYTjqUnU7yWcuJX2Uh1BqfOKvSQ4ChsZqvKc1j
q8wBi+6A3vQ/ZMiZIPmq6IygFb5H8WaD9UGZFBBgubLFRX96lcWg9CSzaUPn
NPw9Gu+qhses8jVIj9ls2BVBg9s2hjUvgxvQCp8io/i3ZlJ36LA5YkDndCN1
lZVwKO7ot2TFPri8kXQs2466ykooyB8ZoqoOgG3qSMgFC7TKKDh8mB9jV0MH
i0RPXCIVg1b4GhEPqX3ODqNBhO2X56fLp1ZZBEeHb7d/PjMD38vmHdXSsWiF
eYhlIM8sGshgNJU1w5OIXWUeTPGi7DPHyED+e7GNn6dhlU+BR37DwgLjHH5Y
dPNkFB8OrbAAnbDl/HkmgQiKa7b7H7o1iFaYhV58Ou7me5IKD1g2yweXTqEV
FiF287nNHudmoLNZi0ZLb0crTEV1hj27Rhn7a3y0WLDzfO4qfeFrkKL+5Vk6
dG2PIGhxTqIVfkRNKvY3R86S/r/1O857Yn0c9s6ssgS2cJmHeWGn4HdKRlBb
0cwqGfLukvekY1OgeuyBa/o0fpWFcFWT0sDGuE83YUUtXNZ3oxWmIfbHV46I
M9b54aS6sBpTwipLYW2QXH9cPB6EHc5Xn88hrrIM9ufk5Hd1TQK71Vfb8taJ
VeaDi4LD6SFfEjheTfv9fcv/ZTlM6rL4eGtMwsbQuOJvRn2rTIcC4bEco0Uq
TIyu+br4ZHCVjPX/IAclGVJh8eSh3wEjWLTCPHR4knrkiTgZzjxN35N/nLrK
SvD83iZ3pmwAHPzbjlgcpqyyAiJrSd5seqNAHj5ffc6CvMpPEJRg+IGuh4W7
dw9L8dWTVlkODZ+L+KVVJuB2jfrd1ATKKitgbwa32p6hYVA4pWD6lpu8yk+Q
xFmVHVXL0MObvyRlSlxlGWw+L3+T/xQOBFxpzR8x5FV+AtmdyXq7+8dg8s3j
rO9x5FV+gvJmVc3jReNg65Gku8eFtMpyWO/VPylcxshzJz6bt4uQVlkO9224
vuirTwKP9oPTTtyUVVZAGhqifWHkewSvY8oatZRVVkD3bMl2mx3D8FQv9E1O
J2GVpSD1U+nP7CIOBNvkPUstyav8BKWflxTidbBwLeWSXV7dzCpLwLuf646s
+hQ4cW24MzVDWWUFmNfJVbV4D0FDd1py7DgerbAQ7VLY/eywOAEsF1xtr4j1
oRWmIxe98zwvlhnngko5j2kfDq2wAO3Jv/s45Q/jXq4XUN0bmYtW6IsKi9vw
8oz98hvjp4yVG0crzEW8agZKehNk0DS+EMQp3rfKdBjweH/IjKHfYI9L1tn5
nFU+gPANDtVNDD1/0BG6kmIuWqEvGm3WTA9jyL3CL5Y311atMhISRJbJxXV0
ODY7EKtU/wGt0AdtaDX3Is/RId14z0ITpQqtMBItD7/R5mOMV2ZrztrdNozs
/c7ByOBnkC24LbzekgLSl58KH/GbhMMCV3beqGtBZzHXfwvKEuHAu7vU5beM
OD9UwC97NKPUv3PCEiNEqMvZwh/wCAu71+5+frS2ET291XdmspAEG0+0m2pF
4SDOpeje6Nk29Gp+E1feYQIU8iL3IEs8cD/bpnQisB29tfQ4XOM9A3fUDtdx
jTHyEZLTyaD0WlR48GvLeXEqfPyiK9oiOgVh0nYZCpkdSIa1nO978TT8vnfO
NSAABz+V2fYdO9aGUlsPN6YeITD2pwp1OHcArqfPzOEf16KCFg2fCGkq7A1n
nfM8NAaSxBo3qw/1yCSSb6HqJRnGaGNb3ULaYY9yhpDwTDGKnmplezVHg2uG
9/OiHmMhybkk+NyXRuSlKd94u4AEV9pavJ4NDwPX0MDWAvxnhN/Az/v3NAV4
6WVfTmv1wQnXE3EopxrJ8hs/rCqmgo06PnDT4wbgkpN7e+J1PmItftTUaUMH
+d1XfnWex6CGkrh76sGfINziV5ueOw3m9v3Q4b+IB6L+wuXnYe3o3KBnsLYn
I9+593dYBduLmgf/vtlzvRqqs2DxTTMVcrYpeDXEjCE2YbtkIVo9mE/2GCYH
kOHbRKmIafIkmjsZn+5OaoEGl90uuwSJ8OrZwNaU5xPgMq3/zvFGM6pgE9mr
hCeCkfKxoEHpKfhqRDE8UtmB2ASU3q/LnAY9B7G+wrAx+BgV97KBUI/UbCUe
DQaRoe+2Hc7XDSHbM2GkS08zYNNevTTpMjqI78SWmnnOoLOimaF/krrg1R8J
IW4cDu493axxM4uIkuai5figG0zDyS31/lioFzh7ToWRJ78TX/PYRLgVyeZd
31f0i/FOaLbNie/FwNG8mAAb7QpkeXoye9SGBjwn91pHx7Wj0MOvjtykF8MO
l766gVkahFCTat5ewoOx3fXXHlHtCOdZkFngPgNpmcr2tsO94FmVzh1iV42E
TK0CM1qo8EP4RVIk1wj8Mv/+VXbdF5Q56P+J5xgFPLql9whb40D1cGW5JE8b
OmhqHxPqQAC/RvexO9+Hke3mQamEn58h+nG8uKwxBYqVrate5BJQU3p9e8lj
DAS+/sBbITkJe8JtrtcZDsL2G8ci+X/Uoo+SP0KesVLhZu36KN3zDaiL7xg5
/3E+cD+h1/25TAfTY5dDVEKw6N5Ngfb2tkYw9fANuZtLAsPcCdFeezyiB57M
hKR2yF/AJ8c6z0BF8rh3sA4BhRdlXJRSxACHn5ezQtMkTChsuVP7YQKZH9/1
Ls2/GR7xXcoR6CNCt9L2LScVp5BWq/yu300doNrxZ2EpdRqajtypuEfsRcJF
Z9pEnKuhdeI5TyHjnVTn7edR4jyGYkZtk5q66+H67QvcudFkOKrR3/uzeQoV
OdraaFp0QkAzOr1mkXG/Z755ZH6ZkUcsueveF2gDl2X8k2J7Alz1fVt3vROD
hMFjd4paBZDOcnxusKWBLO+2danZk0h7y4f11OUWaO54YcvCSQQJzn6WjwqD
SPjIq4cB+FoIN2EP5+WiAqfylm7uqAkUZvTmUOzZZkjt3IDIVCJky0fZ4S8R
0fJlxxPkdd2wXTtB0YF9AnppD9m/zFkgmQKbulNFuiAeeURjifGO5dfxrN4o
MIVSJookEpI7wL1upksKTYP2uYt3cZuJyGXN2kTZLgywVAeslX8wAUrfg/KL
hKagaf5EaPTLDjTEKvXHomIaVOTLA3c/mgBTA2HDUp1mRI7Kevj6BxE2KRa/
+1NEQC1vGh/6BGOgbs8B9v4tk3D987IB6QgZGXf7Fu6/2wOqXzzDEr2GYExX
sZXbEYeM8ceVYiXaQMx2TLTZmgAna460XrElo2Ve1cH1IT1Qd0nPq2FpEGAm
LF5MBo/Gh8xtsg63Q8Quy3Sl9zPwttXRaDiDiLwHzTzxh7th4gUvMTwIC10b
byeJ3SChrS09BT3t3Qw/YEXz1MeATeG+hJ0cCbG9sdoS9rIbQspaSgZlx+HM
oNFGwxDGd1+XhX5P74H1Nfkfn2kMwjfnBL78sRn0o1uhjX2mC5QG6WEPzuGg
4anQJqLTDOpXNGu5FdMFd3G/Ll6cx8FU9qHuzEUSknvolPpXrQd8HuxVrCIM
w9YvrElWkmTUJ+BX8NmyB8y4Gvf27BoG+bpLFg6uDcgWc7Q2KoGRL3tN3U63
pUPqld9fZcKwyEnoJ7WqsxFYPsuyC+SQIPiI51ytxzSaXhBVjRnqhLUOjUkR
slPwyyckXeHpGLq/bcbbbq4eev7Y3jvgzzjnBUp/6Vgxxm9c7337cydsjO7u
4DeZgm0e2o9MWWfQ5vOzLz/pdAHbLQez4754ePDWZTHVmoC2e/eofT+CARHz
qBsbUyehyKj1DdffaRSi/kwzSKsLcqarMqv98YC7ctcr8xQeeoQUyrx92tEM
XGCL8JsBr3aTkQoXHJSruhuKybQh/W8jd1MYeePBHS9up0ZMQlf+rWynnha0
2El9GyZBhLcnS69ur/lPnwrD8P7Oz2g69s86+wsUSA8Zt7DPmQAPE9OAZ4xN
NzsTWxXbS4QkIZP0LfReUIou9z7pWo3KLpg8DWigAjr1JGIv4/56vmTZU/u5
EYn+DCsuYdxfaRvZ07zFpmBeKHBBI6sD3R4RmtZg3KfPuE7aucRiwW6jV4L0
aCMytnvy9EAmCThDS9l1RAch8FpoXV53LYpKX9uZtJEKlbPdSutGyShyYZv9
l6keKIg9czskuB+sbvoJzX4mIYOuHbyFAgx5mRz3JBoBT1PCbU8a4/zXvCU0
fKcbzJDEH9o6LIjGscd3SlCQoHOdc/IWxjltI/HjNXcfPFGtyXVPIaG9hE42
kcVuEMnsYzl8dRSOTfuq1tSRUSllO6ET0wMneNvPm20agKmC2yZu3RgYisi+
K3+4Ah1RlODVYpwzohWhVm3CCAR4MtmHzDPQt1O9IU3ldHhtYGDSL9QOmgsF
922ji9GhjVbo408adLQQrNQj6mE0kcZOJuahez/lDN850UGG80BJk3UDkgi8
flw4KB8uuIjqIsa53R0jc9YooAok5F9o/8Slo6WJOceTlXT47K7pwRI1BgLP
9p7XJtej9GO9j9sDyTDMePvqtrfDlO90br5oCfq59cxyHYUG7AGCanRehD5f
2eRQYJQBrZqzGgSGnTzVikp++GOQZPb2re07JaS/zcT0P/m4jJ+neOfVXPR6
h9jmC+FP4Zibv+0NGh1cL635OyXbjuLXPXqw92UxsJp1zB/6QYNDBdcLNQ8N
IKdAk4a9+2pBRvaspYw+FdgaJFwCk3JBJ35LD77gKaJXkHnlGXpMCm6/8Q2u
Qj5Hzny6NJ0OWyyybPQZ87ry3t77SWQOMlpjLE4lJcDGpyVh5+h0cEqx/nw5
NRd4F48INBc/RcZZ2EIZhp4Eod3V4/dzQbFTrHNP8lN0xvJBuTlDvstziR/W
5qEyVe9ka65EyPSm+byn0uFI01pS0mkEC5sD9rv5ZqDq7LjXpYx3RcUtzU6W
+V60MXZv8sO71bBHRQSI9VRY73qwZW4Bg57s7c5zcK6AJ9ewB42taKBX6Mhu
yNYAKg1mj+/p5iNb1oX66GuM81/l22uOFgyItzu7BStUIL8m+92fLtP+3/9d
G3F0dfukjKCPofZVUUz1DprOrK2qL6aR99tQ0trX/6tneTorw76ZOIMuJcOg
NVM9TuxPyx0f/xBQjSpHSDlTXY/Wz+OubBNExHLq6c7HmMn/J09N1aX5M8Y3
nD257ivTePbWBQ150gzSdamu3Kn3P/2uqp8l9BnfPa9OZ5Fj+u5jA/MjyXxT
yLpVYd8IU12P9Omj5XWbptB2jjUOnsL/k0co7NO1Ycifyi5e7GSST/Xd+tSl
gENtctJBl5nqgKS58Lm3v2FRJpfag7+S/6t/2edlqau5cQqpLWxz7mSqezpe
FHmzKXUaeXTd13Bl8ptyDGtngSIOXd/vyV/GVNez/ruN46I8Dk1I6aTVJ/9P
/upiRGYGw/+jdJpIPFM9EX7R1Tf3KxaNdG2vEWaqJzqjadBDUcKhjgUVm/Zn
/9Pjw5YfELyARZ9tvfZHM9X1DHsYzrXMY9EGr+KRt0x6vgUL37Nn2LM5sPWO
ElPd09iuE+bLDPvHND7de8hkv24geamEoT/0kUDQHSb9uN3Y4YHkEXQyF/Oj
lGldbRbTLjRj+FMob1RUgGl8Wqrjo85ZLKp4KZg8uft/8sSqXzaLf9pRdpCC
vClTvY9m+zsy7VYfwqa6btRlqq/x+u4jUvJ0BMVcf71zzav/fdc4czrl6/MR
xH/dRWeeyR5uTTeP+jUdSFvgjhErk/7Ia8c/lJchtGBGjGauU/j+qr3p/r0+
dPumzfFMpjoL9w2tvIaVCFVrVp5h/j1xSdPLlyWteqrSbP+tg3CWMFr6xvDP
Vgv5/Hwme3zKL3r6u/YhD85gC3um+o4fF1XfEBnyGGP7q8x1Xr/ui4FPOUL6
okeD+pi++3v0d8PLZyMoKOrFUCBT/dQsTXvtFEsHcpwvs+Zlmu/Eh4B0PFcH
cm8+6/eQub7jeCOm2a0PbZpTPSDD9N3q+6OqTxn+hMb1FlxM+mXWZqb8dOpD
NXHkBWemuJyb4rxtPUvWym77t75pB3Z87AJHB/q17PKtkem7aZ35vwqKESJ3
2Wcy1xmluevsesrY7x347Gws034/dj82Yx8jjqwHdPo2MM3rU2zrgBR7B7Iz
u2E+wqTfYB/9yxtGvF5/2Ehm/l149wq0NsyjD0Esq/ZdpvjqGs1+++zSh07V
xwiSmPzA0vbD/jhjvIlBWcQjpvGd+w/syWDYs6VyXJudyZ7fHnwNe6sQCr+m
2dLA9F1H3Zm3DnE0Lf8rc//4hypWsGO4AiGzJwZ8zL8vD1//HHjLsP9kmiGR
2f5hkPDI3DOrZZxH/7fO6ySL5HQ5gntZ3PgepvFNn9fpdxQjyDttp8ns50IL
0b+ey1Qtn9l/7TF3uD94QaOrSqn/3/W84L97MrsCgauaHIbZzirfY/2HPyFY
lr4X0M0kT+gN6TS71wf9uhF78pj8ltfWHnSZIa/c59z7nkkur/2Da5mtA05W
FreNMcVRlsZBS3Tvgwc6TakYpvEbr3r+cb3dBweSZcyamOKlzTlPusbaAX5t
j9SYf2/d70M/T+n6DujYY2vkyiQvmDd+U+DSB2O14SepTHq2UX44Oir2aGld
/9cP4gvWXL4lCKyeSPlMMs33k/O4q1w1gi+vaZ3M9VaXr79q1xno0LrP+m/d
2U8PL2m+IgTvWR0UKUzj5WXxt/irENQbxqo0MslZXt7SFyH+qcLXtvyjZ4Nn
ueJ4JYLAlrtrmNeJi9GSmh5HB/g+8YxqZpqv1VK3GG1dB/iLnyK8YJLjL3Sv
HWOsN/lfEmuZ9SwEk5udb/XBK7zlgCXTfj97UU2dxNDP+jVkRzWTHlOp9O1Z
rn2wfGiv1yUmf4oU6QXJ3u0DV+Hho8LM+8vytv9jzg5Yh2+LSWDSk7r9YLK3
Wx/gDp8bPcg0Pt9bmM92uR11PvgYJ8207/orErvzGPYUNCqX1DHpuTRuWGLP
+O533TEWbubfl9+mkv6Xsa54WpQimesNn/CcDN/CiO8BeupmPJMf2iLWVhcz
1rn6s92vu5jrnXMPWDcw1m1ucsTRSabvjp5c/prN0DPon9s2wTQ+6rj6F1tG
vFSGvi02M8nnE1Q4v9cNVL1LWvonvod3PzHZp4ep8v747zoUBFW2NYx7wd67
4x5zfe7bQN69VYz1f2ETX988kz3lNJHiToafXU7sqX7CvC/OiRKO7/iq9U6C
+I/+IJXrIV4lCNGPSoYxr/NE3V8j8us70NLuPeNeTHqODpyV6GHEPeacuNM5
Jj/TBJYGrdZ2gFTcF84y5nrPRsFbLuwdYGihXNbPJO87mlPrxdUByv6KvEFM
8rtjwrp+jHMjNoY0mc4Ur2VdsTccDPmcYLFWFZM8gXCwcj9DLmuYe76YIfdS
3P+8JpWCnCl4lgvNEuio4EuT4pcjYMDiMjw9T0Gbx0wFWfS6YXKBY1HatBsa
uma/6ypSES898t5hoW7ofX3qoObPLpDdN2hcfJWKZGtC65vwGAjblpLytrUT
tp5+K2BrSEUTd1190nx7QFB8V1eVVgfsynsrJCNKRS2/3Hgf1/fAj8isN0Ov
OkFws925KG8qmht5H6z1txMq3TUe60th4P0mlTspWAo6ESD16L1ALzwsmmvt
bugCBIJTCsFUVLSWdbOcTCMcaxROiPfqBZvxukyBNxTE3XXjxX3fbvj57Mbv
xYEeyGr8aFh6hIowhxY1fQ62gdimwWujpr2wuPv5DzEnKqo+ZhezkFgD5zs6
7bsj+2GD9Ny2Oj8KwpyrlP7u1AqYwtOjWItBsNihHf70NwVZNWy7cWl9F/AK
PbXk2doLw7ZXxeVCqaguRiRni3cbdLVLx98p7AYlFrfm6BcU5Di97gbL7i54
9jDPbjOxDzCOJNdWVSqKfpM0mGTYAGI/Rs7UX+2HR+2bbdJ1qOhUfuan/YJd
8A0XGbX8qBtqxfTsq9ZQUfnx1MSrItVQ/s66pqR1EBbJVj/Z5igoIvFSwsm5
VviZe8cxbU8/OAXdumrQTEF7XNwPjVnXgzlmo0T3s0EY1D82P7SHigwP79N3
ECuAl2rzddxzg+AhHvp/6jrTaCq86O/LkAqRjJGSzBVlbtoyRIZMCRGFSJJE
iCKVZKhkqEgImQmJjMeQeeaaL3dyB/de0oAfJf/7rPWs58V/reftWWfttdfZ
Z3/39/NqaxzQY6JbW2IMHWpH4MrmIvLNGYOj+8QrLiQvIHclk7MBb6uhRrvB
GlM8DpJqYSuKJxbQeUHjkMGZFPD8HVA6sDEJarN3HkglMlGurruJeGExOnhn
/4G+ZCxwyk1n8CgxkcuqOK+NJuvfKFYK+GyfBAX2/8a7WLwv6q+m83w7BtqT
h9RbqifgdJxMj04sHY1oHRjYZV8OPaSO+y8aCCC3kaWaK8NAF1Qe5o+L9kD8
xFanf8I4YP9O+Wuuw0TH2gqxCbxtcCY+7nmzPhbeq6+HGPgx0ZzBmo3ThXow
faO+O+8uFijRkW/i0+jo5Z/eNPzNo2jD7Ybt/TYCROgtYmJ+09BYYmuYf10O
GrrYU67I4jWXNVtxJzkGmkhir7gl14PktP+62m7HwSBeqinWmIKcve5SV39g
UduPDLzYKAFcly0KnM5S0G1eZxO6ZTviE4cGv3MUeELLFDeJZ6A6bzueUu0h
wH84wnkhcRou+KgsLbUwUHfO+umJ7kw0ZyNR86MFBx6Lp/bf92fdZ/ZGRoW2
guTXrFs7buCgJNGyTXqZhm73VK076GdD0AeOcDIrT7pCFuNRAhNldK3hVNyL
If+xKrd1ChYue+2yEsidR34e+pcI3ENg8uVObeMBAug/7Wi650JHf2+vq0tG
NMPwjvd7rr4mgJlerEY9qy4DkU5mZLsMIK/+F3KXlc/JY7W3diwyEH1Hx3YM
pQeM5KODXv+chgf5EcVfW+iI9+nORaPtQ2B+Vtl8o2QWDvBrxV+fJiNPDJEQ
4DGI8NjbVRtEMgxwy7mFys0j25lKi/urGLTbN/tiegcemGLvipO7aagAM2Um
7dsAyjx6D1zJJDDiralTblxA2nYD/PyUFlie/Oa/O3sUlo78xoIjHdFW3ZmX
apvRAEiaSacQ4Ov4Di3DnXQUrFCzulexGyX/UlY55kYAL6O1p0OrFPQy5kaT
svok6gn8Rzh4hQic+BN7thYyUGCaU9+DT9Ug/TtCwygdB6WCq4KFuQyUzxhi
vF2oRvjB/at78nBwx0aH3SeAgQp0LTd3ZrSiai7pBa2rOAh33rJ4PY6OHvlf
VVdKLkd6r/X3TtQSYH/T8U+hkTRU0b9f5+bLTkR3KcsRyiCBqcgSp+6nOWQe
63mtgjyJ1jIez8t+ngM99QPrYntoyNTgNq/g2CBq2xJiJ2JKgid12GNLAzQU
9fDD+d3VDeiZblXEthkS5Ea6rI1Yk9Hpa8pd/zmNoneGO2wXbMmwLnWv6qUE
EblwhT/QkR1F7aaV4oaHaEAS/3T1aBgBLfoHnbiuM4WEzZaunXKmQox8EJf0
CRIKu+sSv3MMj5xsduLYzpBAgqxj+TuSgvh58b8ldapQEUeVd+xLCqi8vUeq
GcUj05z6clrvLFJ1tKwh+FIg3fmJGGftLCIZSje3sTh6MsN3Iyl0DrYx57Dn
l/tR19H3Dl41pcB+EqeUsLEIm3N8FaEr/chHddxcessnJCLy4LcW6zzwXsU5
8tVR5Lki9y3HnIzmCuykcA5ksLqa7uAp3oLa+fnTzrDRkVrwqn+2GBG4lniP
H/3SiRpTBUx315GQL33nzZSbNFgZrAxKUBhGK58zfcU6aWhh4vI+N9Z9kyYr
9a7xcaTeNRRpiwjIJGlq3WqACtti+pUeR3xD3YvvxCQP0NDZbGbH9qtz4O6f
VKMUSEQOAlF3/EKJaCHQUM4hlAi3Z5gLL01mUDWv2xbpyjm0ai8du/0JCVbj
orF/7k+hr/GhszxKVKT70LziRwFLH0awqof+kVDrdwvc2f9mkI++wnnrfyRg
0N/O3t+LR2FVije/exKQx4us489CyPAnUbRpfWYajcU9HajfSkEMHeFD1Hgi
yP9/9o8LThtFd6cTEa1BpzScxblut38+tRynwQPtuuhtYlOsuXM8xFB0Cv1Y
CQsykqUD/yudjsOrE4jMs+pySg2HrI/d9N21SYOWn6RPNq+o6P4DP67wE6Mo
ttkrWneGCKe3qDXd3+hCVZqcIU+rCEivuvu/vIl56OP400mTnUZBf6zIW40x
aIf5jOt1WQbMNmi3Cf7XjrbpvU/UCSejxf2UvyGbFPju9499q0oP6rQ+T3qX
N4vuKud/eXqGAYUO2yYDn46hvrXN+5RqEjoRc/MnLpYCbl4ag9sb21Am6Ulp
/k8Kiv6Ql3biAxmy7/VkQ/Y8Oj/z681hpSHULqEb4CFFALBXViG7YpGcvpKe
nnA98P36il8IZMKmZnAotbYPFckKS3NEDKPAurm6vuoFiHPTzNpe2YtKZF9J
sJMmkJtPgKP5WybcdzKOy5AhoZOTbu8u3yxEy0o1rzLfzAPeDGex9z8iMhTt
KfPub4HuvfOunRfn4W9gtP9b3DTKW79pprLYg0wWV6RsfjJAKWFv3eOfRKQf
oC0adKoVObqThFtt54HNa+3GK0US2rG4orHqUAC4nYui+knz0HQ578OKPgV9
SjHYuCHfDpyGOYo+5yngTz3EvBxFQUUrjzjPHK6CjDfyHFYvKKBp4Liq8ZiG
rNeZJlfCOoH/vMo/yCZB4LO7N6PcsCjT+mWcckk9wrzQCvUMYILk9JMK5RTW
+/ycsfurrYYs92D+ZWcywbvB4GJ2MgW1iZIuX883QfUll5USiyggWRL5L1CU
hi68u651pG8Qsmiy1y0sSVD0LYrRK0BHhbIBW+qFu+GEhYe6zlUCFEkqXVyL
6Ue3Uoeupk22o3xO/189sYvwImCfLVV6CNEMS6+F58yjcGsCRyqrXvsjVFTs
VEdQmHn/ukM/FeXFSMRclCQBv/CTHdjDGGS0r/+gdykF7boYtOl1dA6q23IX
lg83Ic/g8vQIUwa6VvnzZ746HvxV8rp/KLWi+OdqFduU5tGRn54jKYdJ4Cpq
7HROvhlNHr3gcP8zHRl67FK6J0GAEq7k103pTOAurqxk3y6J/DlqPGpZfhj3
ra/OwnEROkeXIo1bZKDko8Mx0mkMPPklWJwbvQh2E0PD2duKIfN4iI9V3zDc
+Eg/7vBuERqVc/YIaNfCZ+T/+t2DIbjm+/lAQs0i/KkxDeooqod4/i2PVd0G
gSkRp6ZVsQjqOSJJP2PLwa3rpRU5ZgikAk7daAtYBL6105vPfaohpfrelZHG
Yfgv//yKZNIiXO7cjT+FT4Af7VZY75Fh2Naik0BjX4TDz5vDGq3KoJO93fgH
ZhTOVfiZW7POOdVK+Y08y1Cm36CG4vgovPdzv2AusAjiikquH/KTIacA2ASI
oxDNNcynW7IA7gdcGp8X5oGmVaDXTPM4dDgF3HrBvgALWb5pUoJN6NVahOux
7kn4Em3fzc2KIxCRsXw+IRl5fUzdn0MahW7nrEk+/UUIKLzHBocqwfD3UJm1
CgbCZ19QJJMX4J/bYc0jedVIKFdXiK1kHPicOu1nKhfgqpen0eD14yiRyvZ2
qXsc3jfsxoXaLoJ0LLWEbzkbWrIzC0OOY4CBHUr6cnyBpa8Dh8/5pSLe4+c7
zm5OQtAZ3/BeVv48u/hMr3fkoV0SEoeLG8fhbn5Z5Zg8K36Tc4Txvc9oLSwj
r4U5CTJX1QkurDjCf+5l83qmQgjmz/NhtilIS7JhH/BeAKfw92O2n5qRZLDc
4QOvxsFOK6YEWPm7qnhYX/xQDb+nX6Z/Yvlhv45rhbwKC7Bi2s8p7voZnsie
ZpJZ8a+5eZJPJDKhfXw4N+NBMbDvtPPc/hoLwlNRSubdTNj4tuOKpWc7+iC9
w3v8zSToafd8sQtnQqFooQPpTS+6EuDsGuw0CQ6+QX3cMvOgy8GtUrWJQV/z
PPq0uvGwW8NuPc2IDjlf/EVivmAQ2w7JoYbds1A8dumMujYTHL28qm3U2tBk
0tIiTRcLHzeaFNZuM6F1JqvNJaAe+VuJKo4GYGHtp1FdTM48XH1rJP1Bbgjp
baXIXdpLgO/RlYZGvyggErpu9P7kJJLav/sQw5UIOp0lWe8LGMCDMdHOLWC9
wxP7pvUMHHyI4aqIX6HB9k0xPv6xbKiKde2I/UOCntu6uMm/JFj58Z2X69cM
4vMeD0rbMgeP+t/9pbxkgGg/eUT51BDSeXpidFfCNET+sxQNz2fAy2C/pjj/
ajTYGOHolYsD7iCPnK9NdDi7LzyjXnMIiWqci0l4NwsvXMV7TxpR4L3EroaQ
71gU/7musmGcAM1+hPtGCUyoSBERnO8pRvPu8pWZb7HgO4iSjhtSYUua1moz
Pw41Dgitce/CQaNZ6eHJZBqUTFBF015MoC6mob/MNTw0Bvd6/77DALvjwbSx
3FZ0/vTqtOw1HGSWx1k/WmCARb/Qn9DlHhSjKyTG92MaehO8Pv9omofso3u8
1xfGEaW1czPs4QxcUCZmXyqbgwLmV8Kb2UmUtkWHrl85B/XLl9jintPhAtst
vdsp5aA99/DI7hoCLD9+q1oTQ4bkVT71s6p49Lk8odBWjwDhVe+q+amsPmrB
JKUeroP1UKZHUdMoPLs+wJ7uSIfvLx8rnchoRj77UqWNUwlwA9u0/2ccHSbu
KGwjo3LELqVjfoUVv6xa0K2GVa/WVcNY3+ZsZF856+LDqpeK9R9qkxwDVnVN
IvRke9CRjw8NNLfhYDiBocPfwgBawx584qlMFBDjffVQBw7wX4ou87Qx4EDi
ytYvdRmQS/iAf9CAA12FD8WOfHSYNVwqs9TpRkeKJqq3s3z46wkZJs8eGgiI
J4dTRwfR1Wfliyosf7t6I7WBNEGGyM6+oR+eg2ifXiL3cTIZvlpWLlhE0sAM
83S9NrwTaQxyKERmkkBjIn/L/QQqHLiRp8WnM4rYfhpeDMMSYfyP391/VmQI
iPzSZ207in7eNbUqtidDSnuCpoAYHtpvuAsM3SKg3Ns/ijjvkcGw+kGy8Age
CupMJzxYPvbA1pmg7XcoMDqp5H0knAJPD8ws1ddUobzAr25mSRQ4KSR0r9yA
BL9ObsQq9+JReEv3m926JKi3+jbaFkYA1beSO8yOT6HZ28W2Ly5TwZ2af1Y6
jQjMVmeF3p0D6CAugps8QQPkpehOzGiEBG/nNoNBBkq55fzq8pdZ6NX+L71F
swnOZwdcjGPNNdf6p8o7WHNtu9ND7c8iU0A1Cb26VWQKZWbTNZgs//Yy+8q2
mqo+4M/TEq6NHUapocby16oWgJNI4F3EtMNCVObJXU/I6Fy6yhOZDQqMxJSH
rdtjwVj62lsjzXq0ofeqnBTMhF+clu+tO8ah+v71fYdbCWhTWE45YZDK0qvl
B7PQA6elbzzNeD2L3P5tzTltyID8WEz3mbcU+Od8uLWTZo3isVa/lvMpcN5A
KNL2NxFi/YTandZbUFv8ievxdvMgXjQ98eYQCQ4dVXFXvlkAFfPvkpmv5oGA
OyCgDxQWj7r82a7Rjja+1WwYWFNA9UB/xEERIlziK+h5IjmKtnLiyDrHaHDr
Ln42XZEEOieIprUeBWiFWHPpEMsvBfzf/cL+/2u/sN/2nSKtNbNA6uKseM3i
kUjL+0GTLB55VNX0LunyKHh5MYw/n2dxqtWhj2QWX7zgVNAUTxyDL/R84moF
Cb3ZnTL3f+KEN2XgTQZocLknOrZ7ugEFSvS0rWNJsCCZeOBaSRs8oFBM7vyi
IMstp9dvs3ypceqFFyYKGJiJGo5XKaGgUilnZVX1OXjQ3DPv8awT+ic5srUR
CR00URAUZHHKxV+llseDvwFHtmPxKTkaisSlTtY4zQGXg2WX9L8JCOI+0cHU
wKFvyZW7wv7SoGCt04zW3QWqdlNC0ERAzgn7JeRH5+GtUsm60zs6GLF1e/m2
6SF19zJ74w4CpM0rKvzRGWTp7QDn4iU6UrezSVA9iQfjoaDsEqkWuHM/xZ39
3zwiy2dJREsQ4f0V0qVSyVZQOh1z0UBhHvXaELr6VUnQOhi4KDw4Ddo/C7nI
2yjog85t8eeJRMgEwa9bNCehRP59ZLU0DU1qayZ1DOLh5FTOpXN7R2AAm2os
hqGibtkY3t/iJBiMGDbT1pgB76mIWza1c2j93K2KgEgStH06uM4bPgV16SHh
WQpUdJB0bS9XEQHkbNnOkpbxYLamddD7MBndC1lIvLaKh5xqJBpcSYByc8pU
KY2EXlVMqb9g6ZvEsa1t+YNzkP8xPhVVEBDulqZ7Qj4ejjuKHg3nHoZGTSWR
6mEa4t+efUlMkMVxkpbfVCSHYKt82SfT3HnE1W/ieJE1Bz+l8Qe8CCRC0akD
WTQW992Yo1uEhRDBoMEk+wP/HPjU/uXuEyAhtaNxqV4CeEhZnlf0/U2F9XW+
lOilaWTf/FFMaQkHp4l1W8RlmkHcscVtluU/HS01z8uw/KfPqyhf7gQsKFTp
n517o44c+YzNb2YxQe/K6gtB7DR8tzA82dXTgx5faoi0X2bA4oPkAIbMNHya
99q1xQKDyn65T6UcZAD3qEHu6Eo/2EXZHlJmlLL+YaSRMYujlTyMQn6l9MLB
IwPrj/9MoBEHTM6bJCawyT5KzHjQD1TBxAn2mXYUKTeUHRy3CM+3je/28ibD
Ke1k+RzcICRGCthzHKeAw9vD2T4BfcAx6j4lklsNi+fGY+XZvkN412NDi1IE
l7sJZjf68yDlSpe7+Nfv8HfHtm2Ktn1o4HFqtbVwKxxuMNKc71iEKlue1U0D
PFq96EH7rdUL+pONu8Sy6fA5kJ0W/xYPAld27Q7f6AQh99Jsadb50knG9fuK
M2hQp1m0jjAJrh04M5Ur85C0c5nw6GsvZCkdfahqgYE33Fkam6GsuWig9GO0
AwNhatydl3eOwfmCjiNhKkxIU1ky9YzuRSej9jV8DBgHw4eDtN9UJihe2WJ7
faoeHdz55tXGqSlQslGgeq0w4Vlfl73BNAmYH1sdRuMH4LeZdPmxYSpMCbyy
q8igIvmeuD/JgIG5HpcVECDBV+unIOw6D5Uhz/dx6n4D9qmi8l1DRGh6JPxH
RJQOfyQU5c6ZtEOPrlpwAes/Z7dWlB1k9c902d1X3OLjwGl7+oel9BxsidvT
ud4xj+4+GyeGXMdAw6b1kvUvHFQ6irqNh1MRR//QnHPyJDQsC8kSnhNAfLMH
k1vABIsrj8+y2zVB9gPDCyZ603DMmzfgl/gCkHK5P2s8bIVP40zlw98mAKde
vcaGpyFdU/2oE/1joMV7QZHyGg9SN85FsF9nIC0xjhSOQ2PwZHRMNTNsAsok
4WyJGgUVNC/WCJljQcxDP+SqKhGII/eDQx/NIblVlTHKyiRE6YWGKk7Ngdei
n0GcGR3NWXcE7agYg6/Vn56GRmNhaBDbKmxvj/Y22yhHq5HglWqfzsWUeSgn
qFjlYJngwu5crqraAnKbk3Yz4lNgdXk/f1cxDTn1P253E5uG5y9jhdZ8Z2FP
lXUHMZEKWRfbJDnyG8C++MixNksyKGBJmcoUKtzXHFkzEhkGbhefVzr6JDD4
WncYe4kBOT9qX0NbD5jI7hUoU5oFh3nzswGrFOidPD1f5TIE9nNJgfsj52BS
85XLzXY6yM+O77Gp6oCS1wXe5Q/w8PmkviHftS4wnNYvxfHj4Zmg2erlJTrk
Owzkxj9l6YD3Y+s1nikIrEsLiB+Yg6rEL5lmUUTYvbHxpdN+CszO8YFcJAXM
dqA8Z4WvKO2aqYu4GRHWDMKGJIXo8OsdnbmkWAtE85aa5mESyFAwJyVoNDir
Uv0yYYIBWmT18vYLvbA67LXT/RAWgqM7sTqxRLRpX/S6ZhcB8J+s9d5Wk8Ba
kPe3P30eXn4uX8p4PgJCm7EfTbfiQXNoYeoMnYlytIvHwnXHQKz1s5QG5yDM
BYfaS2ow0TaM7vUNqQkI894adFpjGPZlXik8HE+Blls86HzcFLgnCju5eRJh
jp+hI/OWCWLafz1reAYg1YcrW+3wBAiGnjyq/HABtEvww4/vdEB0RZZy8OQo
UMcD5Z84UqHhum3lzsIpaHm5m0vEjgDHVEqPXLNYALWFo9c/Zn8DUrRkNFvk
OJwKHynzlWaCiG5HsPjlPsAE+lvgG6aA58zSxA+NRbg4w7UjIrgJ1JbvK/n5
jACbPNag+eg83F4bKCn1HAG+xghWxQkwewXV6d5ZgIT0PlMbQhtk7/uYORA9
9v/2b/b+r/2bAt02WjfUCeiTacdOz7NE6AsqLX09SYInDzrvtp9pR6fd2iIT
ZMggpF2jMutMBRPm1mHP/Dk0XfBjQucxAYxD1XibeAjA0+SY99R3EJ5tJ/u9
Tp0DKUupOlcBKnBcwi+evEhCWygCz2jFROBS6ddrciRAx0Nzm9cH8bChvexs
wE2Alz4/F7VbyNAnun68XJUBMi7fd3kHdsHZ/KB/D3VxkBHkJ3TkLRMZfIjf
GpM1BpRLSURUPgS8UgTVmdJ51HBs8MXshRn4qB3X/9t3AmQ8rMghOlSEzhbX
50fjYf+q0sBN/hm4I56XXK45j9JbJh7fDsLCVqcgxoTuNAzfq9E8Ic9EZjtq
JnX2jsPmlQ7qns4ROGj+hidCn4buHbx4Pb1hFgz0lXmktLDQkrZ1xIiLgV5X
JId6+k5Cn6rH+8YNVt8r7ck6nsBA9R68odrpLH3DfNvLeX4Mgs7bpD7aQkd7
u9QknS9MgXxdqISc1xQEJNED07vpaOw/I+kF1j+USo1ib3echCwbDgGDa6z7
BmVOfA7TYPEc5sPLWPEKd6Z9rGWgd+zvy7aUTsBtrWgfjBEGonZIydHjqCiD
9HtC880M1DvUWEjk4cDQ3yNjXISJFGqU9pzDjMLB+hG1E1GjcPtt8mxNwjy6
/Ck4MaF9AmYUhmce3pqBZ60h7NtPMNCB1OepMU5TEP5a1jFlGgOq1D2yRWcX
4Wmxq1BRYTMEhTzU3WwchiE8e9QTOyackblZxO7bD61bKv90Rk4C7mJvnTGL
05tnHkYo7sWATarS55TQWZB+uPfCVatF0LIXWlCdb4GLN9LvNSgOA+994yPf
v9GhphMeRhzFQIyW261/hVio1bgj6lO8AO/pNSE0zk540N46ml2LAZKIQd/Z
5EY0TKnOuqrfBUEeuN9sMt/hZv2j56pjJJS/dCzRP2QExlV8XjEOUsHxZtg3
rZV6ln6LDw3sH4aEibK9H+8tQppIMlvHayLoF3GXMI17QajEV/TDrnko2aCy
zbG4POfWN2720Dbg+R7X3ODChIbaHRyUUQJS+n0sx+rRGKwIPkw4tosGZdGn
aP53nOCV83PlHPYBiPGKUvvB8x0snWN3jnnSYPmHpObb/S3QYxl1HXt0DgwF
nSfYruCRSXkIQYQDD1y34YGlAwV+315184mdQDd2n/WkUrEQpmMxJt8xD4e2
ViHZ53NoY0dinOQxHLhePkMXXyTCicYym3Or9bDfaXvDgfuzkHdCYpsQlQGc
E+kQvXUIBZv9MVYWmYOwkAjng15UsGp02TaaSIYb5jJHGB5TMKg8avEohQSZ
hdLdj85NomMupIXP3+dAdvhOekrWHKSlToe+4JpCDVMqcTLnWP2mupO9g8X/
y01OOzkYGKjlcObcd6IZCALe6TLfF0BCuJfxxA2Dzri2Mq+GYiCnUspS5zkT
2mYchJf+mqIoo2H91QwsSKTbxSylM2Eo/OCHwJJpxFXg/Uv7CQGk+MSOuy5Q
QO2U5sshizHkSi3T+EQgQnzZpEeSORWunBsKZi5jAdVd7ToiPgn/WhfQ38x5
sC1WI6dHEMD6SKj8H7lJCHn6RyovlwrBJwy8TzmMoKKdsmlcdTg4z16ba8zi
81y/iDcbn4bhm9/6JbFneEhMLcouaZ6HDJOcIoL2BMRdrU641IkHe37365us
+m3ztaSuHGP5gGcxz35yEeDpDR/PJBkq4L/fpPyL/oJ21goIyv8jQ0NAvX2K
CBUmdD/7kqfaYVPrhvKm9RzwlVWekuWlQZGZ32piEw3wDQO49TfDAONxno5b
iaBr1hZR1UuAwoG1I5Esfy8m/E2VN2QOvvKMmkZZUNDCrQXfWmE8DM84UHc7
4sHBc1qsgNyJqi/k3rJh6T4/T5t5kiEdKDPmsuXdRJSvl6VdS8RC4/dYbtmH
ZOCpsq33FpgCydC3hcPh43B5MMo3o4UOhd0FC6huBi1+2Jt9oIwEETKChteu
zsH/AGXqLkU=
      "]], {DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm], 
       FormBox["\"z\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotLabel -> 
     FormBox["\"Basis functions of \\!\\(\\*SubscriptBox[\\(P\\), \
\\(2\\)]\\)(\[CapitalDelta]), (\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\),\\!\
\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\))=(0,0), \
(\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(2\\)]\\))=(1,0), (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(3\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \
\\(3\\)]\\))=(\\!\\(\\*FractionBox[\\(3\\), \\(4\\)]\\),2)\"", 
       TraditionalForm], PlotRange -> {{0., 1.}, {0., 2.}, {-0.125, 1.}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(5\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(6\\)]\\)\""}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.30756835, 0.18676585, 0.147065275]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2306315, 0.0964065, 0.05229475]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2306315, 0.0964065, 0.05229475]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2742634666666667, 0.25883306666666667`, 
                    0.32036026666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.41139519999999996, 0.3882496, 0.4805404]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.264244, 0.235312, 0.3506755]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.7, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.6999999999999998, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "Hue[0.7, 1, 1]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.7, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.7, 1, 1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.264244, 0.235312, 0.3506755]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.23627719999999997`, 0.19087386666666667`, 
                    0.14698493333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.35441579999999995, 0.2863108, 0.2204774]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.19301974999999993, 0.1078885, 0.02559675]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.19301974999999993, 0.1078885, 0.02559675]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6730957579765387`*^9, {3.6731048050495543`*^9, 3.6731048487029963`*^9}, {
   3.6731048863189106`*^9, 3.673104898187741*^9}, 3.6731913927533627`*^9, 
   3.6731914369320774`*^9, 3.673193211323557*^9, 3.673193658335993*^9, {
   3.6731936936970773`*^9, 3.6731937200981026`*^9}, 3.6731937551085353`*^9, 
   3.6731938543958044`*^9, 3.673193953084633*^9, 3.673194024138775*^9, 
   3.673194123409687*^9, 3.673195952917651*^9, 3.6731965576644015`*^9, 
   3.6731973942911787`*^9, 3.673197533225355*^9, 3.6737079499650464`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "6"], 
    RowBox[{
     SubscriptBox["a", "k"], 
     RowBox[{
      SubscriptBox["\[Psi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stiffnessMatrixQuad", "=", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "i"], "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ".", 
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "j"], "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", 
  RowBox[{"FullSimplify", "@", "stiffnessMatrixQuad"}]}]}], "Input",
 CellChangeTimes->{{3.673096536179226*^9, 3.6730965481061106`*^9}, {
   3.673104941299889*^9, 3.673104966178507*^9}, {3.6731059838023195`*^9, 
   3.673105989115465*^9}, {3.6731941455602016`*^9, 3.673194148879409*^9}, 
   3.673194444274514*^9, {3.6731949048601327`*^9, 3.6731949426002*^9}, {
   3.6731973424769993`*^9, 3.6731973647936325`*^9}, {3.6731974084060717`*^9, 
   3.6731975054954605`*^9}, {3.673197550690984*^9, 3.673197593567132*^9}, {
   3.673197701640707*^9, 3.673197782232273*^9}, {3.67319784018108*^9, 
   3.673197842853961*^9}, {3.673197966340061*^9, 3.673197978994075*^9}, {
   3.6731982392787075`*^9, 3.6731983105671415`*^9}, {3.6731983484472055`*^9, 
   3.673198376379442*^9}, {3.6731986539607325`*^9, 3.673198688157754*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", "4"], "+", 
          SubscriptBox["a", "5"], "+", 
          SubscriptBox["a", "6"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}], "2"]}], ")"}]}], 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "2"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "2"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "4"], "+", 
           SubscriptBox["a", "5"], "+", 
           SubscriptBox["a", "6"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "1"], "-", 
              SubscriptBox["x", "3"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "2"], "-", 
              SubscriptBox["x", "3"]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "2"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "1"]}], "+", 
               SubscriptBox["y", "2"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "3"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "1"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "2"]}], "+", 
               SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", "4"], "+", 
          SubscriptBox["a", "5"], "+", 
          SubscriptBox["a", "6"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "3"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}]}], ")"}]}], 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "2"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "2"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "4"], "+", 
           SubscriptBox["a", "5"], "+", 
           SubscriptBox["a", "6"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "1"], "-", 
              SubscriptBox["x", "3"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "2"], "-", 
              SubscriptBox["x", "3"]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "2"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "1"]}], "+", 
               SubscriptBox["y", "2"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "3"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "1"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "2"]}], "+", 
               SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", "4"], "+", 
          SubscriptBox["a", "5"], "+", 
          SubscriptBox["a", "6"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "3"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "3"]}], ")"}], "2"]}], ")"}]}], 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "2"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "2"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "4"], "+", 
           SubscriptBox["a", "5"], "+", 
           SubscriptBox["a", "6"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "1"], "-", 
              SubscriptBox["x", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "1"], "-", 
              SubscriptBox["x", "3"]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "1"]}], "+", 
               SubscriptBox["y", "2"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "3"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "1"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "2"]}], "+", 
               SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", "4"], "+", 
          SubscriptBox["a", "5"], "+", 
          SubscriptBox["a", "6"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "3"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}]}], ")"}]}], 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "2"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "2"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "4"], "+", 
           SubscriptBox["a", "5"], "+", 
           SubscriptBox["a", "6"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "1"], "-", 
              SubscriptBox["x", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "1"], "-", 
              SubscriptBox["x", "3"]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "1"]}], "+", 
               SubscriptBox["y", "2"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "1"], "-", 
               SubscriptBox["y", "3"]}], ")"}]}], "+", 
            RowBox[{
             SubscriptBox["x", "1"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["y", "2"]}], "+", 
               SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", "4"], "+", 
          SubscriptBox["a", "5"], "+", 
          SubscriptBox["a", "6"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}], "2"]}], ")"}]}], 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "1"]}], "+", 
              SubscriptBox["y", "2"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["y", "1"], "-", 
              SubscriptBox["y", "3"]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["x", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["y", "2"]}], "+", 
              SubscriptBox["y", "3"]}], ")"}]}]}], ")"}], "2"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.67319759482891*^9, 3.6731977339769344`*^9, 
  3.6731978318073435`*^9, 3.673197870748914*^9, 3.6731983531718144`*^9, 
  3.673198464418888*^9, 3.673198838215095*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local load vector", "Subsubsection",
 CellChangeTimes->{{3.672902382846168*^9, 3.6729024233021145`*^9}, {
  3.6729071294706197`*^9, 3.6729071307699413`*^9}, {3.6730228708791847`*^9, 
  3.673022873971901*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"loadVector", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Area", "@", "element"}], "12"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["f", "1"]}], "+", 
       SubscriptBox["f", "2"], "+", 
       SubscriptBox["f", "3"]}], ",", 
      RowBox[{
       SubscriptBox["f", "1"], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["f", "2"]}], "+", 
       SubscriptBox["f", "3"]}], ",", 
      RowBox[{
       SubscriptBox["f", "1"], "+", 
       SubscriptBox["f", "2"], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["f", "3"]}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730229983037715`*^9, 3.6730230780631847`*^9}, 
   3.673023138582294*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "3"], 
    RowBox[{
     SubscriptBox["f", "k"], 
     RowBox[{
      SubscriptBox["\[Phi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadVectorTest", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "i"], "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6730228767125096`*^9, 3.673022946431862*^9}, {
  3.6731972110227203`*^9, 3.6731972182519245`*^9}, {3.6731973169981985`*^9, 
  3.6731973183582854`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"loadVector", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["f", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["f", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"loadVectorTest", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "1"], "\[Rule]", "13"}], ",", 
    RowBox[{
     SubscriptBox["f", "2"], "\[Rule]", " ", "3"}], ",", 
    RowBox[{
     SubscriptBox["f", "3"], "\[Rule]", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["y", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", "1"}], ",", 
    RowBox[{
     SubscriptBox["y", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["x", "3"], "\[Rule]", 
     FractionBox["3", "4"]}], ",", 
    RowBox[{
     SubscriptBox["y", "3"], "\[Rule]", "2"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6730229601334524`*^9, 3.6730229840182767`*^9}, {
  3.6730230921307087`*^9, 3.6730231264392667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["7", "6"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6730229642206492`*^9, 3.673022984393436*^9}, {
   3.6730231283276014`*^9, 3.673023144840283*^9}, 3.673090977914595*^9, {
   3.673197307493347*^9, 3.673197325696413*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["7", "6"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6730229642206492`*^9, 3.673022984393436*^9}, {
   3.6730231283276014`*^9, 3.673023144840283*^9}, 3.673090977914595*^9, {
   3.673197307493347*^9, 3.6731973257101707`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local load vector: quadratic basis", "Subsubsection",
 CellChangeTimes->{{3.672902382846168*^9, 3.6729024233021145`*^9}, {
  3.6729071294706197`*^9, 3.6729071307699413`*^9}, {3.6730228708791847`*^9, 
  3.673022873971901*^9}, {3.673707832679005*^9, 3.6737078389981127`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "6"], 
    RowBox[{
     SubscriptBox["f", "k"], 
     RowBox[{
      SubscriptBox["\[Psi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadVectorQuad", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"u", ",", "v"}], "]"}], 
        RowBox[{
         SubscriptBox["\[Phi]", "i"], "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], "\[Element]", "element"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", 
  RowBox[{"FullSimplify", "@", "loadVectorQuad"}]}]}], "Input",
 CellChangeTimes->{{3.6737078405610514`*^9, 3.67370790781397*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "120"], " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["f", "1"]}], "-", 
          SubscriptBox["f", "2"], "-", 
          SubscriptBox["f", "3"], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["f", "4"]}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["f", "5"]}], "+", 
          RowBox[{"8", " ", 
           SubscriptBox["f", "6"]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "120"]}], " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["f", "1"], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["f", "2"]}], "+", 
          SubscriptBox["f", "3"], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SubscriptBox["f", "4"]}], "+", 
             SubscriptBox["f", "5"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["f", "6"]}]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "120"]}], " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "3"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "3"]}], ")"}]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["f", "1"], "+", 
          SubscriptBox["f", "2"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["f", "3"], "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["f", "4"], "+", 
                SubscriptBox["f", "5"]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["f", "6"]}]}], ")"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6737079984158163`*^9, 3.673708116660242*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrals over edges", "Section",
 CellChangeTimes->{{3.672750198580048*^9, 3.67275020805842*^9}}],

Cell[CellGroupData[{

Cell["Integrals", "Subsection",
 CellChangeTimes->{{3.6730921395866146`*^9, 3.6730921698887897`*^9}, 
   3.6730944183856883`*^9}],

Cell[CellGroupData[{

Cell["Local Robin matrix", "Subsubsection",
 CellChangeTimes->{{3.6730944324083104`*^9, 3.6730944486953983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "2"], 
    RowBox[{
     SubscriptBox["\[Kappa]", "k"], 
     RowBox[{
      SubscriptBox["\[Phi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"robinMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"\[Kappa]", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "i"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "j"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "1"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "1"]}], ")"}], "2"]}], "]"}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "robinMatrix"}]}], "Input",
 CellChangeTimes->{{3.6730930195334473`*^9, 3.673093020378626*^9}, {
   3.6730936949183908`*^9, 3.6730939093012276`*^9}, 3.673093979555176*^9, {
   3.673094475832699*^9, 3.6730944952213984`*^9}, {3.6731972259202375`*^9, 
   3.6731972372363434`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SubscriptBox["\[Kappa]", "1"]}], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         SubscriptBox["\[Kappa]", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "12"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "1"], "-", 
            SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Kappa]", "1"], "+", 
         RowBox[{"3", " ", 
          SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.673094498526696*^9, 3.673197246163967*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local Robin vector", "Subsubsection",
 CellChangeTimes->{{3.6730944324083104`*^9, 3.6730944628494644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["g", "D"], "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "2"], 
    RowBox[{
     SubscriptBox["g", 
      SubscriptBox["D", "k"]], 
     RowBox[{
      SubscriptBox["\[Phi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["g", "N"], "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "2"], 
    RowBox[{
     SubscriptBox["g", 
      SubscriptBox["N", "k"]], 
     RowBox[{
      SubscriptBox["\[Phi]", "k"], "[", 
      RowBox[{"u", ",", "v"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"robinVector", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Kappa]", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["x", "2"], "-", 
                SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
            RowBox[{
             SubscriptBox["y", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "2"], "-", 
                SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
          RowBox[{
           SubscriptBox["g", "D"], "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["x", "2"], "-", 
                SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
            RowBox[{
             SubscriptBox["y", "1"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "2"], "-", 
                SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}]}], "+", 
         RowBox[{
          SubscriptBox["g", "N"], "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "1"], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["x", "2"], "-", 
               SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
           RowBox[{
            SubscriptBox["y", "1"], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["y", "2"], "-", 
               SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}]}], ")"}], 
       RowBox[{
        SubscriptBox["\[Phi]", "i"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "2"], "-", 
             SubscriptBox["x", "1"]}], ")"}], "t"}]}], ",", 
         RowBox[{
          SubscriptBox["y", "1"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "2"], "-", 
             SubscriptBox["y", "1"]}], ")"}], "t"}]}]}], "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "2"], "-", 
            SubscriptBox["x", "1"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "1"]}], ")"}], "2"]}], "]"}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "robinVector"}]}], "Input",
 CellChangeTimes->{{3.673094197363437*^9, 3.6730943517830105`*^9}, 
   3.6730944664542027`*^9, {3.6730945047237654`*^9, 3.673094521424313*^9}, {
   3.6731972506636453`*^9, 3.6731972812547245`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "12"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "1"]]}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "2"]]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "1"]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SubscriptBox["\[Kappa]", "1"]}], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "12"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["x", "1"], "-", 
             SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "1"], "-", 
             SubscriptBox["y", "2"]}], ")"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "1"]]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["g", 
            SubscriptBox["N", "2"]]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "1"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             SubscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["g", 
            SubscriptBox["D", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Kappa]", "1"], "+", 
             RowBox[{"3", " ", 
              SubscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.673094360070163*^9, 3.6730945295409527`*^9, 
  3.6731972922737727`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 141, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[724, 26, 152, 2, 99, "Title"],
Cell[CellGroupData[{
Cell[901, 32, 175, 2, 69, "Section"],
Cell[CellGroupData[{
Cell[1101, 38, 92, 1, 47, "Subsection"],
Cell[1196, 41, 1040, 32, 32, "Text"],
Cell[2239, 75, 2787, 81, 133, "Input"],
Cell[CellGroupData[{
Cell[5051, 160, 2767, 73, 124, "Input"],
Cell[7821, 235, 163934, 2856, 353, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171804, 3097, 153, 2, 47, "Subsection"],
Cell[171960, 3101, 1448, 40, 73, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173445, 3146, 101, 1, 47, "Subsection"],
Cell[CellGroupData[{
Cell[173571, 3151, 109, 1, 37, "Subsubsection"],
Cell[173683, 3154, 2828, 80, 131, "Input"],
Cell[176514, 3236, 1425, 40, 87, "Input"],
Cell[177942, 3278, 175, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[178142, 3285, 1649, 50, 86, "Input"],
Cell[179794, 3337, 981, 24, 48, "Output"],
Cell[180778, 3363, 983, 24, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181810, 3393, 168, 2, 37, "Subsubsection"],
Cell[181981, 3397, 5654, 173, 130, "Input"],
Cell[187638, 3572, 2027, 56, 107, "Input"],
Cell[189668, 3630, 176, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[189869, 3637, 1600, 49, 86, "Input"],
Cell[191472, 3688, 979, 29, 48, "Output"],
Cell[192454, 3719, 981, 29, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193484, 3754, 271, 7, 37, "Subsubsection"],
Cell[193758, 3763, 1239, 37, 38, "Text"],
Cell[195000, 3802, 5278, 157, 330, "Input"],
Cell[CellGroupData[{
Cell[200303, 3963, 2609, 66, 106, "Input"],
Cell[202915, 4031, 580357, 9811, 353, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783309, 13847, 2190, 56, 107, "Input"],
Cell[785502, 13905, 21458, 649, 123, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[807009, 14560, 214, 3, 37, "Subsubsection"],
Cell[807226, 14565, 752, 24, 48, "Input"],
Cell[807981, 14591, 1069, 33, 95, "Input"],
Cell[CellGroupData[{
Cell[809075, 14628, 1596, 49, 94, "Input"],
Cell[810674, 14679, 319, 7, 52, "Output"],
Cell[810996, 14688, 321, 7, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[811366, 14701, 279, 3, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[811670, 14708, 1068, 33, 117, "Input"],
Cell[812741, 14743, 4408, 133, 167, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[817222, 14884, 104, 1, 108, "Section"],
Cell[CellGroupData[{
Cell[817351, 14889, 129, 2, 73, "Subsection"],
Cell[CellGroupData[{
Cell[817505, 14895, 113, 1, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[817643, 14900, 3013, 91, 267, "Input"],
Cell[820659, 14993, 2931, 92, 111, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[823639, 15091, 113, 1, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[823777, 15096, 4056, 124, 390, "Input"],
Cell[827836, 15222, 3160, 95, 111, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

